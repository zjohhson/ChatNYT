{"ast":null,"code":"import t from \"../lib/LdrsBaseElement.js\";\nvar e = ':host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-size);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{--uib-center:calc(var(--uib-size)/2 - var(--uib-size)/5/2);animation:rotate calc(var(--uib-speed)*3) linear infinite;height:var(--uib-size);position:relative;width:var(--uib-size)}.container,.dot{align-items:center;display:flex;justify-content:flex-start}.dot{height:100%;left:0;position:absolute;top:0;width:100%}.dot:before{animation:oscillate var(--uib-speed) ease-in-out infinite alternate;background-color:var(--uib-color);border-radius:50%;content:\"\";height:20%;transition:background-color .3s ease;width:20%}.dot:first-child:before{transform:translateX(var(--uib-center))}.dot:nth-child(2){transform:rotate(45deg)}.dot:nth-child(2):before{animation-delay:calc(var(--uib-speed)*-.125);transform:translateX(var(--uib-center))}.dot:nth-child(3){transform:rotate(90deg)}.dot:nth-child(3):before{animation-delay:calc(var(--uib-speed)*-.25);transform:translateX(var(--uib-center))}.dot:nth-child(4){transform:rotate(135deg)}.dot:nth-child(4):before{animation-delay:calc(var(--uib-speed)*-.375);transform:translateX(var(--uib-center))}.dot:nth-child(5){transform:rotate(180deg)}.dot:nth-child(5):before{animation-delay:calc(var(--uib-speed)*-.5);transform:translateX(var(--uib-center))}.dot:nth-child(6){transform:rotate(225deg)}.dot:nth-child(6):before{animation-delay:calc(var(--uib-speed)*-.625);transform:translateX(var(--uib-center))}.dot:nth-child(7){transform:rotate(270deg)}.dot:nth-child(7):before{animation-delay:calc(var(--uib-speed)*-.75);transform:translateX(var(--uib-center))}.dot:nth-child(8){transform:rotate(315deg)}.dot:nth-child(8):before{animation-delay:calc(var(--uib-speed)*-.875);transform:translateX(var(--uib-center))}@keyframes oscillate{0%{opacity:.25;transform:translateX(var(--uib-center)) scale(0)}to{opacity:1;transform:translateX(0) scale(1)}}@keyframes rotate{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}';\n\nclass a extends t {\n  _attributes = [\"size\", \"color\", \"speed\"];\n  size;\n  color;\n  speed;\n\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"speed\"];\n  }\n\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 40,\n      color: \"black\",\n      speed: .9\n    }), this.template.innerHTML = `\\n      <div class=\"container\">\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n      </div>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n        }\\n        ${e}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n\n  attributeChangedCallback() {\n    const t = this.shadow.querySelector(\"style\");\n    t && (t.innerHTML = `\\n      :host{\\n        --uib-size: ${this.size}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n      }\\n      ${e}\\n    `);\n  }\n\n}\n\nvar i = {\n  register: function () {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"l-spiral\";\n    customElements.get(t) || customElements.define(t, class extends a {});\n  },\n  element: a\n};\nexport { i as default };","map":{"version":3,"mappings":";;;AAEA,MAAMA,CAAN,SAAqBC,CAArB,CAAqBA;AACjBC,gBAAc,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAdA;AACAC;AACAC;AACAC;;AACWC;AACP,WAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAP;AAEJC;;AAAAA;AACIC,aACAC,KAAKC,mBAALD,CAAyBA,KAAKP,WAA9BO,CADAD,EAEAC,KAAKE,OAALF,CAAaA,KAAKP,WAAlBO,CAFAD;AAIJI;;AAAAA;AACIH,SAAKI,kBAALJ,IACAA,KAAKK,iBAALL,CAAuB;AACnBN,YAAM,EADa;AAEnBC,aAAO,OAFY;AAGnBC,aAAO;AAHY,KAAvBI,CADAA,EAMAA,KAAKM,QAALN,CAAcO,SAAdP,GAA0B,+WAaVA,KAAKN,mCACJM,KAAKL,kCACLK,KAAKJ,+BAEpBY,yBAvBFR,EA0BAA,KAAKS,MAALT,CAAYU,eAAZV,CAA4BA,KAAKM,QAALN,CAAcW,OAAdX,CAAsBY,SAAtBZ,CAAsBY,CAAU,CAAhCZ,CAA5BA,CA1BAA;AA4BJa;;AAAAA;AACI,UAAMC,IAAUd,KAAKS,MAALT,CAAYe,aAAZf,CAA0B,OAA1BA,CAAhB;AACKc,UAELA,EAAQP,SAARO,GAAoB,uCAENd,KAAKN,iCACJM,KAAKL,gCACLK,KAAKJ,2BAEpBY,SARKM;AAUR;;AAtDgBtB;;AAwDrB,IAAewB;AACXC,YAAU,YAAQ;AAAA,QAAPC,CAAO;AACTC,mBAAeC,GAAfD,CAAmBD,CAAnBC,KACDA,eAAeE,MAAfF,CAAsBD,CAAtBC,EAA4B,cAAc5B,CAAd,CAAcA,EAA1C4B,CADCA;AAGJ,GALM;AAOXG,WAAS/B;AAPE,CAAf;AAOaA","names":["Spiral","Base","_attributes","size","color","speed","observedAttributes","constructor","super","this","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","template","innerHTML","styles","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","styleEl","querySelector","spiral","register","name","customElements","get","define","element"],"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/ldrs/temp-ts-out/elements/spiral.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './spiral.scss';\nclass Spiral extends Base {\n    _attributes = ['size', 'color', 'speed'];\n    size;\n    color;\n    speed;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 40,\n            color: 'black',\n            speed: 0.9,\n        });\n        this.template.innerHTML = `\n      <div class=\"container\">\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n      </div>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        if (!styleEl)\n            return;\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-spiral') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Spiral {\n            });\n        }\n    },\n    element: Spiral,\n};\n"]},"metadata":{},"sourceType":"module"}