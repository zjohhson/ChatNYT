{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"./EntryDependency\")} EntryDependency */\n\n\nclass DllEntryDependency extends Dependency {\n  /**\n   * @param {EntryDependency[]} dependencies dependencies\n   * @param {string} name name\n   */\n  constructor(dependencies, name) {\n    super();\n    this.dependencies = dependencies;\n    this.name = name;\n  }\n\n  get type() {\n    return \"dll entry\";\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.dependencies);\n    write(this.name);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.dependencies = read();\n    this.name = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(DllEntryDependency, \"webpack/lib/dependencies/DllEntryDependency\");\nmodule.exports = DllEntryDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/DllEntryDependency.js"],"names":["Dependency","require","makeSerializable","DllEntryDependency","constructor","dependencies","name","type","serialize","context","write","deserialize","read","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;AAEA;;AACA;;AACA;;;AAEA,MAAME,kBAAN,SAAiCH,UAAjC,CAA4C;AAC3C;AACD;AACA;AACA;AACCI,EAAAA,WAAW,CAACC,YAAD,EAAeC,IAAf,EAAqB;AAC/B;AAEA,SAAKD,YAAL,GAAoBA,YAApB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,WAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,OAAlB;AAEAC,IAAAA,KAAK,CAAC,KAAKL,YAAN,CAAL;AACAK,IAAAA,KAAK,CAAC,KAAKJ,IAAN,CAAL;AAEA,UAAME,SAAN,CAAgBC,OAAhB;AACA;AAED;AACD;AACA;;;AACCE,EAAAA,WAAW,CAACF,OAAD,EAAU;AACpB,UAAM;AAAEG,MAAAA;AAAF,QAAWH,OAAjB;AAEA,SAAKJ,YAAL,GAAoBO,IAAI,EAAxB;AACA,SAAKN,IAAL,GAAYM,IAAI,EAAhB;AAEA,UAAMD,WAAN,CAAkBF,OAAlB;AACA;;AAtC0C;;AAyC5CP,gBAAgB,CACfC,kBADe,EAEf,6CAFe,CAAhB;AAKAU,MAAM,CAACC,OAAP,GAAiBX,kBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./EntryDependency\")} EntryDependency */\n\nclass DllEntryDependency extends Dependency {\n\t/**\n\t * @param {EntryDependency[]} dependencies dependencies\n\t * @param {string} name name\n\t */\n\tconstructor(dependencies, name) {\n\t\tsuper();\n\n\t\tthis.dependencies = dependencies;\n\t\tthis.name = name;\n\t}\n\n\tget type() {\n\t\treturn \"dll entry\";\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.dependencies);\n\t\twrite(this.name);\n\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.dependencies = read();\n\t\tthis.name = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tDllEntryDependency,\n\t\"webpack/lib/dependencies/DllEntryDependency\"\n);\n\nmodule.exports = DllEntryDependency;\n"]},"metadata":{},"sourceType":"script"}