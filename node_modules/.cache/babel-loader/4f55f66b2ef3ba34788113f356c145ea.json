{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst InitFragment = require(\"../InitFragment\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {string[]|null} path the property path array\n * @returns {string} the converted path\n */\n\n\nconst pathToString = path => path !== null && path.length > 0 ? path.map(part => `[${JSON.stringify(part)}]`).join(\"\") : \"\";\n\nclass ProvidedDependency extends ModuleDependency {\n  /**\n   * @param {string} request request\n   * @param {string} identifier identifier\n   * @param {string[]} ids ids\n   * @param {Range} range range\n   */\n  constructor(request, identifier, ids, range) {\n    super(request);\n    this.identifier = identifier;\n    this.ids = ids;\n    this.range = range;\n    this._hashUpdate = undefined;\n  }\n\n  get type() {\n    return \"provided\";\n  }\n\n  get category() {\n    return \"esm\";\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    let ids = this.ids;\n    if (ids.length === 0) return Dependency.EXPORTS_OBJECT_REFERENCED;\n    return [ids];\n  }\n  /**\n   * Update the hash\n   * @param {Hash} hash hash to be updated\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    if (this._hashUpdate === undefined) {\n      this._hashUpdate = this.identifier + (this.ids ? this.ids.join(\",\") : \"\");\n    }\n\n    hash.update(this._hashUpdate);\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.identifier);\n    write(this.ids);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.identifier = read();\n    this.ids = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(ProvidedDependency, \"webpack/lib/dependencies/ProvidedDependency\");\n\nclass ProvidedDependencyTemplate extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtime,\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      initFragments,\n      runtimeRequirements\n    } = _ref;\n    const dep =\n    /** @type {ProvidedDependency} */\n    dependency;\n    const connection =\n    /** @type {ModuleGraphConnection} */\n    moduleGraph.getConnection(dep);\n    const exportsInfo = moduleGraph.getExportsInfo(connection.module);\n    const usedName = exportsInfo.getUsedName(dep.ids, runtime);\n    initFragments.push(new InitFragment(`/* provided dependency */ var ${dep.identifier} = ${runtimeTemplate.moduleExports({\n      module: moduleGraph.getModule(dep),\n      chunkGraph,\n      request: dep.request,\n      runtimeRequirements\n    })}${pathToString(\n    /** @type {string[]} */\n    usedName)};\\n`, InitFragment.STAGE_PROVIDES, 1, `provided ${dep.identifier}`));\n    source.replace(dep.range[0], dep.range[1] - 1, dep.identifier);\n  }\n\n}\n\nProvidedDependency.Template = ProvidedDependencyTemplate;\nmodule.exports = ProvidedDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/ProvidedDependency.js"],"names":["Dependency","require","InitFragment","makeSerializable","ModuleDependency","pathToString","path","length","map","part","JSON","stringify","join","ProvidedDependency","constructor","request","identifier","ids","range","_hashUpdate","undefined","type","category","getReferencedExports","moduleGraph","runtime","EXPORTS_OBJECT_REFERENCED","updateHash","hash","context","update","serialize","write","deserialize","read","ProvidedDependencyTemplate","Template","apply","dependency","source","runtimeTemplate","chunkGraph","initFragments","runtimeRequirements","dep","connection","getConnection","exportsInfo","getExportsInfo","module","usedName","getUsedName","push","moduleExports","getModule","STAGE_PROVIDES","replace","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Florent Cailhol @ooflorent\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst InitFragment = require(\"../InitFragment\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @param {string[]|null} path the property path array\n * @returns {string} the converted path\n */\nconst pathToString = path =>\n\tpath !== null && path.length > 0\n\t\t? path.map(part => `[${JSON.stringify(part)}]`).join(\"\")\n\t\t: \"\";\n\nclass ProvidedDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request\n\t * @param {string} identifier identifier\n\t * @param {string[]} ids ids\n\t * @param {Range} range range\n\t */\n\tconstructor(request, identifier, ids, range) {\n\t\tsuper(request);\n\t\tthis.identifier = identifier;\n\t\tthis.ids = ids;\n\t\tthis.range = range;\n\t\tthis._hashUpdate = undefined;\n\t}\n\n\tget type() {\n\t\treturn \"provided\";\n\t}\n\n\tget category() {\n\t\treturn \"esm\";\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\tlet ids = this.ids;\n\t\tif (ids.length === 0) return Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\treturn [ids];\n\t}\n\n\t/**\n\t * Update the hash\n\t * @param {Hash} hash hash to be updated\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tif (this._hashUpdate === undefined) {\n\t\t\tthis._hashUpdate = this.identifier + (this.ids ? this.ids.join(\",\") : \"\");\n\t\t}\n\t\thash.update(this._hashUpdate);\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.identifier);\n\t\twrite(this.ids);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.identifier = read();\n\t\tthis.ids = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tProvidedDependency,\n\t\"webpack/lib/dependencies/ProvidedDependency\"\n);\n\nclass ProvidedDependencyTemplate extends ModuleDependency.Template {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(\n\t\tdependency,\n\t\tsource,\n\t\t{\n\t\t\truntime,\n\t\t\truntimeTemplate,\n\t\t\tmoduleGraph,\n\t\t\tchunkGraph,\n\t\t\tinitFragments,\n\t\t\truntimeRequirements\n\t\t}\n\t) {\n\t\tconst dep = /** @type {ProvidedDependency} */ (dependency);\n\t\tconst connection =\n\t\t\t/** @type {ModuleGraphConnection} */\n\t\t\t(moduleGraph.getConnection(dep));\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(connection.module);\n\t\tconst usedName = exportsInfo.getUsedName(dep.ids, runtime);\n\t\tinitFragments.push(\n\t\t\tnew InitFragment(\n\t\t\t\t`/* provided dependency */ var ${\n\t\t\t\t\tdep.identifier\n\t\t\t\t} = ${runtimeTemplate.moduleExports({\n\t\t\t\t\tmodule: moduleGraph.getModule(dep),\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\trequest: dep.request,\n\t\t\t\t\truntimeRequirements\n\t\t\t\t})}${pathToString(/** @type {string[]} */ (usedName))};\\n`,\n\t\t\t\tInitFragment.STAGE_PROVIDES,\n\t\t\t\t1,\n\t\t\t\t`provided ${dep.identifier}`\n\t\t\t)\n\t\t);\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, dep.identifier);\n\t}\n}\n\nProvidedDependency.Template = ProvidedDependencyTemplate;\n\nmodule.exports = ProvidedDependency;\n"]},"metadata":{},"sourceType":"script"}