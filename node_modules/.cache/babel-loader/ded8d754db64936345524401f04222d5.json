{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  OriginalSource,\n  RawSource\n} = require(\"webpack-sources\");\n\nconst Module = require(\"./Module\");\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"./ModuleTypeConstants\");\n\nconst makeSerializable = require(\"./util/makeSerializable\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass RawModule extends Module {\n  /**\n   * @param {string} source source code\n   * @param {string} identifier unique identifier\n   * @param {string=} readableIdentifier readable identifier\n   * @param {ReadonlySet<string>=} runtimeRequirements runtime requirements needed for the source code\n   */\n  constructor(source, identifier, readableIdentifier, runtimeRequirements) {\n    super(JAVASCRIPT_MODULE_TYPE_DYNAMIC, null);\n    this.sourceStr = source;\n    this.identifierStr = identifier || this.sourceStr;\n    this.readableIdentifierStr = readableIdentifier || this.identifierStr;\n    this.runtimeRequirements = runtimeRequirements || null;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return TYPES;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return this.identifierStr;\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return Math.max(1, this.sourceStr.length);\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return (\n      /** @type {string} */\n      requestShortener.shorten(this.readableIdentifierStr)\n    );\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    return callback(null, !this.buildMeta);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {};\n    this.buildInfo = {\n      cacheable: true\n    };\n    callback();\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(context) {\n    const sources = new Map();\n\n    if (this.useSourceMap || this.useSimpleSourceMap) {\n      sources.set(\"javascript\", new OriginalSource(this.sourceStr, this.identifier()));\n    } else {\n      sources.set(\"javascript\", new RawSource(this.sourceStr));\n    }\n\n    return {\n      sources,\n      runtimeRequirements: this.runtimeRequirements\n    };\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    hash.update(this.sourceStr);\n    super.updateHash(hash, context);\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.sourceStr);\n    write(this.identifierStr);\n    write(this.readableIdentifierStr);\n    write(this.runtimeRequirements);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.sourceStr = read();\n    this.identifierStr = read();\n    this.readableIdentifierStr = read();\n    this.runtimeRequirements = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(RawModule, \"webpack/lib/RawModule\");\nmodule.exports = RawModule;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/RawModule.js"],"names":["OriginalSource","RawSource","require","Module","JAVASCRIPT_MODULE_TYPE_DYNAMIC","makeSerializable","TYPES","Set","RawModule","constructor","source","identifier","readableIdentifier","runtimeRequirements","sourceStr","identifierStr","readableIdentifierStr","getSourceTypes","size","type","Math","max","length","requestShortener","shorten","needBuild","context","callback","buildMeta","build","options","compilation","resolver","fs","buildInfo","cacheable","codeGeneration","sources","Map","useSourceMap","useSimpleSourceMap","set","updateHash","hash","update","serialize","write","deserialize","read","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst Module = require(\"./Module\");\nconst { JAVASCRIPT_MODULE_TYPE_DYNAMIC } = require(\"./ModuleTypeConstants\");\nconst makeSerializable = require(\"./util/makeSerializable\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass RawModule extends Module {\n\t/**\n\t * @param {string} source source code\n\t * @param {string} identifier unique identifier\n\t * @param {string=} readableIdentifier readable identifier\n\t * @param {ReadonlySet<string>=} runtimeRequirements runtime requirements needed for the source code\n\t */\n\tconstructor(source, identifier, readableIdentifier, runtimeRequirements) {\n\t\tsuper(JAVASCRIPT_MODULE_TYPE_DYNAMIC, null);\n\t\tthis.sourceStr = source;\n\t\tthis.identifierStr = identifier || this.sourceStr;\n\t\tthis.readableIdentifierStr = readableIdentifier || this.identifierStr;\n\t\tthis.runtimeRequirements = runtimeRequirements || null;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn this.identifierStr;\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn Math.max(1, this.sourceStr.length);\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn /** @type {string} */ (\n\t\t\trequestShortener.shorten(this.readableIdentifierStr)\n\t\t);\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, !this.buildMeta);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {};\n\t\tthis.buildInfo = {\n\t\t\tcacheable: true\n\t\t};\n\t\tcallback();\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration(context) {\n\t\tconst sources = new Map();\n\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\tsources.set(\n\t\t\t\t\"javascript\",\n\t\t\t\tnew OriginalSource(this.sourceStr, this.identifier())\n\t\t\t);\n\t\t} else {\n\t\t\tsources.set(\"javascript\", new RawSource(this.sourceStr));\n\t\t}\n\t\treturn { sources, runtimeRequirements: this.runtimeRequirements };\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\thash.update(this.sourceStr);\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.sourceStr);\n\t\twrite(this.identifierStr);\n\t\twrite(this.readableIdentifierStr);\n\t\twrite(this.runtimeRequirements);\n\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.sourceStr = read();\n\t\tthis.identifierStr = read();\n\t\tthis.readableIdentifierStr = read();\n\t\tthis.runtimeRequirements = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(RawModule, \"webpack/lib/RawModule\");\n\nmodule.exports = RawModule;\n"]},"metadata":{},"sourceType":"script"}