{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\").ExportSpec} ExportSpec */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../json/JsonData\")} JsonData */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n\nconst getExportsFromData = data => {\n  if (data && typeof data === \"object\") {\n    if (Array.isArray(data)) {\n      return data.length < 100 ? data.map((item, idx) => {\n        return {\n          name: `${idx}`,\n          canMangle: true,\n          exports: getExportsFromData(item)\n        };\n      }) : undefined;\n    } else {\n      const exports = [];\n\n      for (const key of Object.keys(data)) {\n        exports.push({\n          name: key,\n          canMangle: true,\n          exports: getExportsFromData(data[key])\n        });\n      }\n\n      return exports;\n    }\n  }\n\n  return undefined;\n};\n\nclass JsonExportsDependency extends NullDependency {\n  /**\n   * @param {JsonData} data json data\n   */\n  constructor(data) {\n    super();\n    this.data = data;\n  }\n\n  get type() {\n    return \"json exports\";\n  }\n  /**\n   * Returns the exported names\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {ExportsSpec | undefined} export names\n   */\n\n\n  getExports(moduleGraph) {\n    return {\n      exports: getExportsFromData(this.data && this.data.get()),\n      dependencies: undefined\n    };\n  }\n  /**\n   * Update the hash\n   * @param {Hash} hash hash to be updated\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    this.data.updateHash(hash);\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.data);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.data = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(JsonExportsDependency, \"webpack/lib/dependencies/JsonExportsDependency\");\nmodule.exports = JsonExportsDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/JsonExportsDependency.js"],"names":["makeSerializable","require","NullDependency","getExportsFromData","data","Array","isArray","length","map","item","idx","name","canMangle","exports","undefined","key","Object","keys","push","JsonExportsDependency","constructor","type","getExports","moduleGraph","get","dependencies","updateHash","hash","context","serialize","write","deserialize","read","module"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA9B;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAME,kBAAkB,GAAGC,IAAI,IAAI;AAClC,MAAIA,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAA5B,EAAsC;AACrC,QAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AACxB,aAAOA,IAAI,CAACG,MAAL,GAAc,GAAd,GACJH,IAAI,CAACI,GAAL,CAAS,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxB,eAAO;AACNC,UAAAA,IAAI,EAAG,GAAED,GAAI,EADP;AAENE,UAAAA,SAAS,EAAE,IAFL;AAGNC,UAAAA,OAAO,EAAEV,kBAAkB,CAACM,IAAD;AAHrB,SAAP;AAKC,OAND,CADI,GAQJK,SARH;AASA,KAVD,MAUO;AACN,YAAMD,OAAO,GAAG,EAAhB;;AACA,WAAK,MAAME,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYb,IAAZ,CAAlB,EAAqC;AACpCS,QAAAA,OAAO,CAACK,IAAR,CAAa;AACZP,UAAAA,IAAI,EAAEI,GADM;AAEZH,UAAAA,SAAS,EAAE,IAFC;AAGZC,UAAAA,OAAO,EAAEV,kBAAkB,CAACC,IAAI,CAACW,GAAD,CAAL;AAHf,SAAb;AAKA;;AACD,aAAOF,OAAP;AACA;AACD;;AACD,SAAOC,SAAP;AACA,CAzBD;;AA2BA,MAAMK,qBAAN,SAAoCjB,cAApC,CAAmD;AAClD;AACD;AACA;AACCkB,EAAAA,WAAW,CAAChB,IAAD,EAAO;AACjB;AACA,SAAKA,IAAL,GAAYA,IAAZ;AACA;;AAEO,MAAJiB,IAAI,GAAG;AACV,WAAO,cAAP;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,UAAU,CAACC,WAAD,EAAc;AACvB,WAAO;AACNV,MAAAA,OAAO,EAAEV,kBAAkB,CAAC,KAAKC,IAAL,IAAa,KAAKA,IAAL,CAAUoB,GAAV,EAAd,CADrB;AAENC,MAAAA,YAAY,EAAEX;AAFR,KAAP;AAIA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCY,EAAAA,UAAU,CAACC,IAAD,EAAOC,OAAP,EAAgB;AACzB,SAAKxB,IAAL,CAAUsB,UAAV,CAAqBC,IAArB;AACA;AAED;AACD;AACA;;;AACCE,EAAAA,SAAS,CAACD,OAAD,EAAU;AAClB,UAAM;AAAEE,MAAAA;AAAF,QAAYF,OAAlB;AACAE,IAAAA,KAAK,CAAC,KAAK1B,IAAN,CAAL;AACA,UAAMyB,SAAN,CAAgBD,OAAhB;AACA;AAED;AACD;AACA;;;AACCG,EAAAA,WAAW,CAACH,OAAD,EAAU;AACpB,UAAM;AAAEI,MAAAA;AAAF,QAAWJ,OAAjB;AACA,SAAKxB,IAAL,GAAY4B,IAAI,EAAhB;AACA,UAAMD,WAAN,CAAkBH,OAAlB;AACA;;AAnDiD;;AAsDnD5B,gBAAgB,CACfmB,qBADe,EAEf,gDAFe,CAAhB;AAKAc,MAAM,CAACpB,OAAP,GAAiBM,qBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ExportSpec} ExportSpec */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../json/JsonData\")} JsonData */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n\nconst getExportsFromData = data => {\n\tif (data && typeof data === \"object\") {\n\t\tif (Array.isArray(data)) {\n\t\t\treturn data.length < 100\n\t\t\t\t? data.map((item, idx) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: `${idx}`,\n\t\t\t\t\t\t\tcanMangle: true,\n\t\t\t\t\t\t\texports: getExportsFromData(item)\n\t\t\t\t\t\t};\n\t\t\t\t  })\n\t\t\t\t: undefined;\n\t\t} else {\n\t\t\tconst exports = [];\n\t\t\tfor (const key of Object.keys(data)) {\n\t\t\t\texports.push({\n\t\t\t\t\tname: key,\n\t\t\t\t\tcanMangle: true,\n\t\t\t\t\texports: getExportsFromData(data[key])\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn exports;\n\t\t}\n\t}\n\treturn undefined;\n};\n\nclass JsonExportsDependency extends NullDependency {\n\t/**\n\t * @param {JsonData} data json data\n\t */\n\tconstructor(data) {\n\t\tsuper();\n\t\tthis.data = data;\n\t}\n\n\tget type() {\n\t\treturn \"json exports\";\n\t}\n\n\t/**\n\t * Returns the exported names\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {ExportsSpec | undefined} export names\n\t */\n\tgetExports(moduleGraph) {\n\t\treturn {\n\t\t\texports: getExportsFromData(this.data && this.data.get()),\n\t\t\tdependencies: undefined\n\t\t};\n\t}\n\n\t/**\n\t * Update the hash\n\t * @param {Hash} hash hash to be updated\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tthis.data.updateHash(hash);\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.data);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.data = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tJsonExportsDependency,\n\t\"webpack/lib/dependencies/JsonExportsDependency\"\n);\n\nmodule.exports = JsonExportsDependency;\n"]},"metadata":{},"sourceType":"script"}