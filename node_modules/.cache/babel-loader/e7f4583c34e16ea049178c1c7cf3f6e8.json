{"ast":null,"code":"import e from \"../lib/LdrsBaseElement.js\";\nvar t = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:calc(var(--uib-size)*.5);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{align-items:flex-end;display:flex;height:100%;justify-content:space-between;width:100%}.dot{background-color:var(--uib-color);border-radius:50%;flex-shrink:0;height:calc(var(--uib-size)*.17);transition:background-color .3s ease;width:calc(var(--uib-size)*.17)}.dot:first-child{animation:jump var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.45) infinite}.dot:nth-child(2){animation:jump var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.3) infinite}.dot:nth-child(3){animation:jump var(--uib-speed) ease-in-out calc(var(--uib-speed)*-.15) infinite}.dot:nth-child(4){animation:jump var(--uib-speed) ease-in-out infinite}@keyframes jump{0%,to{transform:translateY(0)}50%{transform:translateY(-200%)}}\";\n\nclass i extends e {\n  _attributes = [\"size\", \"color\", \"speed\"];\n  size;\n  color;\n  speed;\n\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"speed\"];\n  }\n\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 47,\n      color: \"black\",\n      speed: 1\n    }), this.template.innerHTML = `\\n      <div class=\"container\">\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n        <div class=\"dot\"></div>\\n      </div>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n        }\\n        ${t}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n\n  attributeChangedCallback() {\n    const e = this.shadow.querySelector(\"style\");\n    e && (e.innerHTML = `\\n      :host{\\n        --uib-size: ${this.size}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n      }\\n      ${t}\\n    `);\n  }\n\n}\n\nvar s = {\n  register: function () {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"l-dot-wave\";\n    customElements.get(e) || customElements.define(e, class extends i {});\n  },\n  element: i\n};\nexport { s as default };","map":{"version":3,"mappings":";;;AAEA,MAAMA,CAAN,SAAsBC,CAAtB,CAAsBA;AAClBC,gBAAc,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAdA;AACAC;AACAC;AACAC;;AACWC;AACP,WAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAAP;AAEJC;;AAAAA;AACIC,aACAC,KAAKC,mBAALD,CAAyBA,KAAKP,WAA9BO,CADAD,EAEAC,KAAKE,OAALF,CAAaA,KAAKP,WAAlBO,CAFAD;AAIJI;;AAAAA;AACIH,SAAKI,kBAALJ,IACAA,KAAKK,iBAALL,CAAuB;AACnBN,YAAM,EADa;AAEnBC,aAAO,OAFY;AAGnBC,aAAO;AAHY,KAAvBI,CADAA,EAMAA,KAAKM,QAALN,CAAcO,SAAdP,GAA0B,2OASVA,KAAKN,mCACJM,KAAKL,kCACLK,KAAKJ,+BAEpBY,yBAnBFR,EAsBAA,KAAKS,MAALT,CAAYU,eAAZV,CAA4BA,KAAKM,QAALN,CAAcW,OAAdX,CAAsBY,SAAtBZ,CAAsBY,CAAU,CAAhCZ,CAA5BA,CAtBAA;AAwBJa;;AAAAA;AACI,UAAMC,IAAUd,KAAKS,MAALT,CAAYe,aAAZf,CAA0B,OAA1BA,CAAhB;AACKc,UAELA,EAAQP,SAARO,GAAoB,uCAENd,KAAKN,iCACJM,KAAKL,gCACLK,KAAKJ,2BAEpBY,SARKM;AAUR;;AAlDiBtB;;AAoDtB,IAAewB;AACXC,YAAU,YAAQ;AAAA,QAAPC,CAAO;AACTC,mBAAeC,GAAfD,CAAmBD,CAAnBC,KACDA,eAAeE,MAAfF,CAAsBD,CAAtBC,EAA4B,cAAc5B,CAAd,CAAcA,EAA1C4B,CADCA;AAGJ,GALM;AAOXG,WAAS/B;AAPE,CAAf;AAOaA","names":["DotWave","Base","_attributes","size","color","speed","observedAttributes","constructor","super","this","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","template","innerHTML","styles","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","styleEl","querySelector","dotWave","register","name","customElements","get","define","element"],"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/ldrs/temp-ts-out/elements/dotWave.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './dotWave.scss';\nclass DotWave extends Base {\n    _attributes = ['size', 'color', 'speed'];\n    size;\n    color;\n    speed;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 47,\n            color: 'black',\n            speed: 1,\n        });\n        this.template.innerHTML = `\n      <div class=\"container\">\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n      </div>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        if (!styleEl)\n            return;\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-dot-wave') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends DotWave {\n            });\n        }\n    },\n    element: DotWave,\n};\n"]},"metadata":{},"sourceType":"module"}