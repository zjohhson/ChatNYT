{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass MapObjectSerializer {\n  /**\n   * @template K, V\n   * @param {Map<K, V>} obj map\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(obj, context) {\n    context.write(obj.size);\n\n    for (const key of obj.keys()) {\n      context.write(key);\n    }\n\n    for (const value of obj.values()) {\n      context.write(value);\n    }\n  }\n  /**\n   * @template K, V\n   * @param {ObjectDeserializerContext} context context\n   * @returns {Map<K, V>} map\n   */\n\n\n  deserialize(context) {\n    /** @type {number} */\n    let size = context.read();\n    /** @type {Map<K, V>} */\n\n    const map = new Map();\n    /** @type {K[]} */\n\n    const keys = [];\n\n    for (let i = 0; i < size; i++) {\n      keys.push(context.read());\n    }\n\n    for (let i = 0; i < size; i++) {\n      map.set(keys[i], context.read());\n    }\n\n    return map;\n  }\n\n}\n\nmodule.exports = MapObjectSerializer;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/serialization/MapObjectSerializer.js"],"names":["MapObjectSerializer","serialize","obj","context","write","size","key","keys","value","values","deserialize","read","map","Map","i","push","set","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA,MAAMA,mBAAN,CAA0B;AACzB;AACD;AACA;AACA;AACA;AACCC,EAAAA,SAAS,CAACC,GAAD,EAAMC,OAAN,EAAe;AACvBA,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,IAAlB;;AACA,SAAK,MAAMC,GAAX,IAAkBJ,GAAG,CAACK,IAAJ,EAAlB,EAA8B;AAC7BJ,MAAAA,OAAO,CAACC,KAAR,CAAcE,GAAd;AACA;;AACD,SAAK,MAAME,KAAX,IAAoBN,GAAG,CAACO,MAAJ,EAApB,EAAkC;AACjCN,MAAAA,OAAO,CAACC,KAAR,CAAcI,KAAd;AACA;AACD;AACD;AACD;AACA;AACA;AACA;;;AACCE,EAAAA,WAAW,CAACP,OAAD,EAAU;AACpB;AACA,QAAIE,IAAI,GAAGF,OAAO,CAACQ,IAAR,EAAX;AACA;;AACA,UAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AACA;;AACA,UAAMN,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAApB,EAA0BS,CAAC,EAA3B,EAA+B;AAC9BP,MAAAA,IAAI,CAACQ,IAAL,CAAUZ,OAAO,CAACQ,IAAR,EAAV;AACA;;AACD,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,IAApB,EAA0BS,CAAC,EAA3B,EAA+B;AAC9BF,MAAAA,GAAG,CAACI,GAAJ,CAAQT,IAAI,CAACO,CAAD,CAAZ,EAAiBX,OAAO,CAACQ,IAAR,EAAjB;AACA;;AACD,WAAOC,GAAP;AACA;;AAlCwB;;AAqC1BK,MAAM,CAACC,OAAP,GAAiBlB,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass MapObjectSerializer {\n\t/**\n\t * @template K, V\n\t * @param {Map<K, V>} obj map\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(obj, context) {\n\t\tcontext.write(obj.size);\n\t\tfor (const key of obj.keys()) {\n\t\t\tcontext.write(key);\n\t\t}\n\t\tfor (const value of obj.values()) {\n\t\t\tcontext.write(value);\n\t\t}\n\t}\n\t/**\n\t * @template K, V\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {Map<K, V>} map\n\t */\n\tdeserialize(context) {\n\t\t/** @type {number} */\n\t\tlet size = context.read();\n\t\t/** @type {Map<K, V>} */\n\t\tconst map = new Map();\n\t\t/** @type {K[]} */\n\t\tconst keys = [];\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tkeys.push(context.read());\n\t\t}\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tmap.set(keys[i], context.read());\n\t\t}\n\t\treturn map;\n\t}\n}\n\nmodule.exports = MapObjectSerializer;\n"]},"metadata":{},"sourceType":"script"}