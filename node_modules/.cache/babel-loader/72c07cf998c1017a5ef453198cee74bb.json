{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n/** @typedef {import(\"../Module\").BuildInfo} BuildInfo */\n\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n\n/** @type {WeakMap<ParserState, boolean>} */\n\n\nconst parserStateExportsState = new WeakMap();\n/**\n * @param {ParserState} parserState parser state\n * @param {boolean} isStrictHarmony strict harmony mode should be enabled\n * @returns {void}\n */\n\nexports.enable = (parserState, isStrictHarmony) => {\n  const value = parserStateExportsState.get(parserState);\n  if (value === false) return;\n  parserStateExportsState.set(parserState, true);\n\n  if (value !== true) {\n    const buildMeta =\n    /** @type {BuildMeta} */\n    parserState.module.buildMeta;\n    buildMeta.exportsType = \"namespace\";\n    const buildInfo =\n    /** @type {BuildInfo} */\n    parserState.module.buildInfo;\n    buildInfo.strict = true;\n    buildInfo.exportsArgument = RuntimeGlobals.exports;\n\n    if (isStrictHarmony) {\n      buildMeta.strictHarmonyModule = true;\n      buildInfo.moduleArgument = \"__webpack_module__\";\n    }\n  }\n};\n/**\n * @param {ParserState} parserState parser state\n * @returns {boolean} true, when enabled\n */\n\n\nexports.isEnabled = parserState => {\n  const value = parserStateExportsState.get(parserState);\n  return value === true;\n};","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/HarmonyExports.js"],"names":["RuntimeGlobals","require","parserStateExportsState","WeakMap","exports","enable","parserState","isStrictHarmony","value","get","set","buildMeta","module","exportsType","buildInfo","strict","exportsArgument","strictHarmonyModule","moduleArgument","isEnabled"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;AAEA;;AACA;;AACA;;AAEA;;;AACA,MAAMC,uBAAuB,GAAG,IAAIC,OAAJ,EAAhC;AAEA;AACA;AACA;AACA;AACA;;AACAC,OAAO,CAACC,MAAR,GAAiB,CAACC,WAAD,EAAcC,eAAd,KAAkC;AAClD,QAAMC,KAAK,GAAGN,uBAAuB,CAACO,GAAxB,CAA4BH,WAA5B,CAAd;AACA,MAAIE,KAAK,KAAK,KAAd,EAAqB;AACrBN,EAAAA,uBAAuB,CAACQ,GAAxB,CAA4BJ,WAA5B,EAAyC,IAAzC;;AACA,MAAIE,KAAK,KAAK,IAAd,EAAoB;AACnB,UAAMG,SAAS;AAAG;AAA0BL,IAAAA,WAAW,CAACM,MAAZ,CAAmBD,SAA/D;AACAA,IAAAA,SAAS,CAACE,WAAV,GAAwB,WAAxB;AACA,UAAMC,SAAS;AAAG;AAA0BR,IAAAA,WAAW,CAACM,MAAZ,CAAmBE,SAA/D;AACAA,IAAAA,SAAS,CAACC,MAAV,GAAmB,IAAnB;AACAD,IAAAA,SAAS,CAACE,eAAV,GAA4BhB,cAAc,CAACI,OAA3C;;AACA,QAAIG,eAAJ,EAAqB;AACpBI,MAAAA,SAAS,CAACM,mBAAV,GAAgC,IAAhC;AACAH,MAAAA,SAAS,CAACI,cAAV,GAA2B,oBAA3B;AACA;AACD;AACD,CAfD;AAiBA;AACA;AACA;AACA;;;AACAd,OAAO,CAACe,SAAR,GAAoBb,WAAW,IAAI;AAClC,QAAME,KAAK,GAAGN,uBAAuB,CAACO,GAAxB,CAA4BH,WAA5B,CAAd;AACA,SAAOE,KAAK,KAAK,IAAjB;AACA,CAHD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"../Module\").BuildInfo} BuildInfo */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n\n/** @type {WeakMap<ParserState, boolean>} */\nconst parserStateExportsState = new WeakMap();\n\n/**\n * @param {ParserState} parserState parser state\n * @param {boolean} isStrictHarmony strict harmony mode should be enabled\n * @returns {void}\n */\nexports.enable = (parserState, isStrictHarmony) => {\n\tconst value = parserStateExportsState.get(parserState);\n\tif (value === false) return;\n\tparserStateExportsState.set(parserState, true);\n\tif (value !== true) {\n\t\tconst buildMeta = /** @type {BuildMeta} */ (parserState.module.buildMeta);\n\t\tbuildMeta.exportsType = \"namespace\";\n\t\tconst buildInfo = /** @type {BuildInfo} */ (parserState.module.buildInfo);\n\t\tbuildInfo.strict = true;\n\t\tbuildInfo.exportsArgument = RuntimeGlobals.exports;\n\t\tif (isStrictHarmony) {\n\t\t\tbuildMeta.strictHarmonyModule = true;\n\t\t\tbuildInfo.moduleArgument = \"__webpack_module__\";\n\t\t}\n\t}\n};\n\n/**\n * @param {ParserState} parserState parser state\n * @returns {boolean} true, when enabled\n */\nexports.isEnabled = parserState => {\n\tconst value = parserStateExportsState.get(parserState);\n\treturn value === true;\n};\n"]},"metadata":{},"sourceType":"script"}