{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"./ModuleTypeConstants\");\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst ProvidedDependency = require(\"./dependencies/ProvidedDependency\");\n\nconst {\n  approve\n} = require(\"./javascript/JavascriptParserHelpers\");\n/** @typedef {import(\"../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n\n/** @typedef {import(\"./javascript/JavascriptParser\").Range} Range */\n\n\nconst PLUGIN_NAME = \"ProvidePlugin\";\n\nclass ProvidePlugin {\n  /**\n   * @param {Record<string, string | string[]>} definitions the provided identifiers\n   */\n  constructor(definitions) {\n    this.definitions = definitions;\n  }\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n\n\n  apply(compiler) {\n    const definitions = this.definitions;\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n      compilation.dependencyFactories.set(ProvidedDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ProvidedDependency, new ProvidedDependency.Template());\n      /**\n       * @param {JavascriptParser} parser the parser\n       * @param {JavascriptParserOptions} parserOptions options\n       * @returns {void}\n       */\n\n      const handler = (parser, parserOptions) => {\n        Object.keys(definitions).forEach(name => {\n          const request = [].concat(definitions[name]);\n          const splittedName = name.split(\".\");\n\n          if (splittedName.length > 0) {\n            splittedName.slice(1).forEach((_, i) => {\n              const name = splittedName.slice(0, i + 1).join(\".\");\n              parser.hooks.canRename.for(name).tap(PLUGIN_NAME, approve);\n            });\n          }\n\n          parser.hooks.expression.for(name).tap(PLUGIN_NAME, expr => {\n            const nameIdentifier = name.includes(\".\") ? `__webpack_provided_${name.replace(/\\./g, \"_dot_\")}` : name;\n            const dep = new ProvidedDependency(request[0], nameIdentifier, request.slice(1),\n            /** @type {Range} */\n            expr.range);\n            dep.loc =\n            /** @type {DependencyLocation} */\n            expr.loc;\n            parser.state.module.addDependency(dep);\n            return true;\n          });\n          parser.hooks.call.for(name).tap(PLUGIN_NAME, expr => {\n            const nameIdentifier = name.includes(\".\") ? `__webpack_provided_${name.replace(/\\./g, \"_dot_\")}` : name;\n            const dep = new ProvidedDependency(request[0], nameIdentifier, request.slice(1),\n            /** @type {Range} */\n            expr.callee.range);\n            dep.loc =\n            /** @type {DependencyLocation} */\n            expr.callee.loc;\n            parser.state.module.addDependency(dep);\n            parser.walkExpressions(expr.arguments);\n            return true;\n          });\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, handler);\n    });\n  }\n\n}\n\nmodule.exports = ProvidePlugin;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/ProvidePlugin.js"],"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_DYNAMIC","JAVASCRIPT_MODULE_TYPE_ESM","require","ConstDependency","ProvidedDependency","approve","PLUGIN_NAME","ProvidePlugin","constructor","definitions","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyTemplates","set","Template","dependencyFactories","handler","parser","parserOptions","Object","keys","forEach","name","request","concat","splittedName","split","length","slice","_","i","join","canRename","for","expression","expr","nameIdentifier","includes","replace","dep","range","loc","state","module","addDependency","call","callee","walkExpressions","arguments","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_DYNAMIC,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"./ModuleTypeConstants\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ProvidedDependency = require(\"./dependencies/ProvidedDependency\");\nconst { approve } = require(\"./javascript/JavascriptParserHelpers\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./javascript/JavascriptParser\")} JavascriptParser */\n/** @typedef {import(\"./javascript/JavascriptParser\").Range} Range */\n\nconst PLUGIN_NAME = \"ProvidePlugin\";\n\nclass ProvidePlugin {\n\t/**\n\t * @param {Record<string, string | string[]>} definitions the provided identifiers\n\t */\n\tconstructor(definitions) {\n\t\tthis.definitions = definitions;\n\t}\n\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst definitions = this.definitions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tProvidedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tProvidedDependency,\n\t\t\t\t\tnew ProvidedDependency.Template()\n\t\t\t\t);\n\t\t\t\t/**\n\t\t\t\t * @param {JavascriptParser} parser the parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions options\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tObject.keys(definitions).forEach(name => {\n\t\t\t\t\t\tconst request = [].concat(definitions[name]);\n\t\t\t\t\t\tconst splittedName = name.split(\".\");\n\t\t\t\t\t\tif (splittedName.length > 0) {\n\t\t\t\t\t\t\tsplittedName.slice(1).forEach((_, i) => {\n\t\t\t\t\t\t\t\tconst name = splittedName.slice(0, i + 1).join(\".\");\n\t\t\t\t\t\t\t\tparser.hooks.canRename.for(name).tap(PLUGIN_NAME, approve);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparser.hooks.expression.for(name).tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\t\tconst nameIdentifier = name.includes(\".\")\n\t\t\t\t\t\t\t\t? `__webpack_provided_${name.replace(/\\./g, \"_dot_\")}`\n\t\t\t\t\t\t\t\t: name;\n\t\t\t\t\t\t\tconst dep = new ProvidedDependency(\n\t\t\t\t\t\t\t\trequest[0],\n\t\t\t\t\t\t\t\tnameIdentifier,\n\t\t\t\t\t\t\t\trequest.slice(1),\n\t\t\t\t\t\t\t\t/** @type {Range} */ (expr.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tparser.hooks.call.for(name).tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\t\tconst nameIdentifier = name.includes(\".\")\n\t\t\t\t\t\t\t\t? `__webpack_provided_${name.replace(/\\./g, \"_dot_\")}`\n\t\t\t\t\t\t\t\t: name;\n\t\t\t\t\t\t\tconst dep = new ProvidedDependency(\n\t\t\t\t\t\t\t\trequest[0],\n\t\t\t\t\t\t\t\tnameIdentifier,\n\t\t\t\t\t\t\t\trequest.slice(1),\n\t\t\t\t\t\t\t\t/** @type {Range} */ (expr.callee.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.callee.loc);\n\t\t\t\t\t\t\tparser.state.module.addDependency(dep);\n\t\t\t\t\t\t\tparser.walkExpressions(expr.arguments);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ProvidePlugin;\n"]},"metadata":{},"sourceType":"script"}