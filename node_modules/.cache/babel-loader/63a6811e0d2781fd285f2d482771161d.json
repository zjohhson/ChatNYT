{"ast":null,"code":"var _jsxFileName = \"/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/AIAssistance.js\";\nimport React from 'react'; // import { Configuration, OpenAIApi } from 'openai-api'\n\nimport OpenAI from 'openai';\nimport { StyleSheet, Button, View, SafeAreaView, Text, Alert } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: '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',\n  dangerouslyAllowBrowser: true // This is also the default, can be omitted\n\n});\nexport default function AIAssistance(_ref) {\n  let {\n    solution,\n    guesses,\n    turn\n  } = _ref;\n  let mostRecent = guesses[turn - 1].map((l, i) => {\n    return l.key;\n  }).join('');\n\n  const chatCompletion = async () => {\n    let response = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        \"role\": \"user\",\n        \"content\": `we are playing a game where I have to guess a 5 letter secret word. You know the word, but I do not. I need your help in giving me hints about the secret word without actually revealing the word itself. You will help me by relating the most previous word that I just guessed with the secret word. Again, you will not reveal the word. For example, if my most recent guess was spoon, and the word is pasta, you would give a hint such as \\\"your guess spoon relates to the hidden word in that they both pertain to food. the difference is that spoon is a possible vessel in which you can eat the secret word with.\\\" for this scenario, my most recent guess was ${mostRecent}, and the secret word is ${solution}. please give me a hint, using the instructions I just gave, without revealing the secret word ${solution}. It is incredibly important that you response does not include the word ${solution}!`\n      }],\n      temperature: 0.2,\n      max_tokens: 1000,\n      frequency_penalty: 0.0\n    });\n    return response['choices'][0]['message']['content'];\n  };\n\n  chatCompletion();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onPress: console.log('hi'),\n      title: \"Learn More\",\n      color: \"#841584\",\n      accessibilityLabel: \"Learn more about this purple button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = AIAssistance;\n\nvar _c;\n\n$RefreshReg$(_c, \"AIAssistance\");","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/AIAssistance.js"],"names":["React","OpenAI","StyleSheet","Button","View","SafeAreaView","Text","Alert","openai","apiKey","dangerouslyAllowBrowser","AIAssistance","solution","guesses","turn","mostRecent","map","l","i","key","join","chatCompletion","response","chat","completions","create","model","messages","temperature","max_tokens","frequency_penalty","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACIC,UADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,YAJJ,EAKIC,IALJ,EAMIC,KANJ,QAOS,OAPT;;AASA,MAAMC,MAAM,GAAG,IAAIP,MAAJ,CAAW;AACxBQ,EAAAA,MAAM,EAAE,qDADgB;AAExBC,EAAAA,uBAAuB,EAAE,IAFD,CAEM;;AAFN,CAAX,CAAf;AAKA,eAAe,SAASC,YAAT,OAAiD;AAAA,MAA3B;AAACC,IAAAA,QAAD;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,GAA2B;AAC5D,MAAIC,UAAU,GAAGF,OAAO,CAACC,IAAI,GAAC,CAAN,CAAP,CAAgBE,GAAhB,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3C,WAAOD,CAAC,CAACE,GAAT;AACH,GAFgB,EAEdC,IAFc,CAET,EAFS,CAAjB;;AAGA,QAAMC,cAAc,GAAG,YAAW;AAC9B,QAAIC,QAAQ,GAAG,MAAMd,MAAM,CAACe,IAAP,CAAYC,WAAZ,CAAwBC,MAAxB,CAA+B;AAChDC,MAAAA,KAAK,EAAE,eADyC;AAEhDC,MAAAA,QAAQ,EAAE,CAAC;AAAC,gBAAQ,MAAT;AAAiB,mBAAY,kpBAAipBZ,UAAW,4BAA2BH,QAAS,kGAAiGA,QAAS,4EAA2EA,QAAS;AAA35B,OAAD,CAFsC;AAGhDgB,MAAAA,WAAW,EAAE,GAHmC;AAIhDC,MAAAA,UAAU,EAAE,IAJoC;AAKhDC,MAAAA,iBAAiB,EAAE;AAL6B,KAA/B,CAArB;AAOA,WAAOR,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,SAAvB,EAAkC,SAAlC,CAAP;AACH,GATD;;AAUAD,EAAAA,cAAc;AAChB,sBACE;AAAA,2BACI,QAAC,MAAD;AACA,MAAA,OAAO,EAAEU,OAAO,CAACC,GAAR,CAAY,IAAZ,CADT;AAEA,MAAA,KAAK,EAAC,YAFN;AAGA,MAAA,KAAK,EAAC,SAHN;AAIA,MAAA,kBAAkB,EAAC;AAJnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KAzBuBrB,Y","sourcesContent":["import React from 'react'\n// import { Configuration, OpenAIApi } from 'openai-api'\nimport OpenAI from 'openai';\nimport {\n    StyleSheet,\n    Button,\n    View,\n    SafeAreaView,\n    Text,\n    Alert,\n  } from 'react';\n\nconst openai = new OpenAI({\n  apiKey: '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',\n  dangerouslyAllowBrowser: true // This is also the default, can be omitted\n});\n\nexport default function AIAssistance({solution, guesses, turn}) {\n    let mostRecent = guesses[turn-1].map((l, i) => {\n        return l.key\n    }).join('')\n    const chatCompletion = async() => {\n        let response = await openai.chat.completions.create({\n            model: \"gpt-3.5-turbo\",\n            messages: [{\"role\": \"user\", \"content\": `we are playing a game where I have to guess a 5 letter secret word. You know the word, but I do not. I need your help in giving me hints about the secret word without actually revealing the word itself. You will help me by relating the most previous word that I just guessed with the secret word. Again, you will not reveal the word. For example, if my most recent guess was spoon, and the word is pasta, you would give a hint such as \\\"your guess spoon relates to the hidden word in that they both pertain to food. the difference is that spoon is a possible vessel in which you can eat the secret word with.\\\" for this scenario, my most recent guess was ${mostRecent}, and the secret word is ${solution}. please give me a hint, using the instructions I just gave, without revealing the secret word ${solution}. It is incredibly important that you response does not include the word ${solution}!`}],\n            temperature: 0.2,\n            max_tokens: 1000,\n            frequency_penalty: 0.0\n        });\n        return response['choices'][0]['message']['content']\n    }\n    chatCompletion()\n  return (\n    <div>\n        <Button\n        onPress={console.log('hi')}\n        title=\"Learn More\"\n        color=\"#841584\"\n        accessibilityLabel=\"Learn more about this purple button\"\n        />\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}