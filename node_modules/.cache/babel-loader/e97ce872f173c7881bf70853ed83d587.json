{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass RegExpObjectSerializer {\n  /**\n   * @param {RegExp} obj regexp\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(obj, context) {\n    context.write(obj.source);\n    context.write(obj.flags);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {RegExp} regexp\n   */\n\n\n  deserialize(context) {\n    return new RegExp(context.read(), context.read());\n  }\n\n}\n\nmodule.exports = RegExpObjectSerializer;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/serialization/RegExpObjectSerializer.js"],"names":["RegExpObjectSerializer","serialize","obj","context","write","source","flags","deserialize","RegExp","read","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA,MAAMA,sBAAN,CAA6B;AAC5B;AACD;AACA;AACA;AACCC,EAAAA,SAAS,CAACC,GAAD,EAAMC,OAAN,EAAe;AACvBA,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,MAAlB;AACAF,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACI,KAAlB;AACA;AACD;AACD;AACA;AACA;;;AACCC,EAAAA,WAAW,CAACJ,OAAD,EAAU;AACpB,WAAO,IAAIK,MAAJ,CAAWL,OAAO,CAACM,IAAR,EAAX,EAA2BN,OAAO,CAACM,IAAR,EAA3B,CAAP;AACA;;AAf2B;;AAkB7BC,MAAM,CAACC,OAAP,GAAiBX,sBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass RegExpObjectSerializer {\n\t/**\n\t * @param {RegExp} obj regexp\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(obj, context) {\n\t\tcontext.write(obj.source);\n\t\tcontext.write(obj.flags);\n\t}\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {RegExp} regexp\n\t */\n\tdeserialize(context) {\n\t\treturn new RegExp(context.read(), context.read());\n\t}\n}\n\nmodule.exports = RegExpObjectSerializer;\n"]},"metadata":{},"sourceType":"script"}