{"ast":null,"code":"import { AbstractChatCompletionRunner } from \"./AbstractChatCompletionRunner.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n  static runFunctions(completions, params, options) {\n    const runner = new ChatCompletionRunner();\n\n    runner._run(() => runner._runFunctions(completions, params, options));\n\n    return runner;\n  }\n\n  _addMessage(message) {\n    super._addMessage(message);\n\n    if (message.role === 'assistant' && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n\n}","map":{"version":3,"mappings":"SASEA,oCAED;AAaD,OAAM,MAAOC,oBAAP,SAAoCD,4BAApC,CAA4F;AAC7E,SAAZE,YAAY,CACjBC,WADiB,EAEjBC,MAFiB,EAGjBC,OAHiB,EAG8C;AAE/D,UAAMC,MAAM,GAAG,IAAIL,oBAAJ,EAAf;;AACAK,UAAM,CAACC,IAAP,CAAY,MAAMD,MAAM,CAACE,aAAP,CAAqBL,WAArB,EAAkCC,MAAlC,EAA0CC,OAA1C,CAAlB;;AACA,WAAOC,MAAP;AACD;;AAEQG,aAAW,CAACC,OAAD,EAA4D;AAC9E,UAAMD,WAAN,CAAkBC,OAAlB;;AACA,QAAIA,OAAO,CAACC,IAAR,KAAiB,WAAjB,IAAgCD,OAAO,CAACE,OAA5C,EAAqD;AACnD,WAAKC,KAAL,CAAW,SAAX,EAAsBH,OAAO,CAACE,OAA9B;AACD;AACF;;AAhB+F","names":["AbstractChatCompletionRunner","ChatCompletionRunner","runFunctions","completions","params","options","runner","_run","_runFunctions","_addMessage","message","role","content","_emit"],"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/openai/src/lib/ChatCompletionRunner.ts"],"sourcesContent":["import * as Core from \"../core\";\nimport {\n  type Completions,\n  type ChatCompletionMessage,\n  type ChatCompletionMessageParam,\n  type ChatCompletionCreateParamsNonStreaming,\n} from \"../resources/chat/completions\";\nimport { type RunnableFunctions, type BaseFunctionsArgs } from './RunnableFunction';\nimport {\n  AbstractChatCompletionRunner,\n  AbstractChatCompletionRunnerEvents,\n} from './AbstractChatCompletionRunner';\n\nexport interface ChatCompletionRunnerEvents extends AbstractChatCompletionRunnerEvents {\n  content: (content: string) => void;\n}\n\nexport type ChatCompletionFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner<ChatCompletionRunnerEvents> {\n  static runFunctions(\n    completions: Completions,\n    params: ChatCompletionFunctionRunnerParams<any[]>,\n    options?: Core.RequestOptions & { maxChatCompletions?: number },\n  ): ChatCompletionRunner {\n    const runner = new ChatCompletionRunner();\n    runner._run(() => runner._runFunctions(completions, params, options));\n    return runner;\n  }\n\n  override _addMessage(message: ChatCompletionMessage | ChatCompletionMessageParam) {\n    super._addMessage(message);\n    if (message.role === 'assistant' && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}