{"ast":null,"code":"import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n  static fromReadableStream(stream) {\n    const runner = new ChatCompletionStreamingRunner();\n\n    runner._run(() => runner._fromReadableStream(stream));\n\n    return runner;\n  }\n\n  static runFunctions(completions, params, options) {\n    const runner = new ChatCompletionStreamingRunner();\n\n    runner._run(() => runner._runFunctions(completions, params, options));\n\n    return runner;\n  }\n\n  static runTools(completions, params, options) {\n    const runner = new ChatCompletionStreamingRunner();\n\n    runner._run(() => runner._runTools(completions, params, options));\n\n    return runner;\n  }\n\n}","map":{"version":3,"mappings":"SAQiCA,4BAAsB;AAqBvD,OAAM,MAAOC,6BAAP,SACID,oBADJ,CACwB;AAGM,SAAlBE,kBAAkB,CAACC,MAAD,EAAuB;AACvD,UAAMC,MAAM,GAAG,IAAIH,6BAAJ,EAAf;;AACAG,UAAM,CAACC,IAAP,CAAY,MAAMD,MAAM,CAACE,mBAAP,CAA2BH,MAA3B,CAAlB;;AACA,WAAOC,MAAP;AACD;;AAEkB,SAAZG,YAAY,CACjBC,WADiB,EAEjBC,MAFiB,EAGjBC,OAHiB,EAGM;AAEvB,UAAMN,MAAM,GAAG,IAAIH,6BAAJ,EAAf;;AACAG,UAAM,CAACC,IAAP,CAAY,MAAMD,MAAM,CAACO,aAAP,CAAqBH,WAArB,EAAkCC,MAAlC,EAA0CC,OAA1C,CAAlB;;AACA,WAAON,MAAP;AACD;;AAEc,SAARQ,QAAQ,CACbJ,WADa,EAEbC,MAFa,EAGbC,OAHa,EAGU;AAEvB,UAAMN,MAAM,GAAG,IAAIH,6BAAJ,EAAf;;AACAG,UAAM,CAACC,IAAP,CAAY,MAAMD,MAAM,CAACS,SAAP,CAAiBL,WAAjB,EAA8BC,MAA9B,EAAsCC,OAAtC,CAAlB;;AACA,WAAON,MAAP;AACD;;AA3B2B","names":["ChatCompletionStream","ChatCompletionStreamingRunner","fromReadableStream","stream","runner","_run","_fromReadableStream","runFunctions","completions","params","options","_runFunctions","runTools","_runTools"],"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/openai/src/lib/ChatCompletionStreamingRunner.ts"],"sourcesContent":["import {\n  Completions,\n  type ChatCompletionChunk,\n  type ChatCompletionCreateParamsStreaming,\n} from \"../resources/chat/completions\";\nimport { RunnerOptions, type AbstractChatCompletionRunnerEvents } from './AbstractChatCompletionRunner';\nimport { type ReadableStream } from \"../_shims/index\";\nimport { RunnableTools, type BaseFunctionsArgs, type RunnableFunctions } from './RunnableFunction';\nimport { ChatCompletionSnapshot, ChatCompletionStream } from './ChatCompletionStream';\n\nexport interface ChatCompletionStreamEvents extends AbstractChatCompletionRunnerEvents {\n  content: (contentDelta: string, contentSnapshot: string) => void;\n  chunk: (chunk: ChatCompletionChunk, snapshot: ChatCompletionSnapshot) => void;\n}\n\nexport type ChatCompletionStreamingFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport type ChatCompletionStreamingToolRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsStreaming,\n  'tools'\n> & {\n  tools: RunnableTools<FunctionsArgs>;\n};\n\nexport class ChatCompletionStreamingRunner\n  extends ChatCompletionStream\n  implements AsyncIterable<ChatCompletionChunk>\n{\n  static override fromReadableStream(stream: ReadableStream): ChatCompletionStreamingRunner {\n    const runner = new ChatCompletionStreamingRunner();\n    runner._run(() => runner._fromReadableStream(stream));\n    return runner;\n  }\n\n  static runFunctions<T extends (string | object)[]>(\n    completions: Completions,\n    params: ChatCompletionStreamingFunctionRunnerParams<T>,\n    options?: RunnerOptions,\n  ): ChatCompletionStreamingRunner {\n    const runner = new ChatCompletionStreamingRunner();\n    runner._run(() => runner._runFunctions(completions, params, options));\n    return runner;\n  }\n\n  static runTools<T extends (string | object)[]>(\n    completions: Completions,\n    params: ChatCompletionStreamingToolRunnerParams<T>,\n    options?: RunnerOptions,\n  ): ChatCompletionStreamingRunner {\n    const runner = new ChatCompletionStreamingRunner();\n    runner._run(() => runner._runTools(completions, params, options));\n    return runner;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}