{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"id\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUtilityClass } from './menuItemClasses';\nimport { useMenuItem, useMenuItemContextStabilizer } from '../useMenuItem';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListContext } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuItemUtilityClass));\n}\n\nconst InnerMenuItem = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function MenuItem(props, forwardedRef) {\n  var _slots$root;\n\n  const {\n    children,\n    disabled: disabledProp = false,\n    label,\n    id,\n    slotProps = {},\n    slots = {}\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted\n  } = useMenuItem({\n    id,\n    disabled: disabledProp,\n    rootRef: forwardedRef,\n    label\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible,\n    highlighted\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n}));\n/**\n * An unstyled menu item to be used within a Menu.\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuItem API](https://mui.com/base-ui/react-menu/components-api/#menu-item)\n */\n\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  const {\n    id: idProp\n  } = props; // This wrapper component is used as a performance optimization.\n  // `useMenuItemContextStabilizer` ensures that the context value\n  // is stable across renders, so that the actual MenuItem re-renders\n  // only when it needs to.\n\n  const {\n    contextValue,\n    id\n  } = useMenuItemContextStabilizer(idProp);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(InnerMenuItem, _extends({}, props, {\n      id: id,\n      ref: ref\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuItem };","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/@mui/base/MenuItem/MenuItem.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","getMenuItemUtilityClass","useMenuItem","useMenuItemContextStabilizer","unstable_composeClasses","composeClasses","useSlotProps","useClassNamesOverride","ListContext","jsx","_jsx","useUtilityClasses","ownerState","disabled","focusVisible","slots","root","InnerMenuItem","memo","forwardRef","MenuItem","props","forwardedRef","_slots$root","children","disabledProp","label","id","slotProps","other","getRootProps","highlighted","rootRef","classes","Root","rootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","className","ref","idProp","contextValue","Provider","value","process","env","NODE_ENV","propTypes","node","string","bool","onClick","func","shape","oneOfType","object"],"mappings":"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","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"id\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { getMenuItemUtilityClass } from './menuItemClasses';\nimport { useMenuItem, useMenuItemContextStabilizer } from '../useMenuItem';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListContext } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    focusVisible\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuItemUtilityClass));\n}\nconst InnerMenuItem = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(function MenuItem(props, forwardedRef) {\n  var _slots$root;\n  const {\n      children,\n      disabled: disabledProp = false,\n      label,\n      id,\n      slotProps = {},\n      slots = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    disabled,\n    focusVisible,\n    highlighted\n  } = useMenuItem({\n    id,\n    disabled: disabledProp,\n    rootRef: forwardedRef,\n    label\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    focusVisible,\n    highlighted\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = (_slots$root = slots.root) != null ? _slots$root : 'li';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n}));\n\n/**\n * An unstyled menu item to be used within a Menu.\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuItem API](https://mui.com/base-ui/react-menu/components-api/#menu-item)\n */\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  const {\n    id: idProp\n  } = props;\n\n  // This wrapper component is used as a performance optimization.\n  // `useMenuItemContextStabilizer` ensures that the context value\n  // is stable across renders, so that the actual MenuItem re-renders\n  // only when it needs to.\n  const {\n    contextValue,\n    id\n  } = useMenuItemContextStabilizer(idProp);\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(InnerMenuItem, _extends({}, props, {\n      id: id,\n      ref: ref\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the menu item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the menu item's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The props used for each slot inside the MenuItem.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the MenuItem.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { MenuItem };"]},"metadata":{},"sourceType":"module"}