{"ast":null,"code":"export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    auto: false\n  };\n\n  if (auto) {\n    throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n  }\n\n  if (kind) {\n    throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n  }\n\n  auto = options.auto;\n  kind = shims.kind;\n  fetch = shims.fetch;\n  Request = shims.Request;\n  Response = shims.Response;\n  Headers = shims.Headers;\n  FormData = shims.FormData;\n  Blob = shims.Blob;\n  File = shims.File;\n  ReadableStream = shims.ReadableStream;\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\n  getDefaultAgent = shims.getDefaultAgent;\n  fileFromPath = shims.fileFromPath;\n  isFsReadStream = shims.isFsReadStream;\n}","map":{"version":3,"mappings":"AA0BA,OAAO,IAAIA,IAAI,GAAG,KAAX;AACP,OAAO,IAAIC,IAAI,GAA8BC,SAAtC;AACP,OAAO,IAAIC,KAAK,GAA+BD,SAAxC;AACP,OAAO,IAAIE,OAAO,GAAiCF,SAA5C;AACP,OAAO,IAAIG,QAAQ,GAAkCH,SAA9C;AACP,OAAO,IAAII,OAAO,GAAiCJ,SAA5C;AACP,OAAO,IAAIK,QAAQ,GAAkCL,SAA9C;AACP,OAAO,IAAIM,IAAI,GAA8BN,SAAtC;AACP,OAAO,IAAIO,IAAI,GAA8BP,SAAtC;AACP,OAAO,IAAIQ,cAAc,GAAwCR,SAA1D;AACP,OAAO,IAAIS,0BAA0B,GAAoDT,SAAlF;AACP,OAAO,IAAIU,eAAe,GAAyCV,SAA5D;AACP,OAAO,IAAIW,YAAY,GAAsCX,SAAtD;AACP,OAAO,IAAIY,cAAc,GAAwCZ,SAA1D;AAEP,OAAM,SAAUa,QAAV,CAAmBC,KAAnB,EAA6E;AAAA,MAA5CC,OAA4C,uEAAf;AAAEjB,QAAI,EAAE;AAAR,GAAe;;AACjF,MAAIA,IAAJ,EAAU;AACR,UAAM,IAAIkB,KAAJ,CACJ,mCAAmCF,KAAK,CAACf,IAAI,gDADzC,CAAN;AAGD;;AACD,MAAIA,IAAJ,EAAU;AACR,UAAM,IAAIiB,KAAJ,CAAU,gCAAgCF,KAAK,CAACf,IAAI,oCAAoCA,IAAI,KAA5F,CAAN;AACD;;AACDD,MAAI,GAAGiB,OAAO,CAACjB,IAAf;AACAC,MAAI,GAAGe,KAAK,CAACf,IAAb;AACAE,OAAK,GAAGa,KAAK,CAACb,KAAd;AACAC,SAAO,GAAGY,KAAK,CAACZ,OAAhB;AACAC,UAAQ,GAAGW,KAAK,CAACX,QAAjB;AACAC,SAAO,GAAGU,KAAK,CAACV,OAAhB;AACAC,UAAQ,GAAGS,KAAK,CAACT,QAAjB;AACAC,MAAI,GAAGQ,KAAK,CAACR,IAAb;AACAC,MAAI,GAAGO,KAAK,CAACP,IAAb;AACAC,gBAAc,GAAGM,KAAK,CAACN,cAAvB;AACAC,4BAA0B,GAAGK,KAAK,CAACL,0BAAnC;AACAC,iBAAe,GAAGI,KAAK,CAACJ,eAAxB;AACAC,cAAY,GAAGG,KAAK,CAACH,YAArB;AACAC,gBAAc,GAAGE,KAAK,CAACF,cAAvB;AACD","names":["auto","kind","undefined","fetch","Request","Response","Headers","FormData","Blob","File","ReadableStream","getMultipartRequestOptions","getDefaultAgent","fileFromPath","isFsReadStream","setShims","shims","options","Error"],"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/openai/src/_shims/registry.ts"],"sourcesContent":["/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport { type RequestOptions } from '../core';\n\nexport interface Shims {\n  kind: string;\n  fetch: any;\n  Request: any;\n  Response: any;\n  Headers: any;\n  FormData: any;\n  Blob: any;\n  File: any;\n  ReadableStream: any;\n  getMultipartRequestOptions: <T extends {} = Record<string, unknown>>(\n    form: Shims['FormData'],\n    opts: RequestOptions<T>,\n  ) => Promise<RequestOptions<T>>;\n  getDefaultAgent: (url: string) => any;\n  fileFromPath:\n    | ((path: string, filename?: string, options?: {}) => Promise<Shims['File']>)\n    | ((path: string, options?: {}) => Promise<Shims['File']>);\n  isFsReadStream: (value: any) => boolean;\n}\n\nexport let auto = false;\nexport let kind: Shims['kind'] | undefined = undefined;\nexport let fetch: Shims['fetch'] | undefined = undefined;\nexport let Request: Shims['Request'] | undefined = undefined;\nexport let Response: Shims['Response'] | undefined = undefined;\nexport let Headers: Shims['Headers'] | undefined = undefined;\nexport let FormData: Shims['FormData'] | undefined = undefined;\nexport let Blob: Shims['Blob'] | undefined = undefined;\nexport let File: Shims['File'] | undefined = undefined;\nexport let ReadableStream: Shims['ReadableStream'] | undefined = undefined;\nexport let getMultipartRequestOptions: Shims['getMultipartRequestOptions'] | undefined = undefined;\nexport let getDefaultAgent: Shims['getDefaultAgent'] | undefined = undefined;\nexport let fileFromPath: Shims['fileFromPath'] | undefined = undefined;\nexport let isFsReadStream: Shims['isFsReadStream'] | undefined = undefined;\n\nexport function setShims(shims: Shims, options: { auto: boolean } = { auto: false }) {\n  if (auto) {\n    throw new Error(\n      `you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`,\n    );\n  }\n  if (kind) {\n    throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n  }\n  auto = options.auto;\n  kind = shims.kind;\n  fetch = shims.fetch;\n  Request = shims.Request;\n  Response = shims.Response;\n  Headers = shims.Headers;\n  FormData = shims.FormData;\n  Blob = shims.Blob;\n  File = shims.File;\n  ReadableStream = shims.ReadableStream;\n  getMultipartRequestOptions = shims.getMultipartRequestOptions;\n  getDefaultAgent = shims.getDefaultAgent;\n  fileFromPath = shims.fileFromPath;\n  isFsReadStream = shims.isFsReadStream;\n}\n"]},"metadata":{},"sourceType":"module"}