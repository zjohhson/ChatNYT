{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ModuleDependency = require(\"./ModuleDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\n/** @typedef {import(\"../css/CssParser\").Range} Range */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nclass CssImportDependency extends ModuleDependency {\n  /**\n   * Example of dependency:\n   *\n   * \\@import url(\"landscape.css\") layer(forms) screen and (orientation: landscape) screen and (orientation: landscape);\n   *\n   * @param {string} request request\n   * @param {Range} range range of the argument\n   * @param {string | undefined} layer layer\n   * @param {string | undefined} supports list of supports conditions\n   * @param {string | undefined} media list of media conditions\n   */\n  constructor(request, range, layer, supports, media) {\n    super(request);\n    this.range = range;\n    this.layer = layer;\n    this.supports = supports;\n    this.media = media;\n  }\n\n  get type() {\n    return \"css @import\";\n  }\n\n  get category() {\n    return \"css-import\";\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    let str = `context${this._context || \"\"}|module${this.request}`;\n\n    if (this.layer) {\n      str += `|layer${this.layer}`;\n    }\n\n    if (this.supports) {\n      str += `|supports${this.supports}`;\n    }\n\n    if (this.media) {\n      str += `|media${this.media}`;\n    }\n\n    return str;\n  }\n  /**\n   * @param {string} context context directory\n   * @returns {Module | null} a module\n   */\n\n\n  createIgnoredModule(context) {\n    return null;\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.layer);\n    write(this.supports);\n    write(this.media);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.layer = read();\n    this.supports = read();\n    this.media = read();\n    super.deserialize(context);\n  }\n\n}\n\nCssImportDependency.Template = class CssImportDependencyTemplate extends ModuleDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep =\n    /** @type {CssImportDependency} */\n    dependency;\n    source.replace(dep.range[0], dep.range[1] - 1, \"\");\n  }\n\n};\nmakeSerializable(CssImportDependency, \"webpack/lib/dependencies/CssImportDependency\");\nmodule.exports = CssImportDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/CssImportDependency.js"],"names":["makeSerializable","require","ModuleDependency","CssImportDependency","constructor","request","range","layer","supports","media","type","category","getResourceIdentifier","str","_context","createIgnoredModule","context","serialize","write","deserialize","read","Template","CssImportDependencyTemplate","apply","dependency","source","templateContext","dep","replace","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAAhC;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAME,mBAAN,SAAkCD,gBAAlC,CAAmD;AAClD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCE,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyC;AACnD,UAAMJ,OAAN;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,aAAP;AACA;;AAEW,MAARC,QAAQ,GAAG;AACd,WAAO,YAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,qBAAqB,GAAG;AACvB,QAAIC,GAAG,GAAI,UAAS,KAAKC,QAAL,IAAiB,EAAG,UAAS,KAAKT,OAAQ,EAA9D;;AAEA,QAAI,KAAKE,KAAT,EAAgB;AACfM,MAAAA,GAAG,IAAK,SAAQ,KAAKN,KAAM,EAA3B;AACA;;AAED,QAAI,KAAKC,QAAT,EAAmB;AAClBK,MAAAA,GAAG,IAAK,YAAW,KAAKL,QAAS,EAAjC;AACA;;AAED,QAAI,KAAKC,KAAT,EAAgB;AACfI,MAAAA,GAAG,IAAK,SAAQ,KAAKJ,KAAM,EAA3B;AACA;;AAED,WAAOI,GAAP;AACA;AAED;AACD;AACA;AACA;;;AACCE,EAAAA,mBAAmB,CAACC,OAAD,EAAU;AAC5B,WAAO,IAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,SAAS,CAACD,OAAD,EAAU;AAClB,UAAM;AAAEE,MAAAA;AAAF,QAAYF,OAAlB;AACAE,IAAAA,KAAK,CAAC,KAAKX,KAAN,CAAL;AACAW,IAAAA,KAAK,CAAC,KAAKV,QAAN,CAAL;AACAU,IAAAA,KAAK,CAAC,KAAKT,KAAN,CAAL;AACA,UAAMQ,SAAN,CAAgBD,OAAhB;AACA;AAED;AACD;AACA;;;AACCG,EAAAA,WAAW,CAACH,OAAD,EAAU;AACpB,UAAM;AAAEI,MAAAA;AAAF,QAAWJ,OAAjB;AACA,SAAKT,KAAL,GAAaa,IAAI,EAAjB;AACA,SAAKZ,QAAL,GAAgBY,IAAI,EAApB;AACA,SAAKX,KAAL,GAAaW,IAAI,EAAjB;AACA,UAAMD,WAAN,CAAkBH,OAAlB;AACA;;AA7EiD;;AAgFnDb,mBAAmB,CAACkB,QAApB,GAA+B,MAAMC,2BAAN,SAC9BpB,gBAAgB,CAACmB,QADa,CAE7B;AACD;AACD;AACA;AACA;AACA;AACA;AACCE,EAAAA,KAAK,CAACC,UAAD,EAAaC,MAAb,EAAqBC,eAArB,EAAsC;AAC1C,UAAMC,GAAG;AAAG;AAAoCH,IAAAA,UAAhD;AAEAC,IAAAA,MAAM,CAACG,OAAP,CAAeD,GAAG,CAACrB,KAAJ,CAAU,CAAV,CAAf,EAA6BqB,GAAG,CAACrB,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+C,EAA/C;AACA;;AAXA,CAFF;AAgBAN,gBAAgB,CACfG,mBADe,EAEf,8CAFe,CAAhB;AAKA0B,MAAM,CAACC,OAAP,GAAiB3B,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ModuleDependency = require(\"./ModuleDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../css/CssParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nclass CssImportDependency extends ModuleDependency {\n\t/**\n\t * Example of dependency:\n\t *\n\t * \\@import url(\"landscape.css\") layer(forms) screen and (orientation: landscape) screen and (orientation: landscape);\n\t *\n\t * @param {string} request request\n\t * @param {Range} range range of the argument\n\t * @param {string | undefined} layer layer\n\t * @param {string | undefined} supports list of supports conditions\n\t * @param {string | undefined} media list of media conditions\n\t */\n\tconstructor(request, range, layer, supports, media) {\n\t\tsuper(request);\n\t\tthis.range = range;\n\t\tthis.layer = layer;\n\t\tthis.supports = supports;\n\t\tthis.media = media;\n\t}\n\n\tget type() {\n\t\treturn \"css @import\";\n\t}\n\n\tget category() {\n\t\treturn \"css-import\";\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\tlet str = `context${this._context || \"\"}|module${this.request}`;\n\n\t\tif (this.layer) {\n\t\t\tstr += `|layer${this.layer}`;\n\t\t}\n\n\t\tif (this.supports) {\n\t\t\tstr += `|supports${this.supports}`;\n\t\t}\n\n\t\tif (this.media) {\n\t\t\tstr += `|media${this.media}`;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * @param {string} context context directory\n\t * @returns {Module | null} a module\n\t */\n\tcreateIgnoredModule(context) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.layer);\n\t\twrite(this.supports);\n\t\twrite(this.media);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.layer = read();\n\t\tthis.supports = read();\n\t\tthis.media = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nCssImportDependency.Template = class CssImportDependencyTemplate extends (\n\tModuleDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {CssImportDependency} */ (dependency);\n\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, \"\");\n\t}\n};\n\nmakeSerializable(\n\tCssImportDependency,\n\t\"webpack/lib/dependencies/CssImportDependency\"\n);\n\nmodule.exports = CssImportDependency;\n"]},"metadata":{},"sourceType":"script"}