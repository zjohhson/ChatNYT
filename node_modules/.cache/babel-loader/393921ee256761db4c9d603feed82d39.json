{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ContextDependency = require(\"./ContextDependency\");\n\nconst ContextDependencyTemplateAsId = require(\"./ContextDependencyTemplateAsId\");\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"./ContextDependency\").ContextDependencyOptions} ContextDependencyOptions */\n\n\nclass RequireResolveContextDependency extends ContextDependency {\n  /**\n   * @param {ContextDependencyOptions} options options\n   * @param {Range} range range\n   * @param {Range} valueRange value range\n   * @param {TODO} context context\n   */\n  constructor(options, range, valueRange, context) {\n    super(options, context);\n    this.range = range;\n    this.valueRange = valueRange;\n  }\n\n  get type() {\n    return \"amd require context\";\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.range);\n    write(this.valueRange);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.range = read();\n    this.valueRange = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(RequireResolveContextDependency, \"webpack/lib/dependencies/RequireResolveContextDependency\");\nRequireResolveContextDependency.Template = ContextDependencyTemplateAsId;\nmodule.exports = RequireResolveContextDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/RequireResolveContextDependency.js"],"names":["makeSerializable","require","ContextDependency","ContextDependencyTemplateAsId","RequireResolveContextDependency","constructor","options","range","valueRange","context","type","serialize","write","deserialize","read","Template","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAME,6BAA6B,GAAGF,OAAO,CAAC,iCAAD,CAA7C;AAEA;;AACA;;AACA;;AACA;;;AAEA,MAAMG,+BAAN,SAA8CF,iBAA9C,CAAgE;AAC/D;AACD;AACA;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,OAA7B,EAAsC;AAChD,UAAMH,OAAN,EAAeG,OAAf;AAEA,SAAKF,KAAL,GAAaA,KAAb;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA;;AAEO,MAAJE,IAAI,GAAG;AACV,WAAO,qBAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,SAAS,CAACF,OAAD,EAAU;AAClB,UAAM;AAAEG,MAAAA;AAAF,QAAYH,OAAlB;AAEAG,IAAAA,KAAK,CAAC,KAAKL,KAAN,CAAL;AACAK,IAAAA,KAAK,CAAC,KAAKJ,UAAN,CAAL;AAEA,UAAMG,SAAN,CAAgBF,OAAhB;AACA;AAED;AACD;AACA;;;AACCI,EAAAA,WAAW,CAACJ,OAAD,EAAU;AACpB,UAAM;AAAEK,MAAAA;AAAF,QAAWL,OAAjB;AAEA,SAAKF,KAAL,GAAaO,IAAI,EAAjB;AACA,SAAKN,UAAL,GAAkBM,IAAI,EAAtB;AAEA,UAAMD,WAAN,CAAkBJ,OAAlB;AACA;;AAxC8D;;AA2ChET,gBAAgB,CACfI,+BADe,EAEf,0DAFe,CAAhB;AAKAA,+BAA+B,CAACW,QAAhC,GAA2CZ,6BAA3C;AAEAa,MAAM,CAACC,OAAP,GAAiBb,+BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ContextDependency = require(\"./ContextDependency\");\nconst ContextDependencyTemplateAsId = require(\"./ContextDependencyTemplateAsId\");\n\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./ContextDependency\").ContextDependencyOptions} ContextDependencyOptions */\n\nclass RequireResolveContextDependency extends ContextDependency {\n\t/**\n\t * @param {ContextDependencyOptions} options options\n\t * @param {Range} range range\n\t * @param {Range} valueRange value range\n\t * @param {TODO} context context\n\t */\n\tconstructor(options, range, valueRange, context) {\n\t\tsuper(options, context);\n\n\t\tthis.range = range;\n\t\tthis.valueRange = valueRange;\n\t}\n\n\tget type() {\n\t\treturn \"amd require context\";\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.range);\n\t\twrite(this.valueRange);\n\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.range = read();\n\t\tthis.valueRange = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tRequireResolveContextDependency,\n\t\"webpack/lib/dependencies/RequireResolveContextDependency\"\n);\n\nRequireResolveContextDependency.Template = ContextDependencyTemplateAsId;\n\nmodule.exports = RequireResolveContextDependency;\n"]},"metadata":{},"sourceType":"script"}