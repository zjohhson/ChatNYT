{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [`& .${avatarClasses.root}`]: {\n      border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n      boxSizing: 'content-box',\n      marginLeft: -8,\n      '&:last-child': {\n        marginLeft: 0\n      }\n    },\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  };\n});\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  };\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    component = 'div',\n    componentsProps = {},\n    max = 5,\n    renderSurplus,\n    slotProps = {},\n    spacing = 'medium',\n    total,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let clampedMax = max < 2 ? 2 : max;\n\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: _extends({\n        marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/@mui/material/AvatarGroup/AvatarGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","isFragment","clsx","chainPropTypes","unstable_composeClasses","composeClasses","styled","useThemeProps","Avatar","avatarClasses","avatarGroupClasses","getAvatarGroupUtilityClass","jsx","_jsx","jsxs","_jsxs","SPACINGS","small","medium","useUtilityClasses","ownerState","classes","slots","root","avatar","AvatarGroupRoot","name","slot","overridesResolver","props","styles","theme","border","vars","palette","background","default","boxSizing","marginLeft","display","flexDirection","AvatarGroupAvatar","AvatarGroup","forwardRef","inProps","ref","_slotProps$additional","children","childrenProp","className","component","componentsProps","max","renderSurplus","slotProps","spacing","total","variant","other","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","totalAvatars","length","Math","min","maxAvatars","extraAvatars","extraAvatarsElement","undefined","additionalAvatarSlotProps","additionalAvatar","as","style","slice","reverse","map","index","cloneElement","propTypes","node","object","string","elementType","shape","number","Error","func","oneOfType","oneOf","sx","arrayOf","bool"],"mappings":"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","sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"componentsProps\", \"max\", \"renderSurplus\", \"slotProps\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _slotProps$additional;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n  const {\n      children: childrenProp,\n      className,\n      component = 'div',\n      componentsProps = {},\n      max = 5,\n      renderSurplus,\n      slotProps = {},\n      spacing = 'medium',\n      total,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let clampedMax = max < 2 ? 2 : max;\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const extraAvatarsElement = renderSurplus ? renderSurplus(extraAvatars) : `+${extraAvatars}`;\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  const additionalAvatarSlotProps = (_slotProps$additional = slotProps.additionalAvatar) != null ? _slotProps$additional : componentsProps.additionalAvatar;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsx(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, additionalAvatarSlotProps, {\n      className: clsx(classes.avatar, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.className),\n      style: _extends({\n        marginLeft\n      }, additionalAvatarSlotProps == null ? void 0 : additionalAvatarSlotProps.style),\n      children: extraAvatarsElement\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n    return null;\n  }),\n  /**\n   * custom renderer of extraAvatars\n   * @param {number} surplus number of extra avatars\n   * @returns {React.ReactNode} custom element to display\n   */\n  renderSurplus: PropTypes.func,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;"]},"metadata":{},"sourceType":"module"}