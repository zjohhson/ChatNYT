{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass NullPrototypeObjectSerializer {\n  /**\n   * @template {Object} T\n   * @param {T} obj null object\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(obj, context) {\n    /** @type {string[]} */\n    const keys = Object.keys(obj);\n\n    for (const key of keys) {\n      context.write(key);\n    }\n\n    context.write(null);\n\n    for (const key of keys) {\n      context.write(obj[key]);\n    }\n  }\n  /**\n   * @template {Object} T\n   * @param {ObjectDeserializerContext} context context\n   * @returns {T} null object\n   */\n\n\n  deserialize(context) {\n    /** @type {T} */\n    const obj = Object.create(null);\n    /** @type {string[]} */\n\n    const keys = [];\n    /** @type {string | null} */\n\n    let key = context.read();\n\n    while (key !== null) {\n      keys.push(key);\n      key = context.read();\n    }\n\n    for (const key of keys) {\n      obj[key] = context.read();\n    }\n\n    return obj;\n  }\n\n}\n\nmodule.exports = NullPrototypeObjectSerializer;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/serialization/NullPrototypeObjectSerializer.js"],"names":["NullPrototypeObjectSerializer","serialize","obj","context","keys","Object","key","write","deserialize","create","read","push","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA,MAAMA,6BAAN,CAAoC;AACnC;AACD;AACA;AACA;AACA;AACCC,EAAAA,SAAS,CAACC,GAAD,EAAMC,OAAN,EAAe;AACvB;AACA,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,GAAZ,CAAb;;AACA,SAAK,MAAMI,GAAX,IAAkBF,IAAlB,EAAwB;AACvBD,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACA;;AACDH,IAAAA,OAAO,CAACI,KAAR,CAAc,IAAd;;AACA,SAAK,MAAMD,GAAX,IAAkBF,IAAlB,EAAwB;AACvBD,MAAAA,OAAO,CAACI,KAAR,CAAcL,GAAG,CAACI,GAAD,CAAjB;AACA;AACD;AACD;AACD;AACA;AACA;AACA;;;AACCE,EAAAA,WAAW,CAACL,OAAD,EAAU;AACpB;AACA,UAAMD,GAAG,GAAGG,MAAM,CAACI,MAAP,CAAc,IAAd,CAAZ;AACA;;AACA,UAAML,IAAI,GAAG,EAAb;AACA;;AACA,QAAIE,GAAG,GAAGH,OAAO,CAACO,IAAR,EAAV;;AACA,WAAOJ,GAAG,KAAK,IAAf,EAAqB;AACpBF,MAAAA,IAAI,CAACO,IAAL,CAAUL,GAAV;AACAA,MAAAA,GAAG,GAAGH,OAAO,CAACO,IAAR,EAAN;AACA;;AACD,SAAK,MAAMJ,GAAX,IAAkBF,IAAlB,EAAwB;AACvBF,MAAAA,GAAG,CAACI,GAAD,CAAH,GAAWH,OAAO,CAACO,IAAR,EAAX;AACA;;AACD,WAAOR,GAAP;AACA;;AArCkC;;AAwCpCU,MAAM,CAACC,OAAP,GAAiBb,6BAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass NullPrototypeObjectSerializer {\n\t/**\n\t * @template {Object} T\n\t * @param {T} obj null object\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(obj, context) {\n\t\t/** @type {string[]} */\n\t\tconst keys = Object.keys(obj);\n\t\tfor (const key of keys) {\n\t\t\tcontext.write(key);\n\t\t}\n\t\tcontext.write(null);\n\t\tfor (const key of keys) {\n\t\t\tcontext.write(obj[key]);\n\t\t}\n\t}\n\t/**\n\t * @template {Object} T\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {T} null object\n\t */\n\tdeserialize(context) {\n\t\t/** @type {T} */\n\t\tconst obj = Object.create(null);\n\t\t/** @type {string[]} */\n\t\tconst keys = [];\n\t\t/** @type {string | null} */\n\t\tlet key = context.read();\n\t\twhile (key !== null) {\n\t\t\tkeys.push(key);\n\t\t\tkey = context.read();\n\t\t}\n\t\tfor (const key of keys) {\n\t\t\tobj[key] = context.read();\n\t\t}\n\t\treturn obj;\n\t}\n}\n\nmodule.exports = NullPrototypeObjectSerializer;\n"]},"metadata":{},"sourceType":"script"}