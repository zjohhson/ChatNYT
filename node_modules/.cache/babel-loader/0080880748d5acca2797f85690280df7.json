{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.enableValidation = enableValidation;\nexports.disableValidation = disableValidation;\nexports.needValidate = needValidate;\nObject.defineProperty(exports, \"ValidationError\", {\n  enumerable: true,\n  get: function () {\n    return _ValidationError.default;\n  }\n});\n\nvar _absolutePath = _interopRequireDefault(require(\"./keywords/absolutePath\"));\n\nvar _undefinedAsNull = _interopRequireDefault(require(\"./keywords/undefinedAsNull\"));\n\nvar _ValidationError = _interopRequireDefault(require(\"./ValidationError\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * @template T\n * @param fn {(function(): any) | undefined}\n * @returns {function(): T}\n */\n\n\nconst memoize = fn => {\n  let cache = false;\n  /** @type {T} */\n\n  let result;\n  return () => {\n    if (cache) {\n      return result;\n    }\n\n    result =\n    /** @type {function(): any} */\n    fn();\n    cache = true; // Allow to clean up memory for fn\n    // and all dependent resources\n    // eslint-disable-next-line no-undefined, no-param-reassign\n\n    fn = undefined;\n    return result;\n  };\n};\n\nconst getAjv = memoize(() => {\n  // Use CommonJS require for ajv libs so TypeScript consumers aren't locked into esModuleInterop (see #110).\n  // eslint-disable-next-line global-require\n  const Ajv = require(\"ajv\"); // eslint-disable-next-line global-require\n\n\n  const ajvKeywords = require(\"ajv-keywords\");\n\n  const ajv = new Ajv({\n    allErrors: true,\n    verbose: true,\n    $data: true\n  });\n  ajvKeywords(ajv, [\"instanceof\", \"formatMinimum\", \"formatMaximum\", \"patternRequired\"]); // Custom keywords\n\n  (0, _absolutePath.default)(ajv);\n  (0, _undefinedAsNull.default)(ajv);\n  return ajv;\n});\n/** @typedef {import(\"json-schema\").JSONSchema4} JSONSchema4 */\n\n/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */\n\n/** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */\n\n/** @typedef {import(\"ajv\").ErrorObject} ErrorObject */\n\n/** @typedef {import(\"ajv\").ValidateFunction} ValidateFunction */\n\n/**\n * @typedef {Object} Extend\n * @property {number=} formatMinimum\n * @property {number=} formatMaximum\n * @property {boolean=} formatExclusiveMinimum\n * @property {boolean=} formatExclusiveMaximum\n * @property {string=} link\n * @property {boolean=} undefinedAsNull\n */\n\n/** @typedef {(JSONSchema4 | JSONSchema6 | JSONSchema7) & Extend} Schema */\n\n/** @typedef {ErrorObject & { children?: Array<ErrorObject>}} SchemaUtilErrorObject */\n\n/**\n * @callback PostFormatter\n * @param {string} formattedError\n * @param {SchemaUtilErrorObject} error\n * @returns {string}\n */\n\n/**\n * @typedef {Object} ValidationErrorConfiguration\n * @property {string=} name\n * @property {string=} baseDataPath\n * @property {PostFormatter=} postFormatter\n */\n\n/**\n * @param {SchemaUtilErrorObject} error\n * @param {number} idx\n * @returns {SchemaUtilErrorObject}\n */\n\nfunction applyPrefix(error, idx) {\n  // eslint-disable-next-line no-param-reassign\n  error.dataPath = `[${idx}]${error.dataPath}`;\n\n  if (error.children) {\n    error.children.forEach(err => applyPrefix(err, idx));\n  }\n\n  return error;\n}\n\nlet skipValidation = false; // We use `process.env.SKIP_VALIDATION` because you can have multiple `schema-utils` with different version,\n// so we want to disable it globally, `process.env` doesn't supported by browsers, so we have the local `skipValidation` variables\n// Enable validation\n\nfunction enableValidation() {\n  skipValidation = false; // Disable validation for any versions\n\n  if (process && process.env) {\n    process.env.SKIP_VALIDATION = \"n\";\n  }\n} // Disable validation\n\n\nfunction disableValidation() {\n  skipValidation = true;\n\n  if (process && process.env) {\n    process.env.SKIP_VALIDATION = \"y\";\n  }\n} // Check if we need to confirm\n\n\nfunction needValidate() {\n  if (skipValidation) {\n    return false;\n  }\n\n  if (process && process.env && process.env.SKIP_VALIDATION) {\n    const value = process.env.SKIP_VALIDATION.trim();\n\n    if (/^(?:y|yes|true|1|on)$/i.test(value)) {\n      return false;\n    }\n\n    if (/^(?:n|no|false|0|off)$/i.test(value)) {\n      return true;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @param {ValidationErrorConfiguration=} configuration\n * @returns {void}\n */\n\n\nfunction validate(schema, options, configuration) {\n  if (!needValidate()) {\n    return;\n  }\n\n  let errors = [];\n\n  if (Array.isArray(options)) {\n    for (let i = 0; i <= options.length - 1; i++) {\n      errors.push(...validateObject(schema, options[i]).map(err => applyPrefix(err, i)));\n    }\n  } else {\n    errors = validateObject(schema, options);\n  }\n\n  if (errors.length > 0) {\n    throw new _ValidationError.default(errors, schema, configuration);\n  }\n}\n/** @typedef {WeakMap<Schema, ValidateFunction>} */\n\n\nconst schemaCache = new WeakMap();\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\nfunction validateObject(schema, options) {\n  let compiledSchema = schemaCache.get(schema);\n\n  if (!compiledSchema) {\n    compiledSchema = getAjv().compile(schema);\n    schemaCache.set(schema, compiledSchema);\n  }\n\n  const valid = compiledSchema(options);\n  if (valid) return [];\n  return compiledSchema.errors ? filterErrors(compiledSchema.errors) : [];\n}\n/**\n * @param {Array<ErrorObject>} errors\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction filterErrors(errors) {\n  /** @type {Array<SchemaUtilErrorObject>} */\n  let newErrors = [];\n\n  for (const error of\n  /** @type {Array<SchemaUtilErrorObject>} */\n  errors) {\n    const {\n      dataPath\n    } = error;\n    /** @type {Array<SchemaUtilErrorObject>} */\n\n    let children = [];\n    newErrors = newErrors.filter(oldError => {\n      if (oldError.dataPath.includes(dataPath)) {\n        if (oldError.children) {\n          children = children.concat(oldError.children.slice(0));\n        } // eslint-disable-next-line no-undefined, no-param-reassign\n\n\n        oldError.children = undefined;\n        children.push(oldError);\n        return false;\n      }\n\n      return true;\n    });\n\n    if (children.length) {\n      error.children = children;\n    }\n\n    newErrors.push(error);\n  }\n\n  return newErrors;\n}","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/schema-utils/dist/validate.js"],"names":["Object","defineProperty","exports","value","validate","enableValidation","disableValidation","needValidate","enumerable","get","_ValidationError","default","_absolutePath","_interopRequireDefault","require","_undefinedAsNull","obj","__esModule","memoize","fn","cache","result","undefined","getAjv","Ajv","ajvKeywords","ajv","allErrors","verbose","$data","applyPrefix","error","idx","dataPath","children","forEach","err","skipValidation","process","env","SKIP_VALIDATION","trim","test","schema","options","configuration","errors","Array","isArray","i","length","push","validateObject","map","schemaCache","WeakMap","compiledSchema","compile","set","valid","filterErrors","newErrors","filter","oldError","includes","concat","slice"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validate = validate;\nexports.enableValidation = enableValidation;\nexports.disableValidation = disableValidation;\nexports.needValidate = needValidate;\nObject.defineProperty(exports, \"ValidationError\", {\n  enumerable: true,\n  get: function () {\n    return _ValidationError.default;\n  }\n});\n\nvar _absolutePath = _interopRequireDefault(require(\"./keywords/absolutePath\"));\n\nvar _undefinedAsNull = _interopRequireDefault(require(\"./keywords/undefinedAsNull\"));\n\nvar _ValidationError = _interopRequireDefault(require(\"./ValidationError\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * @template T\n * @param fn {(function(): any) | undefined}\n * @returns {function(): T}\n */\nconst memoize = fn => {\n  let cache = false;\n  /** @type {T} */\n\n  let result;\n  return () => {\n    if (cache) {\n      return result;\n    }\n\n    result =\n    /** @type {function(): any} */\n    fn();\n    cache = true; // Allow to clean up memory for fn\n    // and all dependent resources\n    // eslint-disable-next-line no-undefined, no-param-reassign\n\n    fn = undefined;\n    return result;\n  };\n};\n\nconst getAjv = memoize(() => {\n  // Use CommonJS require for ajv libs so TypeScript consumers aren't locked into esModuleInterop (see #110).\n  // eslint-disable-next-line global-require\n  const Ajv = require(\"ajv\"); // eslint-disable-next-line global-require\n\n\n  const ajvKeywords = require(\"ajv-keywords\");\n\n  const ajv = new Ajv({\n    allErrors: true,\n    verbose: true,\n    $data: true\n  });\n  ajvKeywords(ajv, [\"instanceof\", \"formatMinimum\", \"formatMaximum\", \"patternRequired\"]); // Custom keywords\n\n  (0, _absolutePath.default)(ajv);\n  (0, _undefinedAsNull.default)(ajv);\n  return ajv;\n});\n/** @typedef {import(\"json-schema\").JSONSchema4} JSONSchema4 */\n\n/** @typedef {import(\"json-schema\").JSONSchema6} JSONSchema6 */\n\n/** @typedef {import(\"json-schema\").JSONSchema7} JSONSchema7 */\n\n/** @typedef {import(\"ajv\").ErrorObject} ErrorObject */\n\n/** @typedef {import(\"ajv\").ValidateFunction} ValidateFunction */\n\n/**\n * @typedef {Object} Extend\n * @property {number=} formatMinimum\n * @property {number=} formatMaximum\n * @property {boolean=} formatExclusiveMinimum\n * @property {boolean=} formatExclusiveMaximum\n * @property {string=} link\n * @property {boolean=} undefinedAsNull\n */\n\n/** @typedef {(JSONSchema4 | JSONSchema6 | JSONSchema7) & Extend} Schema */\n\n/** @typedef {ErrorObject & { children?: Array<ErrorObject>}} SchemaUtilErrorObject */\n\n/**\n * @callback PostFormatter\n * @param {string} formattedError\n * @param {SchemaUtilErrorObject} error\n * @returns {string}\n */\n\n/**\n * @typedef {Object} ValidationErrorConfiguration\n * @property {string=} name\n * @property {string=} baseDataPath\n * @property {PostFormatter=} postFormatter\n */\n\n/**\n * @param {SchemaUtilErrorObject} error\n * @param {number} idx\n * @returns {SchemaUtilErrorObject}\n */\n\nfunction applyPrefix(error, idx) {\n  // eslint-disable-next-line no-param-reassign\n  error.dataPath = `[${idx}]${error.dataPath}`;\n\n  if (error.children) {\n    error.children.forEach(err => applyPrefix(err, idx));\n  }\n\n  return error;\n}\n\nlet skipValidation = false; // We use `process.env.SKIP_VALIDATION` because you can have multiple `schema-utils` with different version,\n// so we want to disable it globally, `process.env` doesn't supported by browsers, so we have the local `skipValidation` variables\n// Enable validation\n\nfunction enableValidation() {\n  skipValidation = false; // Disable validation for any versions\n\n  if (process && process.env) {\n    process.env.SKIP_VALIDATION = \"n\";\n  }\n} // Disable validation\n\n\nfunction disableValidation() {\n  skipValidation = true;\n\n  if (process && process.env) {\n    process.env.SKIP_VALIDATION = \"y\";\n  }\n} // Check if we need to confirm\n\n\nfunction needValidate() {\n  if (skipValidation) {\n    return false;\n  }\n\n  if (process && process.env && process.env.SKIP_VALIDATION) {\n    const value = process.env.SKIP_VALIDATION.trim();\n\n    if (/^(?:y|yes|true|1|on)$/i.test(value)) {\n      return false;\n    }\n\n    if (/^(?:n|no|false|0|off)$/i.test(value)) {\n      return true;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @param {ValidationErrorConfiguration=} configuration\n * @returns {void}\n */\n\n\nfunction validate(schema, options, configuration) {\n  if (!needValidate()) {\n    return;\n  }\n\n  let errors = [];\n\n  if (Array.isArray(options)) {\n    for (let i = 0; i <= options.length - 1; i++) {\n      errors.push(...validateObject(schema, options[i]).map(err => applyPrefix(err, i)));\n    }\n  } else {\n    errors = validateObject(schema, options);\n  }\n\n  if (errors.length > 0) {\n    throw new _ValidationError.default(errors, schema, configuration);\n  }\n}\n/** @typedef {WeakMap<Schema, ValidateFunction>} */\n\n\nconst schemaCache = new WeakMap();\n/**\n * @param {Schema} schema\n * @param {Array<object> | object} options\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\nfunction validateObject(schema, options) {\n  let compiledSchema = schemaCache.get(schema);\n\n  if (!compiledSchema) {\n    compiledSchema = getAjv().compile(schema);\n    schemaCache.set(schema, compiledSchema);\n  }\n\n  const valid = compiledSchema(options);\n  if (valid) return [];\n  return compiledSchema.errors ? filterErrors(compiledSchema.errors) : [];\n}\n/**\n * @param {Array<ErrorObject>} errors\n * @returns {Array<SchemaUtilErrorObject>}\n */\n\n\nfunction filterErrors(errors) {\n  /** @type {Array<SchemaUtilErrorObject>} */\n  let newErrors = [];\n\n  for (const error of\n  /** @type {Array<SchemaUtilErrorObject>} */\n  errors) {\n    const {\n      dataPath\n    } = error;\n    /** @type {Array<SchemaUtilErrorObject>} */\n\n    let children = [];\n    newErrors = newErrors.filter(oldError => {\n      if (oldError.dataPath.includes(dataPath)) {\n        if (oldError.children) {\n          children = children.concat(oldError.children.slice(0));\n        } // eslint-disable-next-line no-undefined, no-param-reassign\n\n\n        oldError.children = undefined;\n        children.push(oldError);\n        return false;\n      }\n\n      return true;\n    });\n\n    if (children.length) {\n      error.children = children;\n    }\n\n    newErrors.push(error);\n  }\n\n  return newErrors;\n}"]},"metadata":{},"sourceType":"script"}