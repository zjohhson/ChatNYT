{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = decode;\n\nfunction con(b) {\n  if ((b & 0xc0) === 0x80) {\n    return b & 0x3f;\n  } else {\n    throw new Error(\"invalid UTF-8 encoding\");\n  }\n}\n\nfunction code(min, n) {\n  if (n < min || 0xd800 <= n && n < 0xe000 || n >= 0x10000) {\n    throw new Error(\"invalid UTF-8 encoding\");\n  } else {\n    return n;\n  }\n}\n\nfunction decode(bytes) {\n  return _decode(bytes).map(function (x) {\n    return String.fromCharCode(x);\n  }).join(\"\");\n}\n\nfunction _decode(bytes) {\n  var result = [];\n\n  while (bytes.length > 0) {\n    var b1 = bytes[0];\n\n    if (b1 < 0x80) {\n      result.push(code(0x0, b1));\n      bytes = bytes.slice(1);\n      continue;\n    }\n\n    if (b1 < 0xc0) {\n      throw new Error(\"invalid UTF-8 encoding\");\n    }\n\n    var b2 = bytes[1];\n\n    if (b1 < 0xe0) {\n      result.push(code(0x80, ((b1 & 0x1f) << 6) + con(b2)));\n      bytes = bytes.slice(2);\n      continue;\n    }\n\n    var b3 = bytes[2];\n\n    if (b1 < 0xf0) {\n      result.push(code(0x800, ((b1 & 0x0f) << 12) + (con(b2) << 6) + con(b3)));\n      bytes = bytes.slice(3);\n      continue;\n    }\n\n    var b4 = bytes[3];\n\n    if (b1 < 0xf8) {\n      result.push(code(0x10000, (((b1 & 0x07) << 18) + con(b2) << 12) + (con(b3) << 6) + con(b4)));\n      bytes = bytes.slice(4);\n      continue;\n    }\n\n    throw new Error(\"invalid UTF-8 encoding\");\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/@webassemblyjs/utf8/lib/decoder.js"],"names":["Object","defineProperty","exports","value","decode","con","b","Error","code","min","n","bytes","_decode","map","x","String","fromCharCode","join","result","length","b1","push","slice","b2","b3","b4"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = decode;\n\nfunction con(b) {\n  if ((b & 0xc0) === 0x80) {\n    return b & 0x3f;\n  } else {\n    throw new Error(\"invalid UTF-8 encoding\");\n  }\n}\n\nfunction code(min, n) {\n  if (n < min || 0xd800 <= n && n < 0xe000 || n >= 0x10000) {\n    throw new Error(\"invalid UTF-8 encoding\");\n  } else {\n    return n;\n  }\n}\n\nfunction decode(bytes) {\n  return _decode(bytes).map(function (x) {\n    return String.fromCharCode(x);\n  }).join(\"\");\n}\n\nfunction _decode(bytes) {\n  var result = [];\n\n  while (bytes.length > 0) {\n    var b1 = bytes[0];\n\n    if (b1 < 0x80) {\n      result.push(code(0x0, b1));\n      bytes = bytes.slice(1);\n      continue;\n    }\n\n    if (b1 < 0xc0) {\n      throw new Error(\"invalid UTF-8 encoding\");\n    }\n\n    var b2 = bytes[1];\n\n    if (b1 < 0xe0) {\n      result.push(code(0x80, ((b1 & 0x1f) << 6) + con(b2)));\n      bytes = bytes.slice(2);\n      continue;\n    }\n\n    var b3 = bytes[2];\n\n    if (b1 < 0xf0) {\n      result.push(code(0x800, ((b1 & 0x0f) << 12) + (con(b2) << 6) + con(b3)));\n      bytes = bytes.slice(3);\n      continue;\n    }\n\n    var b4 = bytes[3];\n\n    if (b1 < 0xf8) {\n      result.push(code(0x10000, (((b1 & 0x07) << 18) + con(b2) << 12) + (con(b3) << 6) + con(b4)));\n      bytes = bytes.slice(4);\n      continue;\n    }\n\n    throw new Error(\"invalid UTF-8 encoding\");\n  }\n\n  return result;\n}"]},"metadata":{},"sourceType":"script"}