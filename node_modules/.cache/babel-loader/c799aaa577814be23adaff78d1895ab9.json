{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\n\nconst ImportContextDependency = require(\"./ImportContextDependency\");\n\nconst ImportDependency = require(\"./ImportDependency\");\n\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\n\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\n\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\n\nconst PLUGIN_NAME = \"ImportPlugin\";\n\nclass ImportPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        contextModuleFactory,\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(ImportDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportDependency, new ImportDependency.Template());\n      compilation.dependencyFactories.set(ImportEagerDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportEagerDependency, new ImportEagerDependency.Template());\n      compilation.dependencyFactories.set(ImportWeakDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(ImportWeakDependency, new ImportWeakDependency.Template());\n      compilation.dependencyFactories.set(ImportContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(ImportContextDependency, new ImportContextDependency.Template());\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.import !== undefined && !parserOptions.import) return;\n        new ImportParserPlugin(parserOptions).apply(parser);\n      };\n\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, handler);\n    });\n  }\n\n}\n\nmodule.exports = ImportPlugin;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/ImportPlugin.js"],"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_DYNAMIC","JAVASCRIPT_MODULE_TYPE_ESM","require","ImportContextDependency","ImportDependency","ImportEagerDependency","ImportParserPlugin","ImportWeakDependency","PLUGIN_NAME","ImportPlugin","apply","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","import","undefined","for","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AACLA,EAAAA,2BADK;AAELC,EAAAA,8BAFK;AAGLC,EAAAA;AAHK,IAIFC,OAAO,CAAC,wBAAD,CAJX;;AAKA,MAAMC,uBAAuB,GAAGD,OAAO,CAAC,2BAAD,CAAvC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAAhC;;AACA,MAAMG,qBAAqB,GAAGH,OAAO,CAAC,yBAAD,CAArC;;AACA,MAAMI,kBAAkB,GAAGJ,OAAO,CAAC,sBAAD,CAAlC;;AACA,MAAMK,oBAAoB,GAAGL,OAAO,CAAC,wBAAD,CAApC;AAEA;;AACA;;AACA;;;AAEA,MAAMM,WAAW,GAAG,cAApB;;AAEA,MAAMC,YAAN,CAAmB;AAClB;AACD;AACA;AACA;AACA;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACCN,WADD,EAEC,CAACK,WAAD,WAAgE;AAAA,UAAlD;AAAEE,QAAAA,oBAAF;AAAwBC,QAAAA;AAAxB,OAAkD;AAC/DH,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCd,gBADD,EAECY,mBAFD;AAIAH,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCd,gBADD,EAEC,IAAIA,gBAAgB,CAACgB,QAArB,EAFD;AAKAP,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCb,qBADD,EAECW,mBAFD;AAIAH,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCb,qBADD,EAEC,IAAIA,qBAAqB,CAACe,QAA1B,EAFD;AAKAP,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCX,oBADD,EAECS,mBAFD;AAIAH,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCX,oBADD,EAEC,IAAIA,oBAAoB,CAACa,QAAzB,EAFD;AAKAP,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCf,uBADD,EAECY,oBAFD;AAIAF,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCf,uBADD,EAEC,IAAIA,uBAAuB,CAACiB,QAA5B,EAFD;AAKA;AACJ;AACA;AACA;AACA;;AACI,YAAMC,OAAO,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;AAC1C,YAAIA,aAAa,CAACC,MAAd,KAAyBC,SAAzB,IAAsC,CAACF,aAAa,CAACC,MAAzD,EACC;AAED,YAAIlB,kBAAJ,CAAuBiB,aAAvB,EAAsCb,KAAtC,CAA4CY,MAA5C;AACA,OALD;;AAOAN,MAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM3B,2BADN,EAEEe,GAFF,CAEMN,WAFN,EAEmBa,OAFnB;AAGAL,MAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACM1B,8BADN,EAEEc,GAFF,CAEMN,WAFN,EAEmBa,OAFnB;AAGAL,MAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACMzB,0BADN,EAEEa,GAFF,CAEMN,WAFN,EAEmBa,OAFnB;AAGA,KA5DF;AA8DA;;AArEiB;;AAuEnBM,MAAM,CAACC,OAAP,GAAiBnB,YAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_DYNAMIC,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst ImportContextDependency = require(\"./ImportContextDependency\");\nconst ImportDependency = require(\"./ImportDependency\");\nconst ImportEagerDependency = require(\"./ImportEagerDependency\");\nconst ImportParserPlugin = require(\"./ImportParserPlugin\");\nconst ImportWeakDependency = require(\"./ImportWeakDependency\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"ImportPlugin\";\n\nclass ImportPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportDependency,\n\t\t\t\t\tnew ImportDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportEagerDependency,\n\t\t\t\t\tnew ImportEagerDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportWeakDependency,\n\t\t\t\t\tnew ImportWeakDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportContextDependency,\n\t\t\t\t\tnew ImportContextDependency.Template()\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (parserOptions.import !== undefined && !parserOptions.import)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportParserPlugin(parserOptions).apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_DYNAMIC)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ImportPlugin;\n"]},"metadata":{},"sourceType":"script"}