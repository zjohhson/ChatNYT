{"ast":null,"code":"var _jsxFileName = \"/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/Row.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row(_ref) {\n  let {\n    guess,\n    currentGuess\n  } = _ref;\n\n  if (guess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row past\",\n      children: guess.map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: l.color,\n        children: l.key\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (currentGuess) {\n    let letters = currentGuess.split('');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row current\",\n      children: [letters.map((letter, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filled\",\n        children: letter\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)), [...Array(5 - letters.length)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {}, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/Row.js"],"names":["React","Row","guess","currentGuess","map","l","i","color","key","letters","split","letter","Array","length","_"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,GAAT,OAAsC;AAAA,MAAzB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAyB;;AAEnD,MAAID,KAAJ,EAAW;AACT,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGA,KAAK,CAACE,GAAN,CAAU,CAACC,CAAD,EAAIC,CAAJ,kBACT;AAAa,QAAA,SAAS,EAAED,CAAC,CAACE,KAA1B;AAAA,kBAAkCF,CAAC,CAACG;AAApC,SAAUF,CAAV;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,MAAIH,YAAJ,EAAkB;AAChB,QAAIM,OAAO,GAAGN,YAAY,CAACO,KAAb,CAAmB,EAAnB,CAAd;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACGD,OAAO,CAACL,GAAR,CAAY,CAACO,MAAD,EAASL,CAAT,kBACX;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAA,kBAAiCK;AAAjC,SAAUL,CAAV;AAAA;AAAA;AAAA;AAAA,cADD,CADH,EAIG,CAAC,GAAGM,KAAK,CAAC,IAAIH,OAAO,CAACI,MAAb,CAAT,EAA+BT,GAA/B,CAAmC,CAACU,CAAD,EAAGR,CAAH,kBAClC,mBAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;KArCuBL,G","sourcesContent":["import React from 'react'\n\nexport default function Row({ guess, currentGuess }) {\n\n  if (guess) {\n    return (\n      <div className=\"row past\">\n        {guess.map((l, i) => (\n          <div key={i} className={l.color}>{l.key}</div>\n        ))}\n      </div>\n    )\n  }\n\n  if (currentGuess) {\n    let letters = currentGuess.split('')\n\n    return (\n      <div className=\"row current\">\n        {letters.map((letter, i) => (\n          <div key={i} className=\"filled\">{letter}</div>\n        ))}\n        {[...Array(5 - letters.length)].map((_,i) => (\n          <div key={i}></div>\n        ))}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"row\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  )\n  \n}\n"]},"metadata":{},"sourceType":"module"}