{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse32F = parse32F;\nexports.parse64F = parse64F;\nexports.parse32I = parse32I;\nexports.parseU32 = parseU32;\nexports.parse64I = parse64I;\nexports.isInfLiteral = isInfLiteral;\nexports.isNanLiteral = isNanLiteral;\n\nvar _long2 = _interopRequireDefault(require(\"@xtuc/long\"));\n\nvar _floatingPointHexParser = _interopRequireDefault(require(\"@webassemblyjs/floating-point-hex-parser\"));\n\nvar _helperApiError = require(\"@webassemblyjs/helper-api-error\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction parse32F(sourceString) {\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  if (isInfLiteral(sourceString)) {\n    return sourceString[0] === \"-\" ? -1 : 1;\n  }\n\n  if (isNanLiteral(sourceString)) {\n    return (sourceString[0] === \"-\" ? -1 : 1) * (sourceString.includes(\":\") ? parseInt(sourceString.substring(sourceString.indexOf(\":\") + 1), 16) : 0x400000);\n  }\n\n  return parseFloat(sourceString);\n}\n\nfunction parse64F(sourceString) {\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  if (isInfLiteral(sourceString)) {\n    return sourceString[0] === \"-\" ? -1 : 1;\n  }\n\n  if (isNanLiteral(sourceString)) {\n    return (sourceString[0] === \"-\" ? -1 : 1) * (sourceString.includes(\":\") ? parseInt(sourceString.substring(sourceString.indexOf(\":\") + 1), 16) : 0x8000000000000);\n  }\n\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  return parseFloat(sourceString);\n}\n\nfunction parse32I(sourceString) {\n  var value = 0;\n\n  if (isHexLiteral(sourceString)) {\n    value = ~~parseInt(sourceString, 16);\n  } else if (isDecimalExponentLiteral(sourceString)) {\n    throw new Error(\"This number literal format is yet to be implemented.\");\n  } else {\n    value = parseInt(sourceString, 10);\n  }\n\n  return value;\n}\n\nfunction parseU32(sourceString) {\n  var value = parse32I(sourceString);\n\n  if (value < 0) {\n    throw new _helperApiError.CompileError(\"Illegal value for u32: \" + sourceString);\n  }\n\n  return value;\n}\n\nfunction parse64I(sourceString) {\n  // $FlowIgnore\n  var _long;\n\n  if (isHexLiteral(sourceString)) {\n    _long = _long2[\"default\"].fromString(sourceString, false, 16);\n  } else if (isDecimalExponentLiteral(sourceString)) {\n    throw new Error(\"This number literal format is yet to be implemented.\");\n  } else {\n    _long = _long2[\"default\"].fromString(sourceString);\n  }\n\n  return {\n    high: _long.high,\n    low: _long.low\n  };\n}\n\nvar NAN_WORD = /^\\+?-?nan/;\nvar INF_WORD = /^\\+?-?inf/;\n\nfunction isInfLiteral(sourceString) {\n  return INF_WORD.test(sourceString.toLowerCase());\n}\n\nfunction isNanLiteral(sourceString) {\n  return NAN_WORD.test(sourceString.toLowerCase());\n}\n\nfunction isDecimalExponentLiteral(sourceString) {\n  return !isHexLiteral(sourceString) && sourceString.toUpperCase().includes(\"E\");\n}\n\nfunction isHexLiteral(sourceString) {\n  return sourceString.substring(0, 2).toUpperCase() === \"0X\" || sourceString.substring(0, 3).toUpperCase() === \"-0X\";\n}","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/@webassemblyjs/helper-numbers/lib/index.js"],"names":["Object","defineProperty","exports","value","parse32F","parse64F","parse32I","parseU32","parse64I","isInfLiteral","isNanLiteral","_long2","_interopRequireDefault","require","_floatingPointHexParser","_helperApiError","obj","__esModule","sourceString","isHexLiteral","includes","parseInt","substring","indexOf","parseFloat","isDecimalExponentLiteral","Error","CompileError","_long","fromString","high","low","NAN_WORD","INF_WORD","test","toLowerCase","toUpperCase"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parse32F = parse32F;\nexports.parse64F = parse64F;\nexports.parse32I = parse32I;\nexports.parseU32 = parseU32;\nexports.parse64I = parse64I;\nexports.isInfLiteral = isInfLiteral;\nexports.isNanLiteral = isNanLiteral;\n\nvar _long2 = _interopRequireDefault(require(\"@xtuc/long\"));\n\nvar _floatingPointHexParser = _interopRequireDefault(require(\"@webassemblyjs/floating-point-hex-parser\"));\n\nvar _helperApiError = require(\"@webassemblyjs/helper-api-error\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction parse32F(sourceString) {\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  if (isInfLiteral(sourceString)) {\n    return sourceString[0] === \"-\" ? -1 : 1;\n  }\n\n  if (isNanLiteral(sourceString)) {\n    return (sourceString[0] === \"-\" ? -1 : 1) * (sourceString.includes(\":\") ? parseInt(sourceString.substring(sourceString.indexOf(\":\") + 1), 16) : 0x400000);\n  }\n\n  return parseFloat(sourceString);\n}\n\nfunction parse64F(sourceString) {\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  if (isInfLiteral(sourceString)) {\n    return sourceString[0] === \"-\" ? -1 : 1;\n  }\n\n  if (isNanLiteral(sourceString)) {\n    return (sourceString[0] === \"-\" ? -1 : 1) * (sourceString.includes(\":\") ? parseInt(sourceString.substring(sourceString.indexOf(\":\") + 1), 16) : 0x8000000000000);\n  }\n\n  if (isHexLiteral(sourceString)) {\n    return (0, _floatingPointHexParser[\"default\"])(sourceString);\n  }\n\n  return parseFloat(sourceString);\n}\n\nfunction parse32I(sourceString) {\n  var value = 0;\n\n  if (isHexLiteral(sourceString)) {\n    value = ~~parseInt(sourceString, 16);\n  } else if (isDecimalExponentLiteral(sourceString)) {\n    throw new Error(\"This number literal format is yet to be implemented.\");\n  } else {\n    value = parseInt(sourceString, 10);\n  }\n\n  return value;\n}\n\nfunction parseU32(sourceString) {\n  var value = parse32I(sourceString);\n\n  if (value < 0) {\n    throw new _helperApiError.CompileError(\"Illegal value for u32: \" + sourceString);\n  }\n\n  return value;\n}\n\nfunction parse64I(sourceString) {\n  // $FlowIgnore\n  var _long;\n\n  if (isHexLiteral(sourceString)) {\n    _long = _long2[\"default\"].fromString(sourceString, false, 16);\n  } else if (isDecimalExponentLiteral(sourceString)) {\n    throw new Error(\"This number literal format is yet to be implemented.\");\n  } else {\n    _long = _long2[\"default\"].fromString(sourceString);\n  }\n\n  return {\n    high: _long.high,\n    low: _long.low\n  };\n}\n\nvar NAN_WORD = /^\\+?-?nan/;\nvar INF_WORD = /^\\+?-?inf/;\n\nfunction isInfLiteral(sourceString) {\n  return INF_WORD.test(sourceString.toLowerCase());\n}\n\nfunction isNanLiteral(sourceString) {\n  return NAN_WORD.test(sourceString.toLowerCase());\n}\n\nfunction isDecimalExponentLiteral(sourceString) {\n  return !isHexLiteral(sourceString) && sourceString.toUpperCase().includes(\"E\");\n}\n\nfunction isHexLiteral(sourceString) {\n  return sourceString.substring(0, 2).toUpperCase() === \"0X\" || sourceString.substring(0, 3).toUpperCase() === \"-0X\";\n}"]},"metadata":{},"sourceType":"script"}