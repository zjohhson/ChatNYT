{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst {\n  getDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\n\nconst {\n  getTrimmedIdsAndRange\n} = require(\"../util/chainedImports\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n\n/** @typedef {import(\"../javascript/JavascriptParser\").Assertions} Assertions */\n\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"../util/Hash\")} Hash */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n\nconst idsSymbol = Symbol(\"HarmonyImportSpecifierDependency.ids\");\nconst {\n  ExportPresenceModes\n} = HarmonyImportDependency;\n\nclass HarmonyImportSpecifierDependency extends HarmonyImportDependency {\n  /**\n   * @param {TODO} request request\n   * @param {number} sourceOrder source order\n   * @param {string[]} ids ids\n   * @param {string} name name\n   * @param {Range} range range\n   * @param {TODO} exportPresenceMode export presence mode\n   * @param {Assertions=} assertions assertions\n   * @param {Range[]=} idRanges ranges for members of ids; the two arrays are right-aligned\n   */\n  constructor(request, sourceOrder, ids, name, range, exportPresenceMode, assertions, idRanges // TODO webpack 6 make this non-optional. It must always be set to properly trim ids.\n  ) {\n    super(request, sourceOrder, assertions);\n    this.ids = ids;\n    this.name = name;\n    this.range = range;\n    this.idRanges = idRanges;\n    this.exportPresenceMode = exportPresenceMode;\n    /** @type {boolean | undefined} */\n\n    this.namespaceObjectAsContext = false;\n    this.call = undefined;\n    this.directImport = undefined;\n    this.shorthand = undefined;\n    this.asiSafe = undefined;\n    /** @type {Set<string> | boolean | undefined} */\n\n    this.usedByExports = undefined;\n    /** @type {Set<string> | undefined} */\n\n    this.referencedPropertiesInDestructuring = undefined;\n  } // TODO webpack 6 remove\n\n\n  get id() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  } // TODO webpack 6 remove\n\n\n  getId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  } // TODO webpack 6 remove\n\n\n  setId() {\n    throw new Error(\"id was renamed to ids and type changed to string[]\");\n  }\n\n  get type() {\n    return \"harmony import specifier\";\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {string[]} the imported ids\n   */\n\n\n  getIds(moduleGraph) {\n    const meta = moduleGraph.getMetaIfExisting(this);\n    if (meta === undefined) return this.ids;\n    const ids = meta[idsSymbol];\n    return ids !== undefined ? ids : this.ids;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @param {string[]} ids the imported ids\n   * @returns {void}\n   */\n\n\n  setIds(moduleGraph, ids) {\n    moduleGraph.getMeta(this)[idsSymbol] = ids;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\n   */\n\n\n  getCondition(moduleGraph) {\n    return getDependencyUsedByExportsCondition(this, this.usedByExports, moduleGraph);\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph the module graph\n   * @returns {ConnectionState} how this dependency connects the module to referencing modules\n   */\n\n\n  getModuleEvaluationSideEffectsState(moduleGraph) {\n    return false;\n  }\n  /**\n   * Returns list of exports referenced by this dependency\n   * @param {ModuleGraph} moduleGraph module graph\n   * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  getReferencedExports(moduleGraph, runtime) {\n    let ids = this.getIds(moduleGraph);\n    if (ids.length === 0) return this._getReferencedExportsInDestructuring();\n    let namespaceObjectAsContext = this.namespaceObjectAsContext;\n\n    if (ids[0] === \"default\") {\n      const selfModule = moduleGraph.getParentModule(this);\n      const importedModule =\n      /** @type {Module} */\n      moduleGraph.getModule(this);\n\n      switch (importedModule.getExportsType(moduleGraph,\n      /** @type {BuildMeta} */\n      selfModule.buildMeta.strictHarmonyModule)) {\n        case \"default-only\":\n        case \"default-with-named\":\n          if (ids.length === 1) return this._getReferencedExportsInDestructuring();\n          ids = ids.slice(1);\n          namespaceObjectAsContext = true;\n          break;\n\n        case \"dynamic\":\n          return Dependency.EXPORTS_OBJECT_REFERENCED;\n      }\n    }\n\n    if (this.call && !this.directImport && (namespaceObjectAsContext || ids.length > 1)) {\n      if (ids.length === 1) return Dependency.EXPORTS_OBJECT_REFERENCED;\n      ids = ids.slice(0, -1);\n    }\n\n    return this._getReferencedExportsInDestructuring(ids);\n  }\n  /**\n   * @param {string[]=} ids ids\n   * @returns {(string[] | ReferencedExport)[]} referenced exports\n   */\n\n\n  _getReferencedExportsInDestructuring(ids) {\n    if (this.referencedPropertiesInDestructuring) {\n      /** @type {ReferencedExport[]} */\n      const refs = [];\n\n      for (const key of this.referencedPropertiesInDestructuring) {\n        refs.push({\n          name: ids ? ids.concat([key]) : [key],\n          canMangle: false\n        });\n      }\n\n      return refs;\n    } else {\n      return ids ? [ids] : Dependency.EXPORTS_OBJECT_REFERENCED;\n    }\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {number} effective mode\n   */\n\n\n  _getEffectiveExportPresenceLevel(moduleGraph) {\n    if (this.exportPresenceMode !== ExportPresenceModes.AUTO) return this.exportPresenceMode;\n    const buildMeta =\n    /** @type {BuildMeta} */\n    moduleGraph.getParentModule(this).buildMeta;\n    return buildMeta.strictHarmonyModule ? ExportPresenceModes.ERROR : ExportPresenceModes.WARN;\n  }\n  /**\n   * Returns warnings\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[] | null | undefined} warnings\n   */\n\n\n  getWarnings(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\n    if (exportsPresence === ExportPresenceModes.WARN) {\n      return this._getErrors(moduleGraph);\n    }\n\n    return null;\n  }\n  /**\n   * Returns errors\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[] | null | undefined} errors\n   */\n\n\n  getErrors(moduleGraph) {\n    const exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\n    if (exportsPresence === ExportPresenceModes.ERROR) {\n      return this._getErrors(moduleGraph);\n    }\n\n    return null;\n  }\n  /**\n   * @param {ModuleGraph} moduleGraph module graph\n   * @returns {WebpackError[] | undefined} errors\n   */\n\n\n  _getErrors(moduleGraph) {\n    const ids = this.getIds(moduleGraph);\n    return this.getLinkingErrors(moduleGraph, ids, `(imported as '${this.name}')`);\n  }\n  /**\n   * implement this method to allow the occurrence order plugin to count correctly\n   * @returns {number} count how often the id is used in this dependency\n   */\n\n\n  getNumberOfIdOccurrences() {\n    return 0;\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.ids);\n    write(this.name);\n    write(this.range);\n    write(this.idRanges);\n    write(this.exportPresenceMode);\n    write(this.namespaceObjectAsContext);\n    write(this.call);\n    write(this.directImport);\n    write(this.shorthand);\n    write(this.asiSafe);\n    write(this.usedByExports);\n    write(this.referencedPropertiesInDestructuring);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.ids = read();\n    this.name = read();\n    this.range = read();\n    this.idRanges = read();\n    this.exportPresenceMode = read();\n    this.namespaceObjectAsContext = read();\n    this.call = read();\n    this.directImport = read();\n    this.shorthand = read();\n    this.asiSafe = read();\n    this.usedByExports = read();\n    this.referencedPropertiesInDestructuring = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(HarmonyImportSpecifierDependency, \"webpack/lib/dependencies/HarmonyImportSpecifierDependency\");\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate extends HarmonyImportDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, templateContext) {\n    const dep =\n    /** @type {HarmonyImportSpecifierDependency} */\n    dependency;\n    const {\n      moduleGraph,\n      runtime\n    } = templateContext;\n    const connection = moduleGraph.getConnection(dep); // Skip rendering depending when dependency is conditional\n\n    if (connection && !connection.isTargetActive(runtime)) return;\n    const {\n      trimmedRange: [trimmedRangeStart, trimmedRangeEnd],\n      trimmedIds\n    } = getTrimmedIdsAndRange(dep.getIds(moduleGraph), dep.range, dep.idRanges, moduleGraph, dep);\n\n    const exportExpr = this._getCodeForIds(dep, source, templateContext, trimmedIds);\n\n    if (dep.shorthand) {\n      source.insert(trimmedRangeEnd, `: ${exportExpr}`);\n    } else {\n      source.replace(trimmedRangeStart, trimmedRangeEnd - 1, exportExpr);\n    }\n  }\n  /**\n   * @param {HarmonyImportSpecifierDependency} dep dependency\n   * @param {ReplaceSource} source source\n   * @param {DependencyTemplateContext} templateContext context\n   * @param {string[]} ids ids\n   * @returns {string} generated code\n   */\n\n\n  _getCodeForIds(dep, source, templateContext, ids) {\n    const {\n      moduleGraph,\n      module,\n      runtime,\n      concatenationScope\n    } = templateContext;\n    const connection = moduleGraph.getConnection(dep);\n    let exportExpr;\n\n    if (connection && concatenationScope && concatenationScope.isModuleInScope(connection.module)) {\n      if (ids.length === 0) {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          asiSafe: dep.asiSafe\n        });\n      } else if (dep.namespaceObjectAsContext && ids.length === 1) {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          asiSafe: dep.asiSafe\n        }) + propertyAccess(ids);\n      } else {\n        exportExpr = concatenationScope.createModuleReference(connection.module, {\n          ids,\n          call: dep.call,\n          directImport: dep.directImport,\n          asiSafe: dep.asiSafe\n        });\n      }\n    } else {\n      super.apply(dep, source, templateContext);\n      const {\n        runtimeTemplate,\n        initFragments,\n        runtimeRequirements\n      } = templateContext;\n      exportExpr = runtimeTemplate.exportFromImport({\n        moduleGraph,\n        module:\n        /** @type {Module} */\n        moduleGraph.getModule(dep),\n        request: dep.request,\n        exportName: ids,\n        originModule: module,\n        asiSafe: dep.shorthand ? true : dep.asiSafe,\n        isCall: dep.call,\n        callContext: !dep.directImport,\n        defaultInterop: true,\n        importVar: dep.getImportVar(moduleGraph),\n        initFragments,\n        runtime,\n        runtimeRequirements\n      });\n    }\n\n    return exportExpr;\n  }\n\n};\nmodule.exports = HarmonyImportSpecifierDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/HarmonyImportSpecifierDependency.js"],"names":["Dependency","require","getDependencyUsedByExportsCondition","getTrimmedIdsAndRange","makeSerializable","propertyAccess","HarmonyImportDependency","idsSymbol","Symbol","ExportPresenceModes","HarmonyImportSpecifierDependency","constructor","request","sourceOrder","ids","name","range","exportPresenceMode","assertions","idRanges","namespaceObjectAsContext","call","undefined","directImport","shorthand","asiSafe","usedByExports","referencedPropertiesInDestructuring","id","Error","getId","setId","type","getIds","moduleGraph","meta","getMetaIfExisting","setIds","getMeta","getCondition","getModuleEvaluationSideEffectsState","getReferencedExports","runtime","length","_getReferencedExportsInDestructuring","selfModule","getParentModule","importedModule","getModule","getExportsType","buildMeta","strictHarmonyModule","slice","EXPORTS_OBJECT_REFERENCED","refs","key","push","concat","canMangle","_getEffectiveExportPresenceLevel","AUTO","ERROR","WARN","getWarnings","exportsPresence","_getErrors","getErrors","getLinkingErrors","getNumberOfIdOccurrences","serialize","context","write","deserialize","read","Template","HarmonyImportSpecifierDependencyTemplate","apply","dependency","source","templateContext","dep","connection","getConnection","isTargetActive","trimmedRange","trimmedRangeStart","trimmedRangeEnd","trimmedIds","exportExpr","_getCodeForIds","insert","replace","module","concatenationScope","isModuleInScope","createModuleReference","runtimeTemplate","initFragments","runtimeRequirements","exportFromImport","exportName","originModule","isCall","callContext","defaultInterop","importVar","getImportVar","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst {\n\tgetDependencyUsedByExportsCondition\n} = require(\"../optimize/InnerGraph\");\nconst { getTrimmedIdsAndRange } = require(\"../util/chainedImports\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst HarmonyImportDependency = require(\"./HarmonyImportDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Dependency\").ExportsSpec} ExportsSpec */\n/** @typedef {import(\"../Dependency\").ReferencedExport} ReferencedExport */\n/** @typedef {import(\"../Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../ModuleGraph\")} ModuleGraph */\n/** @typedef {import(\"../ModuleGraphConnection\")} ModuleGraphConnection */\n/** @typedef {import(\"../ModuleGraphConnection\").ConnectionState} ConnectionState */\n/** @typedef {import(\"../WebpackError\")} WebpackError */\n/** @typedef {import(\"../javascript/JavascriptParser\").Assertions} Assertions */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"../util/Hash\")} Hash */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\nconst idsSymbol = Symbol(\"HarmonyImportSpecifierDependency.ids\");\n\nconst { ExportPresenceModes } = HarmonyImportDependency;\n\nclass HarmonyImportSpecifierDependency extends HarmonyImportDependency {\n\t/**\n\t * @param {TODO} request request\n\t * @param {number} sourceOrder source order\n\t * @param {string[]} ids ids\n\t * @param {string} name name\n\t * @param {Range} range range\n\t * @param {TODO} exportPresenceMode export presence mode\n\t * @param {Assertions=} assertions assertions\n\t * @param {Range[]=} idRanges ranges for members of ids; the two arrays are right-aligned\n\t */\n\tconstructor(\n\t\trequest,\n\t\tsourceOrder,\n\t\tids,\n\t\tname,\n\t\trange,\n\t\texportPresenceMode,\n\t\tassertions,\n\t\tidRanges // TODO webpack 6 make this non-optional. It must always be set to properly trim ids.\n\t) {\n\t\tsuper(request, sourceOrder, assertions);\n\t\tthis.ids = ids;\n\t\tthis.name = name;\n\t\tthis.range = range;\n\t\tthis.idRanges = idRanges;\n\t\tthis.exportPresenceMode = exportPresenceMode;\n\t\t/** @type {boolean | undefined} */\n\t\tthis.namespaceObjectAsContext = false;\n\t\tthis.call = undefined;\n\t\tthis.directImport = undefined;\n\t\tthis.shorthand = undefined;\n\t\tthis.asiSafe = undefined;\n\t\t/** @type {Set<string> | boolean | undefined} */\n\t\tthis.usedByExports = undefined;\n\t\t/** @type {Set<string> | undefined} */\n\t\tthis.referencedPropertiesInDestructuring = undefined;\n\t}\n\n\t// TODO webpack 6 remove\n\tget id() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\t// TODO webpack 6 remove\n\tgetId() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\t// TODO webpack 6 remove\n\tsetId() {\n\t\tthrow new Error(\"id was renamed to ids and type changed to string[]\");\n\t}\n\n\tget type() {\n\t\treturn \"harmony import specifier\";\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {string[]} the imported ids\n\t */\n\tgetIds(moduleGraph) {\n\t\tconst meta = moduleGraph.getMetaIfExisting(this);\n\t\tif (meta === undefined) return this.ids;\n\t\tconst ids = meta[idsSymbol];\n\t\treturn ids !== undefined ? ids : this.ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @param {string[]} ids the imported ids\n\t * @returns {void}\n\t */\n\tsetIds(moduleGraph, ids) {\n\t\tmoduleGraph.getMeta(this)[idsSymbol] = ids;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {null | false | function(ModuleGraphConnection, RuntimeSpec): ConnectionState} function to determine if the connection is active\n\t */\n\tgetCondition(moduleGraph) {\n\t\treturn getDependencyUsedByExportsCondition(\n\t\t\tthis,\n\t\t\tthis.usedByExports,\n\t\t\tmoduleGraph\n\t\t);\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph the module graph\n\t * @returns {ConnectionState} how this dependency connects the module to referencing modules\n\t */\n\tgetModuleEvaluationSideEffectsState(moduleGraph) {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns list of exports referenced by this dependency\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @param {RuntimeSpec} runtime the runtime for which the module is analysed\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\tgetReferencedExports(moduleGraph, runtime) {\n\t\tlet ids = this.getIds(moduleGraph);\n\t\tif (ids.length === 0) return this._getReferencedExportsInDestructuring();\n\t\tlet namespaceObjectAsContext = this.namespaceObjectAsContext;\n\t\tif (ids[0] === \"default\") {\n\t\t\tconst selfModule = moduleGraph.getParentModule(this);\n\t\t\tconst importedModule =\n\t\t\t\t/** @type {Module} */\n\t\t\t\t(moduleGraph.getModule(this));\n\t\t\tswitch (\n\t\t\t\timportedModule.getExportsType(\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\t/** @type {BuildMeta} */\n\t\t\t\t\t(selfModule.buildMeta).strictHarmonyModule\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tcase \"default-only\":\n\t\t\t\tcase \"default-with-named\":\n\t\t\t\t\tif (ids.length === 1)\n\t\t\t\t\t\treturn this._getReferencedExportsInDestructuring();\n\t\t\t\t\tids = ids.slice(1);\n\t\t\t\t\tnamespaceObjectAsContext = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dynamic\":\n\t\t\t\t\treturn Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\tthis.call &&\n\t\t\t!this.directImport &&\n\t\t\t(namespaceObjectAsContext || ids.length > 1)\n\t\t) {\n\t\t\tif (ids.length === 1) return Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t\tids = ids.slice(0, -1);\n\t\t}\n\n\t\treturn this._getReferencedExportsInDestructuring(ids);\n\t}\n\n\t/**\n\t * @param {string[]=} ids ids\n\t * @returns {(string[] | ReferencedExport)[]} referenced exports\n\t */\n\t_getReferencedExportsInDestructuring(ids) {\n\t\tif (this.referencedPropertiesInDestructuring) {\n\t\t\t/** @type {ReferencedExport[]} */\n\t\t\tconst refs = [];\n\t\t\tfor (const key of this.referencedPropertiesInDestructuring) {\n\t\t\t\trefs.push({\n\t\t\t\t\tname: ids ? ids.concat([key]) : [key],\n\t\t\t\t\tcanMangle: false\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn refs;\n\t\t} else {\n\t\t\treturn ids ? [ids] : Dependency.EXPORTS_OBJECT_REFERENCED;\n\t\t}\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {number} effective mode\n\t */\n\t_getEffectiveExportPresenceLevel(moduleGraph) {\n\t\tif (this.exportPresenceMode !== ExportPresenceModes.AUTO)\n\t\t\treturn this.exportPresenceMode;\n\t\tconst buildMeta = /** @type {BuildMeta} */ (\n\t\t\tmoduleGraph.getParentModule(this).buildMeta\n\t\t);\n\t\treturn buildMeta.strictHarmonyModule\n\t\t\t? ExportPresenceModes.ERROR\n\t\t\t: ExportPresenceModes.WARN;\n\t}\n\n\t/**\n\t * Returns warnings\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[] | null | undefined} warnings\n\t */\n\tgetWarnings(moduleGraph) {\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\t\tif (exportsPresence === ExportPresenceModes.WARN) {\n\t\t\treturn this._getErrors(moduleGraph);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Returns errors\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[] | null | undefined} errors\n\t */\n\tgetErrors(moduleGraph) {\n\t\tconst exportsPresence = this._getEffectiveExportPresenceLevel(moduleGraph);\n\t\tif (exportsPresence === ExportPresenceModes.ERROR) {\n\t\t\treturn this._getErrors(moduleGraph);\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {ModuleGraph} moduleGraph module graph\n\t * @returns {WebpackError[] | undefined} errors\n\t */\n\t_getErrors(moduleGraph) {\n\t\tconst ids = this.getIds(moduleGraph);\n\t\treturn this.getLinkingErrors(\n\t\t\tmoduleGraph,\n\t\t\tids,\n\t\t\t`(imported as '${this.name}')`\n\t\t);\n\t}\n\n\t/**\n\t * implement this method to allow the occurrence order plugin to count correctly\n\t * @returns {number} count how often the id is used in this dependency\n\t */\n\tgetNumberOfIdOccurrences() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.ids);\n\t\twrite(this.name);\n\t\twrite(this.range);\n\t\twrite(this.idRanges);\n\t\twrite(this.exportPresenceMode);\n\t\twrite(this.namespaceObjectAsContext);\n\t\twrite(this.call);\n\t\twrite(this.directImport);\n\t\twrite(this.shorthand);\n\t\twrite(this.asiSafe);\n\t\twrite(this.usedByExports);\n\t\twrite(this.referencedPropertiesInDestructuring);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\t\tthis.ids = read();\n\t\tthis.name = read();\n\t\tthis.range = read();\n\t\tthis.idRanges = read();\n\t\tthis.exportPresenceMode = read();\n\t\tthis.namespaceObjectAsContext = read();\n\t\tthis.call = read();\n\t\tthis.directImport = read();\n\t\tthis.shorthand = read();\n\t\tthis.asiSafe = read();\n\t\tthis.usedByExports = read();\n\t\tthis.referencedPropertiesInDestructuring = read();\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tHarmonyImportSpecifierDependency,\n\t\"webpack/lib/dependencies/HarmonyImportSpecifierDependency\"\n);\n\nHarmonyImportSpecifierDependency.Template = class HarmonyImportSpecifierDependencyTemplate extends (\n\tHarmonyImportDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, templateContext) {\n\t\tconst dep = /** @type {HarmonyImportSpecifierDependency} */ (dependency);\n\t\tconst { moduleGraph, runtime } = templateContext;\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\t// Skip rendering depending when dependency is conditional\n\t\tif (connection && !connection.isTargetActive(runtime)) return;\n\n\t\tconst {\n\t\t\ttrimmedRange: [trimmedRangeStart, trimmedRangeEnd],\n\t\t\ttrimmedIds\n\t\t} = getTrimmedIdsAndRange(\n\t\t\tdep.getIds(moduleGraph),\n\t\t\tdep.range,\n\t\t\tdep.idRanges,\n\t\t\tmoduleGraph,\n\t\t\tdep\n\t\t);\n\n\t\tconst exportExpr = this._getCodeForIds(\n\t\t\tdep,\n\t\t\tsource,\n\t\t\ttemplateContext,\n\t\t\ttrimmedIds\n\t\t);\n\t\tif (dep.shorthand) {\n\t\t\tsource.insert(trimmedRangeEnd, `: ${exportExpr}`);\n\t\t} else {\n\t\t\tsource.replace(trimmedRangeStart, trimmedRangeEnd - 1, exportExpr);\n\t\t}\n\t}\n\n\t/**\n\t * @param {HarmonyImportSpecifierDependency} dep dependency\n\t * @param {ReplaceSource} source source\n\t * @param {DependencyTemplateContext} templateContext context\n\t * @param {string[]} ids ids\n\t * @returns {string} generated code\n\t */\n\t_getCodeForIds(dep, source, templateContext, ids) {\n\t\tconst { moduleGraph, module, runtime, concatenationScope } =\n\t\t\ttemplateContext;\n\t\tconst connection = moduleGraph.getConnection(dep);\n\t\tlet exportExpr;\n\t\tif (\n\t\t\tconnection &&\n\t\t\tconcatenationScope &&\n\t\t\tconcatenationScope.isModuleInScope(connection.module)\n\t\t) {\n\t\t\tif (ids.length === 0) {\n\t\t\t\texportExpr = concatenationScope.createModuleReference(\n\t\t\t\t\tconnection.module,\n\t\t\t\t\t{\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} else if (dep.namespaceObjectAsContext && ids.length === 1) {\n\t\t\t\texportExpr =\n\t\t\t\t\tconcatenationScope.createModuleReference(connection.module, {\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}) + propertyAccess(ids);\n\t\t\t} else {\n\t\t\t\texportExpr = concatenationScope.createModuleReference(\n\t\t\t\t\tconnection.module,\n\t\t\t\t\t{\n\t\t\t\t\t\tids,\n\t\t\t\t\t\tcall: dep.call,\n\t\t\t\t\t\tdirectImport: dep.directImport,\n\t\t\t\t\t\tasiSafe: dep.asiSafe\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tsuper.apply(dep, source, templateContext);\n\n\t\t\tconst { runtimeTemplate, initFragments, runtimeRequirements } =\n\t\t\t\ttemplateContext;\n\n\t\t\texportExpr = runtimeTemplate.exportFromImport({\n\t\t\t\tmoduleGraph,\n\t\t\t\tmodule: /** @type {Module} */ (moduleGraph.getModule(dep)),\n\t\t\t\trequest: dep.request,\n\t\t\t\texportName: ids,\n\t\t\t\toriginModule: module,\n\t\t\t\tasiSafe: dep.shorthand ? true : dep.asiSafe,\n\t\t\t\tisCall: dep.call,\n\t\t\t\tcallContext: !dep.directImport,\n\t\t\t\tdefaultInterop: true,\n\t\t\t\timportVar: dep.getImportVar(moduleGraph),\n\t\t\t\tinitFragments,\n\t\t\t\truntime,\n\t\t\t\truntimeRequirements\n\t\t\t});\n\t\t}\n\t\treturn exportExpr;\n\t}\n};\n\nmodule.exports = HarmonyImportSpecifierDependency;\n"]},"metadata":{},"sourceType":"script"}