{"ast":null,"code":"import t from \"../lib/LdrsBaseElement.js\";\nvar e = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-size);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{animation:rotate var(--uib-speed) linear infinite;height:var(--uib-size);overflow:visible;transform-origin:center;width:var(--uib-size);will-change:transform}.car{stroke:var(--uib-color);stroke-dasharray:1,200;stroke-dashoffset:0;stroke-linecap:round;animation:stretch calc(var(--uib-speed)*.75) ease-in-out infinite;will-change:stroke-dasharray,stroke-dashoffset}.car,.track{fill:none;transition:stroke .5s ease}.track{stroke:var(--uib-color);opacity:var(--uib-bg-opacity)}@keyframes rotate{to{transform:rotate(1turn)}}@keyframes stretch{0%{stroke-dasharray:0,150;stroke-dashoffset:0}50%{stroke-dasharray:75,150;stroke-dashoffset:-25}to{stroke-dashoffset:-99}}\";\n\nclass s extends t {\n  _attributes = [\"size\", \"color\", \"speed\", \"stroke\", \"bg-opacity\"];\n  size;\n  color;\n  speed;\n  stroke;\n  \"bg-opacity\";\n\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"stroke\", \"speed\", \"bg-opacity\"];\n  }\n\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 40,\n      color: \"black\",\n      stroke: 5,\n      speed: 2,\n      \"bg-opacity\": 0\n    });\n    const t = parseInt(this.size),\n          s = parseInt(this.stroke),\n          i = t / 2,\n          r = Math.max(0, t / 2 - s / 2);\n    this.template.innerHTML = `\\n      <svg\\n        class=\"container\"\\n        viewBox=\"0 0 ${this.size} ${this.size}\"\\n        height=\"${this.size}\"\\n        width=\"${this.size}\"\\n      >\\n        <circle \\n          class=\"track\"\\n          cx=\"${i}\" \\n          cy=\"${i}\" \\n          r=\"${r}\" \\n          pathlength=\"100\" \\n          stroke-width=\"${this.stroke}px\" \\n          fill=\"none\" \\n        />\\n        <circle \\n          class=\"car\"\\n          cx=\"${i}\" \\n          cy=\"${i}\" \\n          r=\"${r}\" \\n          pathlength=\"100\" \\n          stroke-width=\"${this.stroke}px\" \\n          fill=\"none\" \\n        />\\n      </svg>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n          --uib-bg-opacity: ${this[\"bg-opacity\"]};\\n        }\\n        ${e}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n\n  attributeChangedCallback() {\n    const t = this.shadow.querySelector(\"style\"),\n          s = this.shadow.querySelector(\"svg\"),\n          i = this.shadow.querySelectorAll(\"circle\");\n    if (!t) return;\n    const r = parseInt(this.size),\n          o = parseInt(this.stroke),\n          n = String(r / 2),\n          a = String(Math.max(0, r / 2 - o / 2));\n    s.setAttribute(\"height\", this.stroke), s.setAttribute(\"width\", this.stroke), s.setAttribute(\"viewBox\", `0 0 ${r} ${r}`), i.forEach(t => {\n      t.setAttribute(\"cx\", n), t.setAttribute(\"cy\", n), t.setAttribute(\"r\", a), t.setAttribute(\"stroke-width\", this.stroke);\n    }), t.innerHTML = `\\n      :host{\\n        --uib-size: ${r}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n        --uib-bg-opacity: ${this[\"bg-opacity\"]};\\n      }\\n      ${e}\\n    `;\n  }\n\n}\n\nvar i = {\n  register: function () {\n    let t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"l-ring\";\n    customElements.get(t) || customElements.define(t, class extends s {});\n  },\n  element: s\n};\nexport { i as default };","map":{"version":3,"mappings":"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","names":["Ring","Base","_attributes","size","color","speed","stroke","observedAttributes","constructor","super","this","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","sizeInt","parseInt","strokeInt","centerPoint","radius","Math","max","template","innerHTML","styles","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","styleEl","querySelector","svgEl","circleEls","querySelectorAll","String","setAttribute","forEach","circleEl","ring","register","name","customElements","get","define","element"],"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/ldrs/temp-ts-out/elements/ring.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './ring.scss';\nclass Ring extends Base {\n    _attributes = ['size', 'color', 'speed', 'stroke', 'bg-opacity'];\n    size;\n    color;\n    speed;\n    stroke;\n    'bg-opacity';\n    static get observedAttributes() {\n        return ['size', 'color', 'stroke', 'speed', 'bg-opacity'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 40,\n            color: 'black',\n            stroke: 5,\n            speed: 2,\n            'bg-opacity': 0,\n        });\n        const sizeInt = parseInt(this.size);\n        const strokeInt = parseInt(this.stroke);\n        const centerPoint = sizeInt / 2;\n        const radius = Math.max(0, sizeInt / 2 - strokeInt / 2);\n        this.template.innerHTML = `\n      <svg\n        class=\"container\"\n        viewBox=\"0 0 ${this.size} ${this.size}\"\n        height=\"${this.size}\"\n        width=\"${this.size}\"\n      >\n        <circle \n          class=\"track\"\n          cx=\"${centerPoint}\" \n          cy=\"${centerPoint}\" \n          r=\"${radius}\" \n          pathlength=\"100\" \n          stroke-width=\"${this.stroke}px\" \n          fill=\"none\" \n        />\n        <circle \n          class=\"car\"\n          cx=\"${centerPoint}\" \n          cy=\"${centerPoint}\" \n          r=\"${radius}\" \n          pathlength=\"100\" \n          stroke-width=\"${this.stroke}px\" \n          fill=\"none\" \n        />\n      </svg>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-bg-opacity: ${this['bg-opacity']};\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        const svgEl = this.shadow.querySelector('svg');\n        const circleEls = this.shadow.querySelectorAll('circle');\n        if (!styleEl)\n            return;\n        const sizeInt = parseInt(this.size);\n        const strokeInt = parseInt(this.stroke);\n        const centerPoint = String(sizeInt / 2);\n        const radius = String(Math.max(0, sizeInt / 2 - strokeInt / 2));\n        svgEl.setAttribute('height', this.stroke);\n        svgEl.setAttribute('width', this.stroke);\n        svgEl.setAttribute('viewBox', `0 0 ${sizeInt} ${sizeInt}`);\n        circleEls.forEach((circleEl) => {\n            circleEl.setAttribute('cx', centerPoint);\n            circleEl.setAttribute('cy', centerPoint);\n            circleEl.setAttribute('r', radius);\n            circleEl.setAttribute('stroke-width', this.stroke);\n        });\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${sizeInt}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-bg-opacity: ${this['bg-opacity']};\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-ring') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Ring {\n            });\n        }\n    },\n    element: Ring,\n};\n"]},"metadata":{},"sourceType":"module"}