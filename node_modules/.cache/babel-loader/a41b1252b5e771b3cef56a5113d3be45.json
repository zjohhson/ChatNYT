{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/**\n * @template T\n * @template Z\n * @callback Iterator\n * @param {T} item item\n * @param {(err?: null|Error, result?: null|Z) => void} callback callback\n * @param {number} i index\n * @returns {void}\n */\n\n/**\n * @template T\n * @template Z\n * @param {T[]} array array\n * @param {Iterator<T, Z>} iterator iterator\n * @param {(err?: null|Error, result?: null|Z) => void} callback callback after all items are iterated\n * @returns {void}\n */\n\nmodule.exports = function forEachBail(array, iterator, callback) {\n  if (array.length === 0) return callback();\n  let i = 0;\n\n  const next = () => {\n    /** @type {boolean|undefined} */\n    let loop = undefined;\n    iterator(array[i++], (err, result) => {\n      if (err || result !== undefined || i >= array.length) {\n        return callback(err, result);\n      }\n\n      if (loop === false) while (next());\n      loop = true;\n    }, i);\n    if (!loop) loop = false;\n    return loop;\n  };\n\n  while (next());\n};","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/enhanced-resolve/lib/forEachBail.js"],"names":["module","exports","forEachBail","array","iterator","callback","length","i","next","loop","undefined","err","result"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,QAAtC,EAAgD;AAChE,MAAIF,KAAK,CAACG,MAAN,KAAiB,CAArB,EAAwB,OAAOD,QAAQ,EAAf;AAExB,MAAIE,CAAC,GAAG,CAAR;;AACA,QAAMC,IAAI,GAAG,MAAM;AAClB;AACA,QAAIC,IAAI,GAAGC,SAAX;AACAN,IAAAA,QAAQ,CACPD,KAAK,CAACI,CAAC,EAAF,CADE,EAEP,CAACI,GAAD,EAAMC,MAAN,KAAiB;AAChB,UAAID,GAAG,IAAIC,MAAM,KAAKF,SAAlB,IAA+BH,CAAC,IAAIJ,KAAK,CAACG,MAA9C,EAAsD;AACrD,eAAOD,QAAQ,CAACM,GAAD,EAAMC,MAAN,CAAf;AACA;;AACD,UAAIH,IAAI,KAAK,KAAb,EAAoB,OAAOD,IAAI,EAAX,CAAc;AAClCC,MAAAA,IAAI,GAAG,IAAP;AACA,KARM,EASPF,CATO,CAAR;AAWA,QAAI,CAACE,IAAL,EAAWA,IAAI,GAAG,KAAP;AACX,WAAOA,IAAP;AACA,GAhBD;;AAiBA,SAAOD,IAAI,EAAX,CAAc;AACd,CAtBD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/**\n * @template T\n * @template Z\n * @callback Iterator\n * @param {T} item item\n * @param {(err?: null|Error, result?: null|Z) => void} callback callback\n * @param {number} i index\n * @returns {void}\n */\n\n/**\n * @template T\n * @template Z\n * @param {T[]} array array\n * @param {Iterator<T, Z>} iterator iterator\n * @param {(err?: null|Error, result?: null|Z) => void} callback callback after all items are iterated\n * @returns {void}\n */\nmodule.exports = function forEachBail(array, iterator, callback) {\n\tif (array.length === 0) return callback();\n\n\tlet i = 0;\n\tconst next = () => {\n\t\t/** @type {boolean|undefined} */\n\t\tlet loop = undefined;\n\t\titerator(\n\t\t\tarray[i++],\n\t\t\t(err, result) => {\n\t\t\t\tif (err || result !== undefined || i >= array.length) {\n\t\t\t\t\treturn callback(err, result);\n\t\t\t\t}\n\t\t\t\tif (loop === false) while (next());\n\t\t\t\tloop = true;\n\t\t\t},\n\t\t\ti\n\t\t);\n\t\tif (!loop) loop = false;\n\t\treturn loop;\n\t};\n\twhile (next());\n};\n"]},"metadata":{},"sourceType":"script"}