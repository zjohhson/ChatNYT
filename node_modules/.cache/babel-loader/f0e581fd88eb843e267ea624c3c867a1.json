{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  OriginalSource,\n  RawSource\n} = require(\"webpack-sources\");\n\nconst ConcatenationScope = require(\"./ConcatenationScope\");\n\nconst {\n  UsageState\n} = require(\"./ExportsInfo\");\n\nconst InitFragment = require(\"./InitFragment\");\n\nconst Module = require(\"./Module\");\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_DYNAMIC\n} = require(\"./ModuleTypeConstants\");\n\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\n\nconst Template = require(\"./Template\");\n\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\n\nconst createHash = require(\"./util/createHash\");\n\nconst extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\n\nconst makeSerializable = require(\"./util/makeSerializable\");\n\nconst propertyAccess = require(\"./util/propertyAccess\");\n\nconst {\n  register\n} = require(\"./util/serialization\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n\n/** @typedef {import(\"./Chunk\")} Chunk */\n\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"./Compilation\")} Compilation */\n\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n/** @typedef {import(\"./util/Hash\")} Hash */\n\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceData\n * @property {boolean=} iife\n * @property {string=} init\n * @property {string} expression\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\n * @property {ReadonlySet<string>=} runtimeRequirements\n */\n\n\nconst TYPES = new Set([\"javascript\"]);\nconst CSS_TYPES = new Set([\"css-import\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nconst RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nconst RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([RuntimeGlobals.definePropertyGetters]);\nconst EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n/**\n * @param {string|string[]} variableName the variable name or path\n * @param {string} type the module system\n * @returns {SourceData} the generated source\n */\n\nconst getSourceForGlobalVariableExternal = (variableName, type) => {\n  if (!Array.isArray(variableName)) {\n    // make it an array as the look up works the same basically\n    variableName = [variableName];\n  } // needed for e.g. window[\"some\"][\"thing\"]\n\n\n  const objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\n  return {\n    iife: type === \"this\",\n    expression: `${type}${objectLookup}`\n  };\n};\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\n\n\nconst getSourceForCommonJsExternal = moduleAndSpecifiers => {\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: `require(${JSON.stringify(moduleAndSpecifiers)})`\n    };\n  }\n\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: `require(${JSON.stringify(moduleName)})${propertyAccess(moduleAndSpecifiers, 1)}`\n  };\n};\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {string} importMetaName import.meta name\n * @returns {SourceData} the generated source\n */\n\n\nconst getSourceForCommonJsExternalInNodeModule = (moduleAndSpecifiers, importMetaName) => {\n  const chunkInitFragments = [new InitFragment('import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"module\";\\n', InitFragment.STAGE_HARMONY_IMPORTS, 0, \"external module node-commonjs\")];\n\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      chunkInitFragments,\n      expression: `__WEBPACK_EXTERNAL_createRequire(${importMetaName}.url)(${JSON.stringify(moduleAndSpecifiers)})`\n    };\n  }\n\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    chunkInitFragments,\n    expression: `__WEBPACK_EXTERNAL_createRequire(${importMetaName}.url)(${JSON.stringify(moduleName)})${propertyAccess(moduleAndSpecifiers, 1)}`\n  };\n};\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\n\n\nconst getSourceForImportExternal = (moduleAndSpecifiers, runtimeTemplate) => {\n  const importName = runtimeTemplate.outputOptions.importFunctionName;\n\n  if (!runtimeTemplate.supportsDynamicImport() && importName === \"import\") {\n    throw new Error(\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\");\n  }\n\n  if (!Array.isArray(moduleAndSpecifiers)) {\n    return {\n      expression: `${importName}(${JSON.stringify(moduleAndSpecifiers)});`\n    };\n  }\n\n  if (moduleAndSpecifiers.length === 1) {\n    return {\n      expression: `${importName}(${JSON.stringify(moduleAndSpecifiers[0])});`\n    };\n  }\n\n  const moduleName = moduleAndSpecifiers[0];\n  return {\n    expression: `${importName}(${JSON.stringify(moduleName)}).then(${runtimeTemplate.returningFunction(`module${propertyAccess(moduleAndSpecifiers, 1)}`, \"module\")});`\n  };\n};\n\nclass ModuleExternalInitFragment extends InitFragment {\n  /**\n   * @param {string} request import source\n   * @param {string=} ident recomputed ident\n   * @param {string | HashConstructor=} hashFunction the hash function to use\n   */\n  constructor(request, ident) {\n    let hashFunction = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"md4\";\n\n    if (ident === undefined) {\n      ident = Template.toIdentifier(request);\n\n      if (ident !== request) {\n        ident += `_${createHash(hashFunction).update(request).digest(\"hex\").slice(0, 8)}`;\n      }\n    }\n\n    const identifier = `__WEBPACK_EXTERNAL_MODULE_${ident}__`;\n    super(`import * as ${identifier} from ${JSON.stringify(request)};\\n`, InitFragment.STAGE_HARMONY_IMPORTS, 0, `external module import ${ident}`);\n    this._ident = ident;\n    this._identifier = identifier;\n    this._request = request;\n  }\n\n  getNamespaceIdentifier() {\n    return this._identifier;\n  }\n\n}\n\nregister(ModuleExternalInitFragment, \"webpack/lib/ExternalModule\", \"ModuleExternalInitFragment\", {\n  serialize(obj, _ref) {\n    let {\n      write\n    } = _ref;\n    write(obj._request);\n    write(obj._ident);\n  },\n\n  deserialize(_ref2) {\n    let {\n      read\n    } = _ref2;\n    return new ModuleExternalInitFragment(read(), read());\n  }\n\n});\n\nconst generateModuleRemapping = (input, exportsInfo, runtime) => {\n  if (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n    const properties = [];\n\n    for (const exportInfo of exportsInfo.orderedExports) {\n      const used = exportInfo.getUsedName(exportInfo.name, runtime);\n      if (!used) continue;\n      const nestedInfo = exportInfo.getNestedExportsInfo();\n\n      if (nestedInfo) {\n        const nestedExpr = generateModuleRemapping(`${input}${propertyAccess([exportInfo.name])}`, nestedInfo);\n\n        if (nestedExpr) {\n          properties.push(`[${JSON.stringify(used)}]: y(${nestedExpr})`);\n          continue;\n        }\n      }\n\n      properties.push(`[${JSON.stringify(used)}]: () => ${input}${propertyAccess([exportInfo.name])}`);\n    }\n\n    return `x({ ${properties.join(\", \")} })`;\n  }\n};\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {ExportsInfo} exportsInfo exports info of this module\n * @param {RuntimeSpec} runtime the runtime\n * @param {string | HashConstructor=} hashFunction the hash function to use\n * @returns {SourceData} the generated source\n */\n\n\nconst getSourceForModuleExternal = (moduleAndSpecifiers, exportsInfo, runtime, hashFunction) => {\n  if (!Array.isArray(moduleAndSpecifiers)) moduleAndSpecifiers = [moduleAndSpecifiers];\n  const initFragment = new ModuleExternalInitFragment(moduleAndSpecifiers[0], undefined, hashFunction);\n  const baseAccess = `${initFragment.getNamespaceIdentifier()}${propertyAccess(moduleAndSpecifiers, 1)}`;\n  const moduleRemapping = generateModuleRemapping(baseAccess, exportsInfo, runtime);\n  let expression = moduleRemapping || baseAccess;\n  return {\n    expression,\n    init: `var x = y => { var x = {}; ${RuntimeGlobals.definePropertyGetters}(x, y); return x; }\\nvar y = x => () => x`,\n    runtimeRequirements: moduleRemapping ? RUNTIME_REQUIREMENTS_FOR_MODULE : undefined,\n    chunkInitFragments: [initFragment]\n  };\n};\n/**\n * @param {string|string[]} urlAndGlobal the script request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\n\n\nconst getSourceForScriptExternal = (urlAndGlobal, runtimeTemplate) => {\n  if (typeof urlAndGlobal === \"string\") {\n    urlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n  }\n\n  const url = urlAndGlobal[0];\n  const globalName = urlAndGlobal[1];\n  return {\n    init: \"var __webpack_error__ = new Error();\",\n    expression: `new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`if(typeof ${globalName} !== \"undefined\") return resolve();`, `${RuntimeGlobals.loadScript}(${JSON.stringify(url)}, ${runtimeTemplate.basicFunction(\"event\", [`if(typeof ${globalName} !== \"undefined\") return resolve();`, \"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\", \"var realSrc = event && event.target && event.target.src;\", \"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\", \"__webpack_error__.name = 'ScriptExternalLoadError';\", \"__webpack_error__.type = errorType;\", \"__webpack_error__.request = realSrc;\", \"reject(__webpack_error__);\"])}, ${JSON.stringify(globalName)});`])}).then(${runtimeTemplate.returningFunction(`${globalName}${propertyAccess(urlAndGlobal, 2)}`)})`,\n    runtimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n  };\n};\n/**\n * @param {string} variableName the variable name to check\n * @param {string} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {string} the generated source\n */\n\n\nconst checkExternalVariable = (variableName, request, runtimeTemplate) => {\n  return `if(typeof ${variableName} === 'undefined') { ${runtimeTemplate.throwMissingModuleErrorBlock({\n    request\n  })} }\\n`;\n};\n/**\n * @param {string|number} id the module id\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\n\n\nconst getSourceForAmdOrUmdExternal = (id, optional, request, runtimeTemplate) => {\n  const externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(`${id}`)}__`;\n  return {\n    init: optional ? checkExternalVariable(externalVariable, Array.isArray(request) ? request.join(\".\") : request, runtimeTemplate) : undefined,\n    expression: externalVariable\n  };\n};\n/**\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\n\n\nconst getSourceForDefaultCase = (optional, request, runtimeTemplate) => {\n  if (!Array.isArray(request)) {\n    // make it an array as the look up works the same basically\n    request = [request];\n  }\n\n  const variableName = request[0];\n  const objectLookup = propertyAccess(request, 1);\n  return {\n    init: optional ? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate) : undefined,\n    expression: `${variableName}${objectLookup}`\n  };\n};\n\nclass ExternalModule extends Module {\n  /**\n   * @param {string | string[] | Record<string, string | string[]>} request request\n   * @param {TODO} type type\n   * @param {string} userRequest user request\n   */\n  constructor(request, type, userRequest) {\n    super(JAVASCRIPT_MODULE_TYPE_DYNAMIC, null); // Info from Factory\n\n    /** @type {string | string[] | Record<string, string | string[]>} */\n\n    this.request = request;\n    /** @type {string} */\n\n    this.externalType = type;\n    /** @type {string} */\n\n    this.userRequest = userRequest;\n  }\n  /**\n   * @returns {Set<string>} types available (do not mutate)\n   */\n\n\n  getSourceTypes() {\n    return this.externalType === \"css-import\" ? CSS_TYPES : TYPES;\n  }\n  /**\n   * @param {LibIdentOptions} options options\n   * @returns {string | null} an identifier for library inclusion\n   */\n\n\n  libIdent(options) {\n    return this.userRequest;\n  }\n  /**\n   * @param {Chunk} chunk the chunk which condition should be checked\n   * @param {Compilation} compilation the compilation\n   * @returns {boolean} true, if the chunk is ok for the module\n   */\n\n\n  chunkCondition(chunk, _ref3) {\n    let {\n      chunkGraph\n    } = _ref3;\n    return this.externalType === \"css-import\" ? true : chunkGraph.getNumberOfEntryModules(chunk) > 0;\n  }\n  /**\n   * @returns {string} a unique identifier of the module\n   */\n\n\n  identifier() {\n    return `external ${this.externalType} ${JSON.stringify(this.request)}`;\n  }\n  /**\n   * @param {RequestShortener} requestShortener the request shortener\n   * @returns {string} a user readable identifier of the module\n   */\n\n\n  readableIdentifier(requestShortener) {\n    return \"external \" + JSON.stringify(this.request);\n  }\n  /**\n   * @param {NeedBuildContext} context context info\n   * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n   * @returns {void}\n   */\n\n\n  needBuild(context, callback) {\n    return callback(null, !this.buildMeta);\n  }\n  /**\n   * @param {WebpackOptions} options webpack options\n   * @param {Compilation} compilation the compilation\n   * @param {ResolverWithOptions} resolver the resolver\n   * @param {InputFileSystem} fs the file system\n   * @param {function(WebpackError=): void} callback callback function\n   * @returns {void}\n   */\n\n\n  build(options, compilation, resolver, fs, callback) {\n    this.buildMeta = {\n      async: false,\n      exportsType: undefined\n    };\n    this.buildInfo = {\n      strict: true,\n      topLevelDeclarations: new Set(),\n      module: compilation.outputOptions.module\n    };\n\n    const {\n      request,\n      externalType\n    } = this._getRequestAndExternalType();\n\n    this.buildMeta.exportsType = \"dynamic\";\n    let canMangle = false;\n    this.clearDependenciesAndBlocks();\n\n    switch (externalType) {\n      case \"this\":\n        this.buildInfo.strict = false;\n        break;\n\n      case \"system\":\n        if (!Array.isArray(request) || request.length === 1) {\n          this.buildMeta.exportsType = \"namespace\";\n          canMangle = true;\n        }\n\n        break;\n\n      case \"module\":\n        if (this.buildInfo.module) {\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = true;\n          }\n        } else {\n          this.buildMeta.async = true;\n\n          if (!Array.isArray(request) || request.length === 1) {\n            this.buildMeta.exportsType = \"namespace\";\n            canMangle = false;\n          }\n        }\n\n        break;\n\n      case \"script\":\n      case \"promise\":\n        this.buildMeta.async = true;\n        break;\n\n      case \"import\":\n        this.buildMeta.async = true;\n\n        if (!Array.isArray(request) || request.length === 1) {\n          this.buildMeta.exportsType = \"namespace\";\n          canMangle = false;\n        }\n\n        break;\n    }\n\n    this.addDependency(new StaticExportsDependency(true, canMangle));\n    callback();\n  }\n\n  restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n    this._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n  }\n  /**\n   * @param {ConcatenationBailoutReasonContext} context context\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n   */\n\n\n  getConcatenationBailoutReason(_ref4) {\n    let {\n      moduleGraph\n    } = _ref4;\n\n    switch (this.externalType) {\n      case \"amd\":\n      case \"amd-require\":\n      case \"umd\":\n      case \"umd2\":\n      case \"system\":\n      case \"jsonp\":\n        return `${this.externalType} externals can't be concatenated`;\n    }\n\n    return undefined;\n  }\n\n  _getRequestAndExternalType() {\n    let {\n      request,\n      externalType\n    } = this;\n    if (typeof request === \"object\" && !Array.isArray(request)) request = request[externalType];\n    return {\n      request,\n      externalType\n    };\n  }\n\n  _getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime) {\n    switch (externalType) {\n      case \"this\":\n      case \"window\":\n      case \"self\":\n        return getSourceForGlobalVariableExternal(request, this.externalType);\n\n      case \"global\":\n        return getSourceForGlobalVariableExternal(request, runtimeTemplate.globalObject);\n\n      case \"commonjs\":\n      case \"commonjs2\":\n      case \"commonjs-module\":\n      case \"commonjs-static\":\n        return getSourceForCommonJsExternal(request);\n\n      case \"node-commonjs\":\n        return this.buildInfo.module ? getSourceForCommonJsExternalInNodeModule(request, runtimeTemplate.outputOptions.importMetaName) : getSourceForCommonJsExternal(request);\n\n      case \"amd\":\n      case \"amd-require\":\n      case \"umd\":\n      case \"umd2\":\n      case \"system\":\n      case \"jsonp\":\n        {\n          const id = chunkGraph.getModuleId(this);\n          return getSourceForAmdOrUmdExternal(id !== null ? id : this.identifier(), this.isOptional(moduleGraph), request, runtimeTemplate);\n        }\n\n      case \"import\":\n        return getSourceForImportExternal(request, runtimeTemplate);\n\n      case \"script\":\n        return getSourceForScriptExternal(request, runtimeTemplate);\n\n      case \"module\":\n        {\n          if (!this.buildInfo.module) {\n            if (!runtimeTemplate.supportsDynamicImport()) {\n              throw new Error(\"The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script\" + (runtimeTemplate.supportsEcmaScriptModuleSyntax() ? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\" : \"\"));\n            }\n\n            return getSourceForImportExternal(request, runtimeTemplate);\n          }\n\n          if (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n            throw new Error(\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\");\n          }\n\n          return getSourceForModuleExternal(request, moduleGraph.getExportsInfo(this), runtime, runtimeTemplate.outputOptions.hashFunction);\n        }\n\n      case \"var\":\n      case \"promise\":\n      case \"const\":\n      case \"let\":\n      case \"assign\":\n      default:\n        return getSourceForDefaultCase(this.isOptional(moduleGraph), request, runtimeTemplate);\n    }\n  }\n  /**\n   * @param {CodeGenerationContext} context context for code generation\n   * @returns {CodeGenerationResult} result\n   */\n\n\n  codeGeneration(_ref5) {\n    let {\n      runtimeTemplate,\n      moduleGraph,\n      chunkGraph,\n      runtime,\n      concatenationScope\n    } = _ref5;\n\n    const {\n      request,\n      externalType\n    } = this._getRequestAndExternalType();\n\n    switch (externalType) {\n      case \"asset\":\n        {\n          const sources = new Map();\n          sources.set(\"javascript\", new RawSource(`module.exports = ${JSON.stringify(request)};`));\n          const data = new Map();\n          data.set(\"url\", request);\n          return {\n            sources,\n            runtimeRequirements: RUNTIME_REQUIREMENTS,\n            data\n          };\n        }\n\n      case \"css-import\":\n        {\n          const sources = new Map();\n          sources.set(\"css-import\", new RawSource(`@import url(${JSON.stringify(request)});`));\n          return {\n            sources,\n            runtimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n          };\n        }\n\n      default:\n        {\n          const sourceData = this._getSourceData(request, externalType, runtimeTemplate, moduleGraph, chunkGraph, runtime);\n\n          let sourceString = sourceData.expression;\n          if (sourceData.iife) sourceString = `(function() { return ${sourceString}; }())`;\n\n          if (concatenationScope) {\n            sourceString = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${sourceString};`;\n            concatenationScope.registerNamespaceExport(ConcatenationScope.NAMESPACE_OBJECT_EXPORT);\n          } else {\n            sourceString = `module.exports = ${sourceString};`;\n          }\n\n          if (sourceData.init) sourceString = `${sourceData.init}\\n${sourceString}`;\n          let data = undefined;\n\n          if (sourceData.chunkInitFragments) {\n            data = new Map();\n            data.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n          }\n\n          const sources = new Map();\n\n          if (this.useSourceMap || this.useSimpleSourceMap) {\n            sources.set(\"javascript\", new OriginalSource(sourceString, this.identifier()));\n          } else {\n            sources.set(\"javascript\", new RawSource(sourceString));\n          }\n\n          let runtimeRequirements = sourceData.runtimeRequirements;\n\n          if (!concatenationScope) {\n            if (!runtimeRequirements) {\n              runtimeRequirements = RUNTIME_REQUIREMENTS;\n            } else {\n              const set = new Set(runtimeRequirements);\n              set.add(RuntimeGlobals.module);\n              runtimeRequirements = set;\n            }\n          }\n\n          return {\n            sources,\n            runtimeRequirements: runtimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n            data\n          };\n        }\n    }\n  }\n  /**\n   * @param {string=} type the source type for which the size should be estimated\n   * @returns {number} the estimated size of the module (must be non-zero)\n   */\n\n\n  size(type) {\n    return 42;\n  }\n  /**\n   * @param {Hash} hash the hash used to track dependencies\n   * @param {UpdateHashContext} context context\n   * @returns {void}\n   */\n\n\n  updateHash(hash, context) {\n    const {\n      chunkGraph\n    } = context;\n    hash.update(`${this.externalType}${JSON.stringify(this.request)}${this.isOptional(chunkGraph.moduleGraph)}`);\n    super.updateHash(hash, context);\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.request);\n    write(this.externalType);\n    write(this.userRequest);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.request = read();\n    this.externalType = read();\n    this.userRequest = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\nmodule.exports = ExternalModule;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/ExternalModule.js"],"names":["OriginalSource","RawSource","require","ConcatenationScope","UsageState","InitFragment","Module","JAVASCRIPT_MODULE_TYPE_DYNAMIC","RuntimeGlobals","Template","StaticExportsDependency","createHash","extractUrlAndGlobal","makeSerializable","propertyAccess","register","TYPES","Set","CSS_TYPES","RUNTIME_REQUIREMENTS","module","RUNTIME_REQUIREMENTS_FOR_SCRIPT","loadScript","RUNTIME_REQUIREMENTS_FOR_MODULE","definePropertyGetters","EMPTY_RUNTIME_REQUIREMENTS","getSourceForGlobalVariableExternal","variableName","type","Array","isArray","objectLookup","map","r","JSON","stringify","join","iife","expression","getSourceForCommonJsExternal","moduleAndSpecifiers","moduleName","getSourceForCommonJsExternalInNodeModule","importMetaName","chunkInitFragments","STAGE_HARMONY_IMPORTS","getSourceForImportExternal","runtimeTemplate","importName","outputOptions","importFunctionName","supportsDynamicImport","Error","length","returningFunction","ModuleExternalInitFragment","constructor","request","ident","hashFunction","undefined","toIdentifier","update","digest","slice","identifier","_ident","_identifier","_request","getNamespaceIdentifier","serialize","obj","write","deserialize","read","generateModuleRemapping","input","exportsInfo","runtime","otherExportsInfo","getUsed","Unused","properties","exportInfo","orderedExports","used","getUsedName","name","nestedInfo","getNestedExportsInfo","nestedExpr","push","getSourceForModuleExternal","initFragment","baseAccess","moduleRemapping","init","runtimeRequirements","getSourceForScriptExternal","urlAndGlobal","url","globalName","basicFunction","checkExternalVariable","throwMissingModuleErrorBlock","getSourceForAmdOrUmdExternal","id","optional","externalVariable","getSourceForDefaultCase","ExternalModule","userRequest","externalType","getSourceTypes","libIdent","options","chunkCondition","chunk","chunkGraph","getNumberOfEntryModules","readableIdentifier","requestShortener","needBuild","context","callback","buildMeta","build","compilation","resolver","fs","async","exportsType","buildInfo","strict","topLevelDeclarations","_getRequestAndExternalType","canMangle","clearDependenciesAndBlocks","addDependency","restoreFromUnsafeCache","unsafeCacheData","normalModuleFactory","_restoreFromUnsafeCache","getConcatenationBailoutReason","moduleGraph","_getSourceData","globalObject","getModuleId","isOptional","supportsEcmaScriptModuleSyntax","getExportsInfo","codeGeneration","concatenationScope","sources","Map","set","data","sourceData","sourceString","supportsConst","NAMESPACE_OBJECT_EXPORT","registerNamespaceExport","useSourceMap","useSimpleSourceMap","add","size","updateHash","hash","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AAAEA,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,IAAgCC,OAAO,CAAC,iBAAD,CAA7C;;AACA,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,sBAAD,CAAlC;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAiBF,OAAO,CAAC,eAAD,CAA9B;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA5B;;AACA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAqCL,OAAO,CAAC,uBAAD,CAAlD;;AACA,MAAMM,cAAc,GAAGN,OAAO,CAAC,kBAAD,CAA9B;;AACA,MAAMO,QAAQ,GAAGP,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMQ,uBAAuB,GAAGR,OAAO,CAAC,wCAAD,CAAvC;;AACA,MAAMS,UAAU,GAAGT,OAAO,CAAC,mBAAD,CAA1B;;AACA,MAAMU,mBAAmB,GAAGV,OAAO,CAAC,4BAAD,CAAnC;;AACA,MAAMW,gBAAgB,GAAGX,OAAO,CAAC,yBAAD,CAAhC;;AACA,MAAMY,cAAc,GAAGZ,OAAO,CAAC,uBAAD,CAA9B;;AACA,MAAM;AAAEa,EAAAA;AAAF,IAAeb,OAAO,CAAC,sBAAD,CAA5B;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMc,KAAK,GAAG,IAAIC,GAAJ,CAAQ,CAAC,YAAD,CAAR,CAAd;AACA,MAAMC,SAAS,GAAG,IAAID,GAAJ,CAAQ,CAAC,YAAD,CAAR,CAAlB;AACA,MAAME,oBAAoB,GAAG,IAAIF,GAAJ,CAAQ,CAACT,cAAc,CAACY,MAAhB,CAAR,CAA7B;AACA,MAAMC,+BAA+B,GAAG,IAAIJ,GAAJ,CAAQ,CAACT,cAAc,CAACc,UAAhB,CAAR,CAAxC;AACA,MAAMC,+BAA+B,GAAG,IAAIN,GAAJ,CAAQ,CAC/CT,cAAc,CAACgB,qBADgC,CAAR,CAAxC;AAGA,MAAMC,0BAA0B,GAAG,IAAIR,GAAJ,CAAQ,EAAR,CAAnC;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMS,kCAAkC,GAAG,CAACC,YAAD,EAAeC,IAAf,KAAwB;AAClE,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,YAAd,CAAL,EAAkC;AACjC;AACAA,IAAAA,YAAY,GAAG,CAACA,YAAD,CAAf;AACA,GAJiE,CAMlE;;;AACA,QAAMI,YAAY,GAAGJ,YAAY,CAACK,GAAb,CAAiBC,CAAC,IAAK,IAAGC,IAAI,CAACC,SAAL,CAAeF,CAAf,CAAkB,GAA5C,EAAgDG,IAAhD,CAAqD,EAArD,CAArB;AACA,SAAO;AACNC,IAAAA,IAAI,EAAET,IAAI,KAAK,MADT;AAENU,IAAAA,UAAU,EAAG,GAAEV,IAAK,GAAEG,YAAa;AAF7B,GAAP;AAIA,CAZD;AAcA;AACA;AACA;AACA;;;AACA,MAAMQ,4BAA4B,GAAGC,mBAAmB,IAAI;AAC3D,MAAI,CAACX,KAAK,CAACC,OAAN,CAAcU,mBAAd,CAAL,EAAyC;AACxC,WAAO;AACNF,MAAAA,UAAU,EAAG,WAAUJ,IAAI,CAACC,SAAL,CAAeK,mBAAf,CAAoC;AADrD,KAAP;AAGA;;AACD,QAAMC,UAAU,GAAGD,mBAAmB,CAAC,CAAD,CAAtC;AACA,SAAO;AACNF,IAAAA,UAAU,EAAG,WAAUJ,IAAI,CAACC,SAAL,CAAeM,UAAf,CAA2B,IAAG3B,cAAc,CAClE0B,mBADkE,EAElE,CAFkE,CAGjE;AAJI,GAAP;AAMA,CAbD;AAeA;AACA;AACA;AACA;AACA;;;AACA,MAAME,wCAAwC,GAAG,CAChDF,mBADgD,EAEhDG,cAFgD,KAG5C;AACJ,QAAMC,kBAAkB,GAAG,CAC1B,IAAIvC,YAAJ,CACC,+EADD,EAECA,YAAY,CAACwC,qBAFd,EAGC,CAHD,EAIC,+BAJD,CAD0B,CAA3B;;AAQA,MAAI,CAAChB,KAAK,CAACC,OAAN,CAAcU,mBAAd,CAAL,EAAyC;AACxC,WAAO;AACNI,MAAAA,kBADM;AAENN,MAAAA,UAAU,EAAG,oCAAmCK,cAAe,SAAQT,IAAI,CAACC,SAAL,CACtEK,mBADsE,CAErE;AAJI,KAAP;AAMA;;AACD,QAAMC,UAAU,GAAGD,mBAAmB,CAAC,CAAD,CAAtC;AACA,SAAO;AACNI,IAAAA,kBADM;AAENN,IAAAA,UAAU,EAAG,oCAAmCK,cAAe,SAAQT,IAAI,CAACC,SAAL,CACtEM,UADsE,CAErE,IAAG3B,cAAc,CAAC0B,mBAAD,EAAsB,CAAtB,CAAyB;AAJtC,GAAP;AAMA,CA3BD;AA6BA;AACA;AACA;AACA;AACA;;;AACA,MAAMM,0BAA0B,GAAG,CAACN,mBAAD,EAAsBO,eAAtB,KAA0C;AAC5E,QAAMC,UAAU,GAAGD,eAAe,CAACE,aAAhB,CAA8BC,kBAAjD;;AACA,MAAI,CAACH,eAAe,CAACI,qBAAhB,EAAD,IAA4CH,UAAU,KAAK,QAA/D,EAAyE;AACxE,UAAM,IAAII,KAAJ,CACL,sGADK,CAAN;AAGA;;AACD,MAAI,CAACvB,KAAK,CAACC,OAAN,CAAcU,mBAAd,CAAL,EAAyC;AACxC,WAAO;AACNF,MAAAA,UAAU,EAAG,GAAEU,UAAW,IAAGd,IAAI,CAACC,SAAL,CAAeK,mBAAf,CAAoC;AAD3D,KAAP;AAGA;;AACD,MAAIA,mBAAmB,CAACa,MAApB,KAA+B,CAAnC,EAAsC;AACrC,WAAO;AACNf,MAAAA,UAAU,EAAG,GAAEU,UAAW,IAAGd,IAAI,CAACC,SAAL,CAAeK,mBAAmB,CAAC,CAAD,CAAlC,CAAuC;AAD9D,KAAP;AAGA;;AACD,QAAMC,UAAU,GAAGD,mBAAmB,CAAC,CAAD,CAAtC;AACA,SAAO;AACNF,IAAAA,UAAU,EAAG,GAAEU,UAAW,IAAGd,IAAI,CAACC,SAAL,CAC5BM,UAD4B,CAE3B,UAASM,eAAe,CAACO,iBAAhB,CACT,SAAQxC,cAAc,CAAC0B,mBAAD,EAAsB,CAAtB,CAAyB,EADtC,EAEV,QAFU,CAGT;AANI,GAAP;AAQA,CA1BD;;AA4BA,MAAMe,0BAAN,SAAyClD,YAAzC,CAAsD;AACrD;AACD;AACA;AACA;AACA;AACCmD,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAuC;AAAA,QAAtBC,YAAsB,uEAAP,KAAO;;AACjD,QAAID,KAAK,KAAKE,SAAd,EAAyB;AACxBF,MAAAA,KAAK,GAAGjD,QAAQ,CAACoD,YAAT,CAAsBJ,OAAtB,CAAR;;AACA,UAAIC,KAAK,KAAKD,OAAd,EAAuB;AACtBC,QAAAA,KAAK,IAAK,IAAG/C,UAAU,CAACgD,YAAD,CAAV,CACXG,MADW,CACJL,OADI,EAEXM,MAFW,CAEJ,KAFI,EAGXC,KAHW,CAGL,CAHK,EAGF,CAHE,CAGC,EAHd;AAIA;AACD;;AACD,UAAMC,UAAU,GAAI,6BAA4BP,KAAM,IAAtD;AACA,UACE,eAAcO,UAAW,SAAQ/B,IAAI,CAACC,SAAL,CAAesB,OAAf,CAAwB,KAD3D,EAECpD,YAAY,CAACwC,qBAFd,EAGC,CAHD,EAIE,0BAAyBa,KAAM,EAJjC;AAMA,SAAKQ,MAAL,GAAcR,KAAd;AACA,SAAKS,WAAL,GAAmBF,UAAnB;AACA,SAAKG,QAAL,GAAgBX,OAAhB;AACA;;AAEDY,EAAAA,sBAAsB,GAAG;AACxB,WAAO,KAAKF,WAAZ;AACA;;AA9BoD;;AAiCtDpD,QAAQ,CACPwC,0BADO,EAEP,4BAFO,EAGP,4BAHO,EAIP;AACCe,EAAAA,SAAS,CAACC,GAAD,QAAiB;AAAA,QAAX;AAAEC,MAAAA;AAAF,KAAW;AACzBA,IAAAA,KAAK,CAACD,GAAG,CAACH,QAAL,CAAL;AACAI,IAAAA,KAAK,CAACD,GAAG,CAACL,MAAL,CAAL;AACA,GAJF;;AAKCO,EAAAA,WAAW,QAAW;AAAA,QAAV;AAAEC,MAAAA;AAAF,KAAU;AACrB,WAAO,IAAInB,0BAAJ,CAA+BmB,IAAI,EAAnC,EAAuCA,IAAI,EAA3C,CAAP;AACA;;AAPF,CAJO,CAAR;;AAeA,MAAMC,uBAAuB,GAAG,CAACC,KAAD,EAAQC,WAAR,EAAqBC,OAArB,KAAiC;AAChE,MAAID,WAAW,CAACE,gBAAZ,CAA6BC,OAA7B,CAAqCF,OAArC,MAAkD1E,UAAU,CAAC6E,MAAjE,EAAyE;AACxE,UAAMC,UAAU,GAAG,EAAnB;;AACA,SAAK,MAAMC,UAAX,IAAyBN,WAAW,CAACO,cAArC,EAAqD;AACpD,YAAMC,IAAI,GAAGF,UAAU,CAACG,WAAX,CAAuBH,UAAU,CAACI,IAAlC,EAAwCT,OAAxC,CAAb;AACA,UAAI,CAACO,IAAL,EAAW;AACX,YAAMG,UAAU,GAAGL,UAAU,CAACM,oBAAX,EAAnB;;AACA,UAAID,UAAJ,EAAgB;AACf,cAAME,UAAU,GAAGf,uBAAuB,CACxC,GAAEC,KAAM,GAAE9D,cAAc,CAAC,CAACqE,UAAU,CAACI,IAAZ,CAAD,CAAoB,EADJ,EAEzCC,UAFyC,CAA1C;;AAIA,YAAIE,UAAJ,EAAgB;AACfR,UAAAA,UAAU,CAACS,IAAX,CAAiB,IAAGzD,IAAI,CAACC,SAAL,CAAekD,IAAf,CAAqB,QAAOK,UAAW,GAA3D;AACA;AACA;AACD;;AACDR,MAAAA,UAAU,CAACS,IAAX,CACE,IAAGzD,IAAI,CAACC,SAAL,CAAekD,IAAf,CAAqB,YAAWT,KAAM,GAAE9D,cAAc,CAAC,CAC1DqE,UAAU,CAACI,IAD+C,CAAD,CAEvD,EAHJ;AAKA;;AACD,WAAQ,OAAML,UAAU,CAAC9C,IAAX,CAAgB,IAAhB,CAAsB,KAApC;AACA;AACD,CAzBD;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMwD,0BAA0B,GAAG,CAClCpD,mBADkC,EAElCqC,WAFkC,EAGlCC,OAHkC,EAIlCnB,YAJkC,KAK9B;AACJ,MAAI,CAAC9B,KAAK,CAACC,OAAN,CAAcU,mBAAd,CAAL,EACCA,mBAAmB,GAAG,CAACA,mBAAD,CAAtB;AACD,QAAMqD,YAAY,GAAG,IAAItC,0BAAJ,CACpBf,mBAAmB,CAAC,CAAD,CADC,EAEpBoB,SAFoB,EAGpBD,YAHoB,CAArB;AAKA,QAAMmC,UAAU,GAAI,GAAED,YAAY,CAACxB,sBAAb,EAAsC,GAAEvD,cAAc,CAC3E0B,mBAD2E,EAE3E,CAF2E,CAG1E,EAHF;AAIA,QAAMuD,eAAe,GAAGpB,uBAAuB,CAC9CmB,UAD8C,EAE9CjB,WAF8C,EAG9CC,OAH8C,CAA/C;AAKA,MAAIxC,UAAU,GAAGyD,eAAe,IAAID,UAApC;AACA,SAAO;AACNxD,IAAAA,UADM;AAEN0D,IAAAA,IAAI,EAAG,8BAA6BxF,cAAc,CAACgB,qBAAsB,2CAFnE;AAGNyE,IAAAA,mBAAmB,EAAEF,eAAe,GACjCxE,+BADiC,GAEjCqC,SALG;AAMNhB,IAAAA,kBAAkB,EAAE,CAACiD,YAAD;AANd,GAAP;AAQA,CA/BD;AAiCA;AACA;AACA;AACA;AACA;;;AACA,MAAMK,0BAA0B,GAAG,CAACC,YAAD,EAAepD,eAAf,KAAmC;AACrE,MAAI,OAAOoD,YAAP,KAAwB,QAA5B,EAAsC;AACrCA,IAAAA,YAAY,GAAGvF,mBAAmB,CAACuF,YAAD,CAAlC;AACA;;AACD,QAAMC,GAAG,GAAGD,YAAY,CAAC,CAAD,CAAxB;AACA,QAAME,UAAU,GAAGF,YAAY,CAAC,CAAD,CAA/B;AACA,SAAO;AACNH,IAAAA,IAAI,EAAE,sCADA;AAEN1D,IAAAA,UAAU,EAAG,eAAcS,eAAe,CAACuD,aAAhB,CAC1B,iBAD0B,EAE1B,CACE,aAAYD,UAAW,qCADzB,EAEE,GAAE7F,cAAc,CAACc,UAAW,IAAGY,IAAI,CAACC,SAAL,CAC/BiE,GAD+B,CAE9B,KAAIrD,eAAe,CAACuD,aAAhB,CAA8B,OAA9B,EAAuC,CAC3C,aAAYD,UAAW,qCADoB,EAE5C,4EAF4C,EAG5C,0DAH4C,EAI5C,8FAJ4C,EAK5C,qDAL4C,EAM5C,qCAN4C,EAO5C,sCAP4C,EAQ5C,4BAR4C,CAAvC,CASH,KAAInE,IAAI,CAACC,SAAL,CAAekE,UAAf,CAA2B,IAbnC,CAF0B,CAiBzB,UAAStD,eAAe,CAACO,iBAAhB,CACT,GAAE+C,UAAW,GAAEvF,cAAc,CAACqF,YAAD,EAAe,CAAf,CAAkB,EADtC,CAET,GArBI;AAsBNF,IAAAA,mBAAmB,EAAE5E;AAtBf,GAAP;AAwBA,CA9BD;AAgCA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMkF,qBAAqB,GAAG,CAAC5E,YAAD,EAAe8B,OAAf,EAAwBV,eAAxB,KAA4C;AACzE,SAAQ,aAAYpB,YAAa,uBAAsBoB,eAAe,CAACyD,4BAAhB,CACtD;AAAE/C,IAAAA;AAAF,GADsD,CAErD,MAFF;AAGA,CAJD;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMgD,4BAA4B,GAAG,CACpCC,EADoC,EAEpCC,QAFoC,EAGpClD,OAHoC,EAIpCV,eAJoC,KAKhC;AACJ,QAAM6D,gBAAgB,GAAI,6BAA4BnG,QAAQ,CAACoD,YAAT,CACpD,GAAE6C,EAAG,EAD+C,CAEpD,IAFF;AAGA,SAAO;AACNV,IAAAA,IAAI,EAAEW,QAAQ,GACXJ,qBAAqB,CACrBK,gBADqB,EAErB/E,KAAK,CAACC,OAAN,CAAc2B,OAAd,IAAyBA,OAAO,CAACrB,IAAR,CAAa,GAAb,CAAzB,GAA6CqB,OAFxB,EAGrBV,eAHqB,CADV,GAMXa,SAPG;AAQNtB,IAAAA,UAAU,EAAEsE;AARN,GAAP;AAUA,CAnBD;AAqBA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,uBAAuB,GAAG,CAACF,QAAD,EAAWlD,OAAX,EAAoBV,eAApB,KAAwC;AACvE,MAAI,CAAClB,KAAK,CAACC,OAAN,CAAc2B,OAAd,CAAL,EAA6B;AAC5B;AACAA,IAAAA,OAAO,GAAG,CAACA,OAAD,CAAV;AACA;;AAED,QAAM9B,YAAY,GAAG8B,OAAO,CAAC,CAAD,CAA5B;AACA,QAAM1B,YAAY,GAAGjB,cAAc,CAAC2C,OAAD,EAAU,CAAV,CAAnC;AACA,SAAO;AACNuC,IAAAA,IAAI,EAAEW,QAAQ,GACXJ,qBAAqB,CAAC5E,YAAD,EAAe8B,OAAO,CAACrB,IAAR,CAAa,GAAb,CAAf,EAAkCW,eAAlC,CADV,GAEXa,SAHG;AAINtB,IAAAA,UAAU,EAAG,GAAEX,YAAa,GAAEI,YAAa;AAJrC,GAAP;AAMA,CAdD;;AAgBA,MAAM+E,cAAN,SAA6BxG,MAA7B,CAAoC;AACnC;AACD;AACA;AACA;AACA;AACCkD,EAAAA,WAAW,CAACC,OAAD,EAAU7B,IAAV,EAAgBmF,WAAhB,EAA6B;AACvC,UAAMxG,8BAAN,EAAsC,IAAtC,EADuC,CAGvC;;AACA;;AACA,SAAKkD,OAAL,GAAeA,OAAf;AACA;;AACA,SAAKuD,YAAL,GAAoBpF,IAApB;AACA;;AACA,SAAKmF,WAAL,GAAmBA,WAAnB;AACA;AAED;AACD;AACA;;;AACCE,EAAAA,cAAc,GAAG;AAChB,WAAO,KAAKD,YAAL,KAAsB,YAAtB,GAAqC9F,SAArC,GAAiDF,KAAxD;AACA;AAED;AACD;AACA;AACA;;;AACCkG,EAAAA,QAAQ,CAACC,OAAD,EAAU;AACjB,WAAO,KAAKJ,WAAZ;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCK,EAAAA,cAAc,CAACC,KAAD,SAAwB;AAAA,QAAhB;AAAEC,MAAAA;AAAF,KAAgB;AACrC,WAAO,KAAKN,YAAL,KAAsB,YAAtB,GACJ,IADI,GAEJM,UAAU,CAACC,uBAAX,CAAmCF,KAAnC,IAA4C,CAF/C;AAGA;AAED;AACD;AACA;;;AACCpD,EAAAA,UAAU,GAAG;AACZ,WAAQ,YAAW,KAAK+C,YAAa,IAAG9E,IAAI,CAACC,SAAL,CAAe,KAAKsB,OAApB,CAA6B,EAArE;AACA;AAED;AACD;AACA;AACA;;;AACC+D,EAAAA,kBAAkB,CAACC,gBAAD,EAAmB;AACpC,WAAO,cAAcvF,IAAI,CAACC,SAAL,CAAe,KAAKsB,OAApB,CAArB;AACA;AAED;AACD;AACA;AACA;AACA;;;AACCiE,EAAAA,SAAS,CAACC,OAAD,EAAUC,QAAV,EAAoB;AAC5B,WAAOA,QAAQ,CAAC,IAAD,EAAO,CAAC,KAAKC,SAAb,CAAf;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,KAAK,CAACX,OAAD,EAAUY,WAAV,EAAuBC,QAAvB,EAAiCC,EAAjC,EAAqCL,QAArC,EAA+C;AACnD,SAAKC,SAAL,GAAiB;AAChBK,MAAAA,KAAK,EAAE,KADS;AAEhBC,MAAAA,WAAW,EAAEvE;AAFG,KAAjB;AAIA,SAAKwE,SAAL,GAAiB;AAChBC,MAAAA,MAAM,EAAE,IADQ;AAEhBC,MAAAA,oBAAoB,EAAE,IAAIrH,GAAJ,EAFN;AAGhBG,MAAAA,MAAM,EAAE2G,WAAW,CAAC9E,aAAZ,CAA0B7B;AAHlB,KAAjB;;AAKA,UAAM;AAAEqC,MAAAA,OAAF;AAAWuD,MAAAA;AAAX,QAA4B,KAAKuB,0BAAL,EAAlC;;AACA,SAAKV,SAAL,CAAeM,WAAf,GAA6B,SAA7B;AACA,QAAIK,SAAS,GAAG,KAAhB;AACA,SAAKC,0BAAL;;AACA,YAAQzB,YAAR;AACC,WAAK,MAAL;AACC,aAAKoB,SAAL,CAAeC,MAAf,GAAwB,KAAxB;AACA;;AACD,WAAK,QAAL;AACC,YAAI,CAACxG,KAAK,CAACC,OAAN,CAAc2B,OAAd,CAAD,IAA2BA,OAAO,CAACJ,MAAR,KAAmB,CAAlD,EAAqD;AACpD,eAAKwE,SAAL,CAAeM,WAAf,GAA6B,WAA7B;AACAK,UAAAA,SAAS,GAAG,IAAZ;AACA;;AACD;;AACD,WAAK,QAAL;AACC,YAAI,KAAKJ,SAAL,CAAehH,MAAnB,EAA2B;AAC1B,cAAI,CAACS,KAAK,CAACC,OAAN,CAAc2B,OAAd,CAAD,IAA2BA,OAAO,CAACJ,MAAR,KAAmB,CAAlD,EAAqD;AACpD,iBAAKwE,SAAL,CAAeM,WAAf,GAA6B,WAA7B;AACAK,YAAAA,SAAS,GAAG,IAAZ;AACA;AACD,SALD,MAKO;AACN,eAAKX,SAAL,CAAeK,KAAf,GAAuB,IAAvB;;AACA,cAAI,CAACrG,KAAK,CAACC,OAAN,CAAc2B,OAAd,CAAD,IAA2BA,OAAO,CAACJ,MAAR,KAAmB,CAAlD,EAAqD;AACpD,iBAAKwE,SAAL,CAAeM,WAAf,GAA6B,WAA7B;AACAK,YAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AACD;;AACD,WAAK,QAAL;AACA,WAAK,SAAL;AACC,aAAKX,SAAL,CAAeK,KAAf,GAAuB,IAAvB;AACA;;AACD,WAAK,QAAL;AACC,aAAKL,SAAL,CAAeK,KAAf,GAAuB,IAAvB;;AACA,YAAI,CAACrG,KAAK,CAACC,OAAN,CAAc2B,OAAd,CAAD,IAA2BA,OAAO,CAACJ,MAAR,KAAmB,CAAlD,EAAqD;AACpD,eAAKwE,SAAL,CAAeM,WAAf,GAA6B,WAA7B;AACAK,UAAAA,SAAS,GAAG,KAAZ;AACA;;AACD;AAlCF;;AAoCA,SAAKE,aAAL,CAAmB,IAAIhI,uBAAJ,CAA4B,IAA5B,EAAkC8H,SAAlC,CAAnB;AACAZ,IAAAA,QAAQ;AACR;;AAEDe,EAAAA,sBAAsB,CAACC,eAAD,EAAkBC,mBAAlB,EAAuC;AAC5D,SAAKC,uBAAL,CAA6BF,eAA7B,EAA8CC,mBAA9C;AACA;AAED;AACD;AACA;AACA;;;AACCE,EAAAA,6BAA6B,QAAkB;AAAA,QAAjB;AAAEC,MAAAA;AAAF,KAAiB;;AAC9C,YAAQ,KAAKhC,YAAb;AACC,WAAK,KAAL;AACA,WAAK,aAAL;AACA,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,QAAL;AACA,WAAK,OAAL;AACC,eAAQ,GAAE,KAAKA,YAAa,kCAA5B;AAPF;;AASA,WAAOpD,SAAP;AACA;;AAED2E,EAAAA,0BAA0B,GAAG;AAC5B,QAAI;AAAE9E,MAAAA,OAAF;AAAWuD,MAAAA;AAAX,QAA4B,IAAhC;AACA,QAAI,OAAOvD,OAAP,KAAmB,QAAnB,IAA+B,CAAC5B,KAAK,CAACC,OAAN,CAAc2B,OAAd,CAApC,EACCA,OAAO,GAAGA,OAAO,CAACuD,YAAD,CAAjB;AACD,WAAO;AAAEvD,MAAAA,OAAF;AAAWuD,MAAAA;AAAX,KAAP;AACA;;AAEDiC,EAAAA,cAAc,CACbxF,OADa,EAEbuD,YAFa,EAGbjE,eAHa,EAIbiG,WAJa,EAKb1B,UALa,EAMbxC,OANa,EAOZ;AACD,YAAQkC,YAAR;AACC,WAAK,MAAL;AACA,WAAK,QAAL;AACA,WAAK,MAAL;AACC,eAAOtF,kCAAkC,CAAC+B,OAAD,EAAU,KAAKuD,YAAf,CAAzC;;AACD,WAAK,QAAL;AACC,eAAOtF,kCAAkC,CACxC+B,OADwC,EAExCV,eAAe,CAACmG,YAFwB,CAAzC;;AAID,WAAK,UAAL;AACA,WAAK,WAAL;AACA,WAAK,iBAAL;AACA,WAAK,iBAAL;AACC,eAAO3G,4BAA4B,CAACkB,OAAD,CAAnC;;AACD,WAAK,eAAL;AACC,eAAO,KAAK2E,SAAL,CAAehH,MAAf,GACJsB,wCAAwC,CACxCe,OADwC,EAExCV,eAAe,CAACE,aAAhB,CAA8BN,cAFU,CADpC,GAKJJ,4BAA4B,CAACkB,OAAD,CAL/B;;AAMD,WAAK,KAAL;AACA,WAAK,aAAL;AACA,WAAK,KAAL;AACA,WAAK,MAAL;AACA,WAAK,QAAL;AACA,WAAK,OAAL;AAAc;AACb,gBAAMiD,EAAE,GAAGY,UAAU,CAAC6B,WAAX,CAAuB,IAAvB,CAAX;AACA,iBAAO1C,4BAA4B,CAClCC,EAAE,KAAK,IAAP,GAAcA,EAAd,GAAmB,KAAKzC,UAAL,EADe,EAElC,KAAKmF,UAAL,CAAgBJ,WAAhB,CAFkC,EAGlCvF,OAHkC,EAIlCV,eAJkC,CAAnC;AAMA;;AACD,WAAK,QAAL;AACC,eAAOD,0BAA0B,CAACW,OAAD,EAAUV,eAAV,CAAjC;;AACD,WAAK,QAAL;AACC,eAAOmD,0BAA0B,CAACzC,OAAD,EAAUV,eAAV,CAAjC;;AACD,WAAK,QAAL;AAAe;AACd,cAAI,CAAC,KAAKqF,SAAL,CAAehH,MAApB,EAA4B;AAC3B,gBAAI,CAAC2B,eAAe,CAACI,qBAAhB,EAAL,EAA8C;AAC7C,oBAAM,IAAIC,KAAJ,CACL,uIACEL,eAAe,CAACsG,8BAAhB,KACE,sEADF,GAEE,EAHJ,CADK,CAAN;AAMA;;AACD,mBAAOvG,0BAA0B,CAACW,OAAD,EAAUV,eAAV,CAAjC;AACA;;AACD,cAAI,CAACA,eAAe,CAACsG,8BAAhB,EAAL,EAAuD;AACtD,kBAAM,IAAIjG,KAAJ,CACL,mHADK,CAAN;AAGA;;AACD,iBAAOwC,0BAA0B,CAChCnC,OADgC,EAEhCuF,WAAW,CAACM,cAAZ,CAA2B,IAA3B,CAFgC,EAGhCxE,OAHgC,EAIhC/B,eAAe,CAACE,aAAhB,CAA8BU,YAJE,CAAjC;AAMA;;AACD,WAAK,KAAL;AACA,WAAK,SAAL;AACA,WAAK,OAAL;AACA,WAAK,KAAL;AACA,WAAK,QAAL;AACA;AACC,eAAOkD,uBAAuB,CAC7B,KAAKuC,UAAL,CAAgBJ,WAAhB,CAD6B,EAE7BvF,OAF6B,EAG7BV,eAH6B,CAA9B;AAtEF;AA4EA;AAED;AACD;AACA;AACA;;;AACCwG,EAAAA,cAAc,QAMX;AAAA,QANY;AACdxG,MAAAA,eADc;AAEdiG,MAAAA,WAFc;AAGd1B,MAAAA,UAHc;AAIdxC,MAAAA,OAJc;AAKd0E,MAAAA;AALc,KAMZ;;AACF,UAAM;AAAE/F,MAAAA,OAAF;AAAWuD,MAAAA;AAAX,QAA4B,KAAKuB,0BAAL,EAAlC;;AACA,YAAQvB,YAAR;AACC,WAAK,OAAL;AAAc;AACb,gBAAMyC,OAAO,GAAG,IAAIC,GAAJ,EAAhB;AACAD,UAAAA,OAAO,CAACE,GAAR,CACC,YADD,EAEC,IAAI1J,SAAJ,CAAe,oBAAmBiC,IAAI,CAACC,SAAL,CAAesB,OAAf,CAAwB,GAA1D,CAFD;AAIA,gBAAMmG,IAAI,GAAG,IAAIF,GAAJ,EAAb;AACAE,UAAAA,IAAI,CAACD,GAAL,CAAS,KAAT,EAAgBlG,OAAhB;AACA,iBAAO;AAAEgG,YAAAA,OAAF;AAAWxD,YAAAA,mBAAmB,EAAE9E,oBAAhC;AAAsDyI,YAAAA;AAAtD,WAAP;AACA;;AACD,WAAK,YAAL;AAAmB;AAClB,gBAAMH,OAAO,GAAG,IAAIC,GAAJ,EAAhB;AACAD,UAAAA,OAAO,CAACE,GAAR,CACC,YADD,EAEC,IAAI1J,SAAJ,CAAe,eAAciC,IAAI,CAACC,SAAL,CAAesB,OAAf,CAAwB,IAArD,CAFD;AAIA,iBAAO;AACNgG,YAAAA,OADM;AAENxD,YAAAA,mBAAmB,EAAExE;AAFf,WAAP;AAIA;;AACD;AAAS;AACR,gBAAMoI,UAAU,GAAG,KAAKZ,cAAL,CAClBxF,OADkB,EAElBuD,YAFkB,EAGlBjE,eAHkB,EAIlBiG,WAJkB,EAKlB1B,UALkB,EAMlBxC,OANkB,CAAnB;;AASA,cAAIgF,YAAY,GAAGD,UAAU,CAACvH,UAA9B;AACA,cAAIuH,UAAU,CAACxH,IAAf,EACCyH,YAAY,GAAI,wBAAuBA,YAAa,QAApD;;AACD,cAAIN,kBAAJ,EAAwB;AACvBM,YAAAA,YAAY,GAAI,GACf/G,eAAe,CAACgH,aAAhB,KAAkC,OAAlC,GAA4C,KAC5C,IAAG5J,kBAAkB,CAAC6J,uBAAwB,MAAKF,YAAa,GAFjE;AAGAN,YAAAA,kBAAkB,CAACS,uBAAnB,CACC9J,kBAAkB,CAAC6J,uBADpB;AAGA,WAPD,MAOO;AACNF,YAAAA,YAAY,GAAI,oBAAmBA,YAAa,GAAhD;AACA;;AACD,cAAID,UAAU,CAAC7D,IAAf,EACC8D,YAAY,GAAI,GAAED,UAAU,CAAC7D,IAAK,KAAI8D,YAAa,EAAnD;AAED,cAAIF,IAAI,GAAGhG,SAAX;;AACA,cAAIiG,UAAU,CAACjH,kBAAf,EAAmC;AAClCgH,YAAAA,IAAI,GAAG,IAAIF,GAAJ,EAAP;AACAE,YAAAA,IAAI,CAACD,GAAL,CAAS,oBAAT,EAA+BE,UAAU,CAACjH,kBAA1C;AACA;;AAED,gBAAM6G,OAAO,GAAG,IAAIC,GAAJ,EAAhB;;AACA,cAAI,KAAKQ,YAAL,IAAqB,KAAKC,kBAA9B,EAAkD;AACjDV,YAAAA,OAAO,CAACE,GAAR,CACC,YADD,EAEC,IAAI3J,cAAJ,CAAmB8J,YAAnB,EAAiC,KAAK7F,UAAL,EAAjC,CAFD;AAIA,WALD,MAKO;AACNwF,YAAAA,OAAO,CAACE,GAAR,CAAY,YAAZ,EAA0B,IAAI1J,SAAJ,CAAc6J,YAAd,CAA1B;AACA;;AAED,cAAI7D,mBAAmB,GAAG4D,UAAU,CAAC5D,mBAArC;;AACA,cAAI,CAACuD,kBAAL,EAAyB;AACxB,gBAAI,CAACvD,mBAAL,EAA0B;AACzBA,cAAAA,mBAAmB,GAAG9E,oBAAtB;AACA,aAFD,MAEO;AACN,oBAAMwI,GAAG,GAAG,IAAI1I,GAAJ,CAAQgF,mBAAR,CAAZ;AACA0D,cAAAA,GAAG,CAACS,GAAJ,CAAQ5J,cAAc,CAACY,MAAvB;AACA6E,cAAAA,mBAAmB,GAAG0D,GAAtB;AACA;AACD;;AAED,iBAAO;AACNF,YAAAA,OADM;AAENxD,YAAAA,mBAAmB,EAClBA,mBAAmB,IAAIxE,0BAHlB;AAINmI,YAAAA;AAJM,WAAP;AAMA;AAjFF;AAmFA;AAED;AACD;AACA;AACA;;;AACCS,EAAAA,IAAI,CAACzI,IAAD,EAAO;AACV,WAAO,EAAP;AACA;AAED;AACD;AACA;AACA;AACA;;;AACC0I,EAAAA,UAAU,CAACC,IAAD,EAAO5C,OAAP,EAAgB;AACzB,UAAM;AAAEL,MAAAA;AAAF,QAAiBK,OAAvB;AACA4C,IAAAA,IAAI,CAACzG,MAAL,CACE,GAAE,KAAKkD,YAAa,GAAE9E,IAAI,CAACC,SAAL,CAAe,KAAKsB,OAApB,CAA6B,GAAE,KAAK2F,UAAL,CACrD9B,UAAU,CAAC0B,WAD0C,CAEpD,EAHH;AAKA,UAAMsB,UAAN,CAAiBC,IAAjB,EAAuB5C,OAAvB;AACA;AAED;AACD;AACA;;;AACCrD,EAAAA,SAAS,CAACqD,OAAD,EAAU;AAClB,UAAM;AAAEnD,MAAAA;AAAF,QAAYmD,OAAlB;AAEAnD,IAAAA,KAAK,CAAC,KAAKf,OAAN,CAAL;AACAe,IAAAA,KAAK,CAAC,KAAKwC,YAAN,CAAL;AACAxC,IAAAA,KAAK,CAAC,KAAKuC,WAAN,CAAL;AAEA,UAAMzC,SAAN,CAAgBqD,OAAhB;AACA;AAED;AACD;AACA;;;AACClD,EAAAA,WAAW,CAACkD,OAAD,EAAU;AACpB,UAAM;AAAEjD,MAAAA;AAAF,QAAWiD,OAAjB;AAEA,SAAKlE,OAAL,GAAeiB,IAAI,EAAnB;AACA,SAAKsC,YAAL,GAAoBtC,IAAI,EAAxB;AACA,SAAKqC,WAAL,GAAmBrC,IAAI,EAAvB;AAEA,UAAMD,WAAN,CAAkBkD,OAAlB;AACA;;AApYkC;;AAuYpC9G,gBAAgB,CAACiG,cAAD,EAAiB,4BAAjB,CAAhB;AAEA1F,MAAM,CAACoJ,OAAP,GAAiB1D,cAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { OriginalSource, RawSource } = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"./ConcatenationScope\");\nconst { UsageState } = require(\"./ExportsInfo\");\nconst InitFragment = require(\"./InitFragment\");\nconst Module = require(\"./Module\");\nconst { JAVASCRIPT_MODULE_TYPE_DYNAMIC } = require(\"./ModuleTypeConstants\");\nconst RuntimeGlobals = require(\"./RuntimeGlobals\");\nconst Template = require(\"./Template\");\nconst StaticExportsDependency = require(\"./dependencies/StaticExportsDependency\");\nconst createHash = require(\"./util/createHash\");\nconst extractUrlAndGlobal = require(\"./util/extractUrlAndGlobal\");\nconst makeSerializable = require(\"./util/makeSerializable\");\nconst propertyAccess = require(\"./util/propertyAccess\");\nconst { register } = require(\"./util/serialization\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../declarations/WebpackOptions\").WebpackOptionsNormalized} WebpackOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"./ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Dependency\").UpdateHashContext} UpdateHashContext */\n/** @typedef {import(\"./DependencyTemplates\")} DependencyTemplates */\n/** @typedef {import(\"./ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"./Module\").CodeGenerationContext} CodeGenerationContext */\n/** @typedef {import(\"./Module\").CodeGenerationResult} CodeGenerationResult */\n/** @typedef {import(\"./Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"./Module\").LibIdentOptions} LibIdentOptions */\n/** @typedef {import(\"./Module\").NeedBuildContext} NeedBuildContext */\n/** @typedef {import(\"./NormalModuleFactory\")} NormalModuleFactory */\n/** @typedef {import(\"./RequestShortener\")} RequestShortener */\n/** @typedef {import(\"./ResolverFactory\").ResolverWithOptions} ResolverWithOptions */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./WebpackError\")} WebpackError */\n/** @typedef {import(\"./javascript/JavascriptModulesPlugin\").ChunkRenderContext} ChunkRenderContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n/** @typedef {import(\"./util/Hash\")} Hash */\n/** @typedef {typeof import(\"./util/Hash\")} HashConstructor */\n/** @typedef {import(\"./util/fs\").InputFileSystem} InputFileSystem */\n/** @typedef {import(\"./util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/**\n * @typedef {Object} SourceData\n * @property {boolean=} iife\n * @property {string=} init\n * @property {string} expression\n * @property {InitFragment<ChunkRenderContext>[]=} chunkInitFragments\n * @property {ReadonlySet<string>=} runtimeRequirements\n */\n\nconst TYPES = new Set([\"javascript\"]);\nconst CSS_TYPES = new Set([\"css-import\"]);\nconst RUNTIME_REQUIREMENTS = new Set([RuntimeGlobals.module]);\nconst RUNTIME_REQUIREMENTS_FOR_SCRIPT = new Set([RuntimeGlobals.loadScript]);\nconst RUNTIME_REQUIREMENTS_FOR_MODULE = new Set([\n\tRuntimeGlobals.definePropertyGetters\n]);\nconst EMPTY_RUNTIME_REQUIREMENTS = new Set([]);\n\n/**\n * @param {string|string[]} variableName the variable name or path\n * @param {string} type the module system\n * @returns {SourceData} the generated source\n */\nconst getSourceForGlobalVariableExternal = (variableName, type) => {\n\tif (!Array.isArray(variableName)) {\n\t\t// make it an array as the look up works the same basically\n\t\tvariableName = [variableName];\n\t}\n\n\t// needed for e.g. window[\"some\"][\"thing\"]\n\tconst objectLookup = variableName.map(r => `[${JSON.stringify(r)}]`).join(\"\");\n\treturn {\n\t\tiife: type === \"this\",\n\t\texpression: `${type}${objectLookup}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternal = moduleAndSpecifiers => {\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `require(${JSON.stringify(moduleAndSpecifiers)})`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `require(${JSON.stringify(moduleName)})${propertyAccess(\n\t\t\tmoduleAndSpecifiers,\n\t\t\t1\n\t\t)}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {string} importMetaName import.meta name\n * @returns {SourceData} the generated source\n */\nconst getSourceForCommonJsExternalInNodeModule = (\n\tmoduleAndSpecifiers,\n\timportMetaName\n) => {\n\tconst chunkInitFragments = [\n\t\tnew InitFragment(\n\t\t\t'import { createRequire as __WEBPACK_EXTERNAL_createRequire } from \"module\";\\n',\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t0,\n\t\t\t\"external module node-commonjs\"\n\t\t)\n\t];\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\tchunkInitFragments,\n\t\t\texpression: `__WEBPACK_EXTERNAL_createRequire(${importMetaName}.url)(${JSON.stringify(\n\t\t\t\tmoduleAndSpecifiers\n\t\t\t)})`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\tchunkInitFragments,\n\t\texpression: `__WEBPACK_EXTERNAL_createRequire(${importMetaName}.url)(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)})${propertyAccess(moduleAndSpecifiers, 1)}`\n\t};\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForImportExternal = (moduleAndSpecifiers, runtimeTemplate) => {\n\tconst importName = runtimeTemplate.outputOptions.importFunctionName;\n\tif (!runtimeTemplate.supportsDynamicImport() && importName === \"import\") {\n\t\tthrow new Error(\n\t\t\t\"The target environment doesn't support 'import()' so it's not possible to use external type 'import'\"\n\t\t);\n\t}\n\tif (!Array.isArray(moduleAndSpecifiers)) {\n\t\treturn {\n\t\t\texpression: `${importName}(${JSON.stringify(moduleAndSpecifiers)});`\n\t\t};\n\t}\n\tif (moduleAndSpecifiers.length === 1) {\n\t\treturn {\n\t\t\texpression: `${importName}(${JSON.stringify(moduleAndSpecifiers[0])});`\n\t\t};\n\t}\n\tconst moduleName = moduleAndSpecifiers[0];\n\treturn {\n\t\texpression: `${importName}(${JSON.stringify(\n\t\t\tmoduleName\n\t\t)}).then(${runtimeTemplate.returningFunction(\n\t\t\t`module${propertyAccess(moduleAndSpecifiers, 1)}`,\n\t\t\t\"module\"\n\t\t)});`\n\t};\n};\n\nclass ModuleExternalInitFragment extends InitFragment {\n\t/**\n\t * @param {string} request import source\n\t * @param {string=} ident recomputed ident\n\t * @param {string | HashConstructor=} hashFunction the hash function to use\n\t */\n\tconstructor(request, ident, hashFunction = \"md4\") {\n\t\tif (ident === undefined) {\n\t\t\tident = Template.toIdentifier(request);\n\t\t\tif (ident !== request) {\n\t\t\t\tident += `_${createHash(hashFunction)\n\t\t\t\t\t.update(request)\n\t\t\t\t\t.digest(\"hex\")\n\t\t\t\t\t.slice(0, 8)}`;\n\t\t\t}\n\t\t}\n\t\tconst identifier = `__WEBPACK_EXTERNAL_MODULE_${ident}__`;\n\t\tsuper(\n\t\t\t`import * as ${identifier} from ${JSON.stringify(request)};\\n`,\n\t\t\tInitFragment.STAGE_HARMONY_IMPORTS,\n\t\t\t0,\n\t\t\t`external module import ${ident}`\n\t\t);\n\t\tthis._ident = ident;\n\t\tthis._identifier = identifier;\n\t\tthis._request = request;\n\t}\n\n\tgetNamespaceIdentifier() {\n\t\treturn this._identifier;\n\t}\n}\n\nregister(\n\tModuleExternalInitFragment,\n\t\"webpack/lib/ExternalModule\",\n\t\"ModuleExternalInitFragment\",\n\t{\n\t\tserialize(obj, { write }) {\n\t\t\twrite(obj._request);\n\t\t\twrite(obj._ident);\n\t\t},\n\t\tdeserialize({ read }) {\n\t\t\treturn new ModuleExternalInitFragment(read(), read());\n\t\t}\n\t}\n);\n\nconst generateModuleRemapping = (input, exportsInfo, runtime) => {\n\tif (exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused) {\n\t\tconst properties = [];\n\t\tfor (const exportInfo of exportsInfo.orderedExports) {\n\t\t\tconst used = exportInfo.getUsedName(exportInfo.name, runtime);\n\t\t\tif (!used) continue;\n\t\t\tconst nestedInfo = exportInfo.getNestedExportsInfo();\n\t\t\tif (nestedInfo) {\n\t\t\t\tconst nestedExpr = generateModuleRemapping(\n\t\t\t\t\t`${input}${propertyAccess([exportInfo.name])}`,\n\t\t\t\t\tnestedInfo\n\t\t\t\t);\n\t\t\t\tif (nestedExpr) {\n\t\t\t\t\tproperties.push(`[${JSON.stringify(used)}]: y(${nestedExpr})`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tproperties.push(\n\t\t\t\t`[${JSON.stringify(used)}]: () => ${input}${propertyAccess([\n\t\t\t\t\texportInfo.name\n\t\t\t\t])}`\n\t\t\t);\n\t\t}\n\t\treturn `x({ ${properties.join(\", \")} })`;\n\t}\n};\n\n/**\n * @param {string|string[]} moduleAndSpecifiers the module request\n * @param {ExportsInfo} exportsInfo exports info of this module\n * @param {RuntimeSpec} runtime the runtime\n * @param {string | HashConstructor=} hashFunction the hash function to use\n * @returns {SourceData} the generated source\n */\nconst getSourceForModuleExternal = (\n\tmoduleAndSpecifiers,\n\texportsInfo,\n\truntime,\n\thashFunction\n) => {\n\tif (!Array.isArray(moduleAndSpecifiers))\n\t\tmoduleAndSpecifiers = [moduleAndSpecifiers];\n\tconst initFragment = new ModuleExternalInitFragment(\n\t\tmoduleAndSpecifiers[0],\n\t\tundefined,\n\t\thashFunction\n\t);\n\tconst baseAccess = `${initFragment.getNamespaceIdentifier()}${propertyAccess(\n\t\tmoduleAndSpecifiers,\n\t\t1\n\t)}`;\n\tconst moduleRemapping = generateModuleRemapping(\n\t\tbaseAccess,\n\t\texportsInfo,\n\t\truntime\n\t);\n\tlet expression = moduleRemapping || baseAccess;\n\treturn {\n\t\texpression,\n\t\tinit: `var x = y => { var x = {}; ${RuntimeGlobals.definePropertyGetters}(x, y); return x; }\\nvar y = x => () => x`,\n\t\truntimeRequirements: moduleRemapping\n\t\t\t? RUNTIME_REQUIREMENTS_FOR_MODULE\n\t\t\t: undefined,\n\t\tchunkInitFragments: [initFragment]\n\t};\n};\n\n/**\n * @param {string|string[]} urlAndGlobal the script request\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForScriptExternal = (urlAndGlobal, runtimeTemplate) => {\n\tif (typeof urlAndGlobal === \"string\") {\n\t\turlAndGlobal = extractUrlAndGlobal(urlAndGlobal);\n\t}\n\tconst url = urlAndGlobal[0];\n\tconst globalName = urlAndGlobal[1];\n\treturn {\n\t\tinit: \"var __webpack_error__ = new Error();\",\n\t\texpression: `new Promise(${runtimeTemplate.basicFunction(\n\t\t\t\"resolve, reject\",\n\t\t\t[\n\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\n\t\t\t\t`${RuntimeGlobals.loadScript}(${JSON.stringify(\n\t\t\t\t\turl\n\t\t\t\t)}, ${runtimeTemplate.basicFunction(\"event\", [\n\t\t\t\t\t`if(typeof ${globalName} !== \"undefined\") return resolve();`,\n\t\t\t\t\t\"var errorType = event && (event.type === 'load' ? 'missing' : event.type);\",\n\t\t\t\t\t\"var realSrc = event && event.target && event.target.src;\",\n\t\t\t\t\t\"__webpack_error__.message = 'Loading script failed.\\\\n(' + errorType + ': ' + realSrc + ')';\",\n\t\t\t\t\t\"__webpack_error__.name = 'ScriptExternalLoadError';\",\n\t\t\t\t\t\"__webpack_error__.type = errorType;\",\n\t\t\t\t\t\"__webpack_error__.request = realSrc;\",\n\t\t\t\t\t\"reject(__webpack_error__);\"\n\t\t\t\t])}, ${JSON.stringify(globalName)});`\n\t\t\t]\n\t\t)}).then(${runtimeTemplate.returningFunction(\n\t\t\t`${globalName}${propertyAccess(urlAndGlobal, 2)}`\n\t\t)})`,\n\t\truntimeRequirements: RUNTIME_REQUIREMENTS_FOR_SCRIPT\n\t};\n};\n\n/**\n * @param {string} variableName the variable name to check\n * @param {string} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {string} the generated source\n */\nconst checkExternalVariable = (variableName, request, runtimeTemplate) => {\n\treturn `if(typeof ${variableName} === 'undefined') { ${runtimeTemplate.throwMissingModuleErrorBlock(\n\t\t{ request }\n\t)} }\\n`;\n};\n\n/**\n * @param {string|number} id the module id\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForAmdOrUmdExternal = (\n\tid,\n\toptional,\n\trequest,\n\truntimeTemplate\n) => {\n\tconst externalVariable = `__WEBPACK_EXTERNAL_MODULE_${Template.toIdentifier(\n\t\t`${id}`\n\t)}__`;\n\treturn {\n\t\tinit: optional\n\t\t\t? checkExternalVariable(\n\t\t\t\t\texternalVariable,\n\t\t\t\t\tArray.isArray(request) ? request.join(\".\") : request,\n\t\t\t\t\truntimeTemplate\n\t\t\t  )\n\t\t\t: undefined,\n\t\texpression: externalVariable\n\t};\n};\n\n/**\n * @param {boolean} optional true, if the module is optional\n * @param {string|string[]} request the request path\n * @param {RuntimeTemplate} runtimeTemplate the runtime template\n * @returns {SourceData} the generated source\n */\nconst getSourceForDefaultCase = (optional, request, runtimeTemplate) => {\n\tif (!Array.isArray(request)) {\n\t\t// make it an array as the look up works the same basically\n\t\trequest = [request];\n\t}\n\n\tconst variableName = request[0];\n\tconst objectLookup = propertyAccess(request, 1);\n\treturn {\n\t\tinit: optional\n\t\t\t? checkExternalVariable(variableName, request.join(\".\"), runtimeTemplate)\n\t\t\t: undefined,\n\t\texpression: `${variableName}${objectLookup}`\n\t};\n};\n\nclass ExternalModule extends Module {\n\t/**\n\t * @param {string | string[] | Record<string, string | string[]>} request request\n\t * @param {TODO} type type\n\t * @param {string} userRequest user request\n\t */\n\tconstructor(request, type, userRequest) {\n\t\tsuper(JAVASCRIPT_MODULE_TYPE_DYNAMIC, null);\n\n\t\t// Info from Factory\n\t\t/** @type {string | string[] | Record<string, string | string[]>} */\n\t\tthis.request = request;\n\t\t/** @type {string} */\n\t\tthis.externalType = type;\n\t\t/** @type {string} */\n\t\tthis.userRequest = userRequest;\n\t}\n\n\t/**\n\t * @returns {Set<string>} types available (do not mutate)\n\t */\n\tgetSourceTypes() {\n\t\treturn this.externalType === \"css-import\" ? CSS_TYPES : TYPES;\n\t}\n\n\t/**\n\t * @param {LibIdentOptions} options options\n\t * @returns {string | null} an identifier for library inclusion\n\t */\n\tlibIdent(options) {\n\t\treturn this.userRequest;\n\t}\n\n\t/**\n\t * @param {Chunk} chunk the chunk which condition should be checked\n\t * @param {Compilation} compilation the compilation\n\t * @returns {boolean} true, if the chunk is ok for the module\n\t */\n\tchunkCondition(chunk, { chunkGraph }) {\n\t\treturn this.externalType === \"css-import\"\n\t\t\t? true\n\t\t\t: chunkGraph.getNumberOfEntryModules(chunk) > 0;\n\t}\n\n\t/**\n\t * @returns {string} a unique identifier of the module\n\t */\n\tidentifier() {\n\t\treturn `external ${this.externalType} ${JSON.stringify(this.request)}`;\n\t}\n\n\t/**\n\t * @param {RequestShortener} requestShortener the request shortener\n\t * @returns {string} a user readable identifier of the module\n\t */\n\treadableIdentifier(requestShortener) {\n\t\treturn \"external \" + JSON.stringify(this.request);\n\t}\n\n\t/**\n\t * @param {NeedBuildContext} context context info\n\t * @param {function((WebpackError | null)=, boolean=): void} callback callback function, returns true, if the module needs a rebuild\n\t * @returns {void}\n\t */\n\tneedBuild(context, callback) {\n\t\treturn callback(null, !this.buildMeta);\n\t}\n\n\t/**\n\t * @param {WebpackOptions} options webpack options\n\t * @param {Compilation} compilation the compilation\n\t * @param {ResolverWithOptions} resolver the resolver\n\t * @param {InputFileSystem} fs the file system\n\t * @param {function(WebpackError=): void} callback callback function\n\t * @returns {void}\n\t */\n\tbuild(options, compilation, resolver, fs, callback) {\n\t\tthis.buildMeta = {\n\t\t\tasync: false,\n\t\t\texportsType: undefined\n\t\t};\n\t\tthis.buildInfo = {\n\t\t\tstrict: true,\n\t\t\ttopLevelDeclarations: new Set(),\n\t\t\tmodule: compilation.outputOptions.module\n\t\t};\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\n\t\tthis.buildMeta.exportsType = \"dynamic\";\n\t\tlet canMangle = false;\n\t\tthis.clearDependenciesAndBlocks();\n\t\tswitch (externalType) {\n\t\t\tcase \"this\":\n\t\t\t\tthis.buildInfo.strict = false;\n\t\t\t\tbreak;\n\t\t\tcase \"system\":\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\tcanMangle = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"module\":\n\t\t\t\tif (this.buildInfo.module) {\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\t\tcanMangle = true;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\t\tcanMangle = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"script\":\n\t\t\tcase \"promise\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tbreak;\n\t\t\tcase \"import\":\n\t\t\t\tthis.buildMeta.async = true;\n\t\t\t\tif (!Array.isArray(request) || request.length === 1) {\n\t\t\t\t\tthis.buildMeta.exportsType = \"namespace\";\n\t\t\t\t\tcanMangle = false;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.addDependency(new StaticExportsDependency(true, canMangle));\n\t\tcallback();\n\t}\n\n\trestoreFromUnsafeCache(unsafeCacheData, normalModuleFactory) {\n\t\tthis._restoreFromUnsafeCache(unsafeCacheData, normalModuleFactory);\n\t}\n\n\t/**\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason({ moduleGraph }) {\n\t\tswitch (this.externalType) {\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\tcase \"jsonp\":\n\t\t\t\treturn `${this.externalType} externals can't be concatenated`;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\t_getRequestAndExternalType() {\n\t\tlet { request, externalType } = this;\n\t\tif (typeof request === \"object\" && !Array.isArray(request))\n\t\t\trequest = request[externalType];\n\t\treturn { request, externalType };\n\t}\n\n\t_getSourceData(\n\t\trequest,\n\t\texternalType,\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime\n\t) {\n\t\tswitch (externalType) {\n\t\t\tcase \"this\":\n\t\t\tcase \"window\":\n\t\t\tcase \"self\":\n\t\t\t\treturn getSourceForGlobalVariableExternal(request, this.externalType);\n\t\t\tcase \"global\":\n\t\t\t\treturn getSourceForGlobalVariableExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate.globalObject\n\t\t\t\t);\n\t\t\tcase \"commonjs\":\n\t\t\tcase \"commonjs2\":\n\t\t\tcase \"commonjs-module\":\n\t\t\tcase \"commonjs-static\":\n\t\t\t\treturn getSourceForCommonJsExternal(request);\n\t\t\tcase \"node-commonjs\":\n\t\t\t\treturn this.buildInfo.module\n\t\t\t\t\t? getSourceForCommonJsExternalInNodeModule(\n\t\t\t\t\t\t\trequest,\n\t\t\t\t\t\t\truntimeTemplate.outputOptions.importMetaName\n\t\t\t\t\t  )\n\t\t\t\t\t: getSourceForCommonJsExternal(request);\n\t\t\tcase \"amd\":\n\t\t\tcase \"amd-require\":\n\t\t\tcase \"umd\":\n\t\t\tcase \"umd2\":\n\t\t\tcase \"system\":\n\t\t\tcase \"jsonp\": {\n\t\t\t\tconst id = chunkGraph.getModuleId(this);\n\t\t\t\treturn getSourceForAmdOrUmdExternal(\n\t\t\t\t\tid !== null ? id : this.identifier(),\n\t\t\t\t\tthis.isOptional(moduleGraph),\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"import\":\n\t\t\t\treturn getSourceForImportExternal(request, runtimeTemplate);\n\t\t\tcase \"script\":\n\t\t\t\treturn getSourceForScriptExternal(request, runtimeTemplate);\n\t\t\tcase \"module\": {\n\t\t\t\tif (!this.buildInfo.module) {\n\t\t\t\t\tif (!runtimeTemplate.supportsDynamicImport()) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"The target environment doesn't support dynamic import() syntax so it's not possible to use external type 'module' within a script\" +\n\t\t\t\t\t\t\t\t(runtimeTemplate.supportsEcmaScriptModuleSyntax()\n\t\t\t\t\t\t\t\t\t? \"\\nDid you mean to build a EcmaScript Module ('output.module: true')?\"\n\t\t\t\t\t\t\t\t\t: \"\")\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn getSourceForImportExternal(request, runtimeTemplate);\n\t\t\t\t}\n\t\t\t\tif (!runtimeTemplate.supportsEcmaScriptModuleSyntax()) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"The target environment doesn't support EcmaScriptModule syntax so it's not possible to use external type 'module'\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn getSourceForModuleExternal(\n\t\t\t\t\trequest,\n\t\t\t\t\tmoduleGraph.getExportsInfo(this),\n\t\t\t\t\truntime,\n\t\t\t\t\truntimeTemplate.outputOptions.hashFunction\n\t\t\t\t);\n\t\t\t}\n\t\t\tcase \"var\":\n\t\t\tcase \"promise\":\n\t\t\tcase \"const\":\n\t\t\tcase \"let\":\n\t\t\tcase \"assign\":\n\t\t\tdefault:\n\t\t\t\treturn getSourceForDefaultCase(\n\t\t\t\t\tthis.isOptional(moduleGraph),\n\t\t\t\t\trequest,\n\t\t\t\t\truntimeTemplate\n\t\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @param {CodeGenerationContext} context context for code generation\n\t * @returns {CodeGenerationResult} result\n\t */\n\tcodeGeneration({\n\t\truntimeTemplate,\n\t\tmoduleGraph,\n\t\tchunkGraph,\n\t\truntime,\n\t\tconcatenationScope\n\t}) {\n\t\tconst { request, externalType } = this._getRequestAndExternalType();\n\t\tswitch (externalType) {\n\t\t\tcase \"asset\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tsources.set(\n\t\t\t\t\t\"javascript\",\n\t\t\t\t\tnew RawSource(`module.exports = ${JSON.stringify(request)};`)\n\t\t\t\t);\n\t\t\t\tconst data = new Map();\n\t\t\t\tdata.set(\"url\", request);\n\t\t\t\treturn { sources, runtimeRequirements: RUNTIME_REQUIREMENTS, data };\n\t\t\t}\n\t\t\tcase \"css-import\": {\n\t\t\t\tconst sources = new Map();\n\t\t\t\tsources.set(\n\t\t\t\t\t\"css-import\",\n\t\t\t\t\tnew RawSource(`@import url(${JSON.stringify(request)});`)\n\t\t\t\t);\n\t\t\t\treturn {\n\t\t\t\t\tsources,\n\t\t\t\t\truntimeRequirements: EMPTY_RUNTIME_REQUIREMENTS\n\t\t\t\t};\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tconst sourceData = this._getSourceData(\n\t\t\t\t\trequest,\n\t\t\t\t\texternalType,\n\t\t\t\t\truntimeTemplate,\n\t\t\t\t\tmoduleGraph,\n\t\t\t\t\tchunkGraph,\n\t\t\t\t\truntime\n\t\t\t\t);\n\n\t\t\t\tlet sourceString = sourceData.expression;\n\t\t\t\tif (sourceData.iife)\n\t\t\t\t\tsourceString = `(function() { return ${sourceString}; }())`;\n\t\t\t\tif (concatenationScope) {\n\t\t\t\t\tsourceString = `${\n\t\t\t\t\t\truntimeTemplate.supportsConst() ? \"const\" : \"var\"\n\t\t\t\t\t} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${sourceString};`;\n\t\t\t\t\tconcatenationScope.registerNamespaceExport(\n\t\t\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsourceString = `module.exports = ${sourceString};`;\n\t\t\t\t}\n\t\t\t\tif (sourceData.init)\n\t\t\t\t\tsourceString = `${sourceData.init}\\n${sourceString}`;\n\n\t\t\t\tlet data = undefined;\n\t\t\t\tif (sourceData.chunkInitFragments) {\n\t\t\t\t\tdata = new Map();\n\t\t\t\t\tdata.set(\"chunkInitFragments\", sourceData.chunkInitFragments);\n\t\t\t\t}\n\n\t\t\t\tconst sources = new Map();\n\t\t\t\tif (this.useSourceMap || this.useSimpleSourceMap) {\n\t\t\t\t\tsources.set(\n\t\t\t\t\t\t\"javascript\",\n\t\t\t\t\t\tnew OriginalSource(sourceString, this.identifier())\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tsources.set(\"javascript\", new RawSource(sourceString));\n\t\t\t\t}\n\n\t\t\t\tlet runtimeRequirements = sourceData.runtimeRequirements;\n\t\t\t\tif (!concatenationScope) {\n\t\t\t\t\tif (!runtimeRequirements) {\n\t\t\t\t\t\truntimeRequirements = RUNTIME_REQUIREMENTS;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst set = new Set(runtimeRequirements);\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\n\t\t\t\t\t\truntimeRequirements = set;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsources,\n\t\t\t\t\truntimeRequirements:\n\t\t\t\t\t\truntimeRequirements || EMPTY_RUNTIME_REQUIREMENTS,\n\t\t\t\t\tdata\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {string=} type the source type for which the size should be estimated\n\t * @returns {number} the estimated size of the module (must be non-zero)\n\t */\n\tsize(type) {\n\t\treturn 42;\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @param {UpdateHashContext} context context\n\t * @returns {void}\n\t */\n\tupdateHash(hash, context) {\n\t\tconst { chunkGraph } = context;\n\t\thash.update(\n\t\t\t`${this.externalType}${JSON.stringify(this.request)}${this.isOptional(\n\t\t\t\tchunkGraph.moduleGraph\n\t\t\t)}`\n\t\t);\n\t\tsuper.updateHash(hash, context);\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.request);\n\t\twrite(this.externalType);\n\t\twrite(this.userRequest);\n\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.request = read();\n\t\tthis.externalType = read();\n\t\tthis.userRequest = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(ExternalModule, \"webpack/lib/ExternalModule\");\n\nmodule.exports = ExternalModule;\n"]},"metadata":{},"sourceType":"script"}