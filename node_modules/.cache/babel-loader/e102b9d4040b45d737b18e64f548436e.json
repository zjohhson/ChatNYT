{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\n\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { getDisplayName, unstable_capitalize as capitalize, isPlainObject, deepmerge } from '@mui/utils';\nimport createTheme from './createTheme';\nimport propsToClassKey from './propsToClassKey';\nimport styleFunctionSx from './styleFunctionSx';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n} // https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\n\n\nfunction isStringTag(tag) {\n  return typeof tag === 'string' && // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\n\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n\n  return null;\n};\n\nconst transformVariants = variants => {\n  const variantsStyles = {};\n\n  if (variants) {\n    variants.forEach(definition => {\n      const key = propsToClassKey(definition.props);\n      variantsStyles[key] = definition.style;\n    });\n  }\n\n  return variantsStyles;\n};\n\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  return transformVariants(variants);\n};\n\nconst variantsResolver = (props, styles, variants) => {\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n\n  if (variants) {\n    variants.forEach(variant => {\n      let isMatch = true;\n      Object.keys(variant.props).forEach(key => {\n        if (ownerState[key] !== variant.props[key] && props[key] !== variant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(variant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n};\n\nconst themeVariantsResolver = (props, styles, theme, name) => {\n  var _theme$components;\n\n  const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[name]) == null ? void 0 : _theme$components.variants;\n  return variantsResolver(props, styles, themeVariants);\n}; // Update /system/styled/#api in case if this changes\n\n\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\n\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\n\nfunction resolveTheme(_ref) {\n  let {\n    defaultTheme,\n    theme,\n    themeId\n  } = _ref;\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\n\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n\n  return (props, styles) => styles[slot];\n}\n\nconst muiStyledFunctionResolver = _ref2 => {\n  let {\n    styledArg,\n    props,\n    defaultTheme,\n    themeId\n  } = _ref2;\n  const resolvedStyles = styledArg(_extends({}, props, {\n    theme: resolveTheme(_extends({}, props, {\n      defaultTheme,\n      themeId\n    }))\n  }));\n  let optionalVariants;\n\n  if (resolvedStyles && resolvedStyles.variants) {\n    optionalVariants = resolvedStyles.variants;\n    delete resolvedStyles.variants;\n  }\n\n  if (optionalVariants) {\n    const variantsStyles = variantsResolver(props, transformVariants(optionalVariants), optionalVariants);\n    return [resolvedStyles, ...variantsStyles];\n  }\n\n  return resolvedStyles;\n};\n\nexport default function createStyled() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n\n  systemSx.__mui_systemSx = true;\n  return function (tag) {\n    let inputOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n      // For more details: https://github.com/mui/material-ui/pull/37908\n      overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n    } = inputOptions,\n          options = _objectWithoutPropertiesLoose(inputOptions, _excluded); // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n\n\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n\n    let shouldForwardPropOption = shouldForwardProp; // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n\n    const muiStyledResolver = function (styleArg) {\n      for (var _len = arguments.length, expressions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        expressions[_key - 1] = arguments[_key];\n      }\n\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n        // component stays as a function. This condition makes sure that we do not interpolate functions\n        // which are basically components used as a selectors.\n        if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg) {\n          return props => muiStyledFunctionResolver({\n            styledArg: stylesArg,\n            props,\n            defaultTheme,\n            themeId\n          });\n        }\n\n        if (isPlainObject(stylesArg)) {\n          let transformedStylesArg = stylesArg;\n          let styledArgVariants;\n\n          if (stylesArg && stylesArg.variants) {\n            styledArgVariants = stylesArg.variants;\n            delete transformedStylesArg.variants;\n\n            transformedStylesArg = props => {\n              let result = stylesArg;\n              const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);\n              variantStyles.forEach(variantStyle => {\n                result = deepmerge(result, variantStyle);\n              });\n              return result;\n            };\n          }\n\n          return transformedStylesArg;\n        }\n\n        return stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n\n      if (isPlainObject(styleArg)) {\n        let styledArgVariants;\n\n        if (styleArg && styleArg.variants) {\n          styledArgVariants = styleArg.variants;\n          delete transformedStyleArg.variants;\n\n          transformedStyleArg = props => {\n            let result = styleArg;\n            const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);\n            variantStyles.forEach(variantStyle => {\n              result = deepmerge(result, variantStyle);\n            });\n            return result;\n          };\n        }\n      } else if (typeof styleArg === 'function' && // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      styleArg.__emotion_real !== styleArg) {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = props => muiStyledFunctionResolver({\n          styledArg: styleArg,\n          props,\n          defaultTheme,\n          themeId\n        });\n      }\n\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const styleOverrides = getStyleOverrides(componentName, theme);\n\n          if (styleOverrides) {\n            const resolvedStyleOverrides = {};\n            Object.entries(styleOverrides).forEach(_ref3 => {\n              let [slotKey, slotStyle] = _ref3;\n              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle(_extends({}, props, {\n                theme\n              })) : slotStyle;\n            });\n            return overridesResolver(props, resolvedStyleOverrides);\n          }\n\n          return null;\n        });\n      }\n\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          return themeVariantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill(''); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n\n        Component.displayName = displayName;\n      }\n\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n\n      return Component;\n    };\n\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n\n    return muiStyledResolver;\n  };\n}","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/@mui/system/esm/createStyled.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","styledEngineStyled","internal_processStyles","processStyles","getDisplayName","unstable_capitalize","capitalize","isPlainObject","deepmerge","createTheme","propsToClassKey","styleFunctionSx","isEmpty","obj","Object","keys","length","isStringTag","tag","charCodeAt","getStyleOverrides","name","theme","components","styleOverrides","transformVariants","variants","variantsStyles","forEach","definition","key","props","style","getVariantStyles","variantsResolver","styles","ownerState","variant","isMatch","push","themeVariantsResolver","_theme$components","themeVariants","shouldForwardProp","prop","systemDefaultTheme","lowercaseFirstLetter","string","charAt","toLowerCase","slice","resolveTheme","defaultTheme","themeId","defaultOverridesResolver","slot","muiStyledFunctionResolver","styledArg","resolvedStyles","optionalVariants","createStyled","input","rootShouldForwardProp","slotShouldForwardProp","systemSx","__mui_systemSx","inputOptions","filter","componentName","componentSlot","skipVariantsResolver","inputSkipVariantsResolver","skipSx","inputSkipSx","overridesResolver","options","undefined","label","process","env","NODE_ENV","shouldForwardPropOption","defaultStyledResolver","muiStyledResolver","styleArg","expressions","expressionsWithDefaultTheme","map","stylesArg","__emotion_real","transformedStylesArg","styledArgVariants","result","variantStyles","variantStyle","transformedStyleArg","resolvedStyleOverrides","entries","slotKey","slotStyle","numOfCustomFnsApplied","Array","isArray","placeholders","fill","raw","Component","displayName","muiName","withConfig"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"];\n/* eslint-disable no-underscore-dangle */\nimport styledEngineStyled, { internal_processStyles as processStyles } from '@mui/styled-engine';\nimport { getDisplayName, unstable_capitalize as capitalize, isPlainObject, deepmerge } from '@mui/utils';\nimport createTheme from './createTheme';\nimport propsToClassKey from './propsToClassKey';\nimport styleFunctionSx from './styleFunctionSx';\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\n// https://github.com/emotion-js/emotion/blob/26ded6109fcd8ca9875cc2ce4564fee678a3f3c5/packages/styled/src/utils.js#L40\nfunction isStringTag(tag) {\n  return typeof tag === 'string' &&\n  // 96 is one less than the char code\n  // for \"a\" so this is checking that\n  // it's a lowercase character\n  tag.charCodeAt(0) > 96;\n}\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n  return null;\n};\nconst transformVariants = variants => {\n  const variantsStyles = {};\n  if (variants) {\n    variants.forEach(definition => {\n      const key = propsToClassKey(definition.props);\n      variantsStyles[key] = definition.style;\n    });\n  }\n  return variantsStyles;\n};\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n  return transformVariants(variants);\n};\nconst variantsResolver = (props, styles, variants) => {\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n  if (variants) {\n    variants.forEach(variant => {\n      let isMatch = true;\n      Object.keys(variant.props).forEach(key => {\n        if (ownerState[key] !== variant.props[key] && props[key] !== variant.props[key]) {\n          isMatch = false;\n        }\n      });\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(variant.props)]);\n      }\n    });\n  }\n  return variantsStyles;\n};\nconst themeVariantsResolver = (props, styles, theme, name) => {\n  var _theme$components;\n  const themeVariants = theme == null || (_theme$components = theme.components) == null || (_theme$components = _theme$components[name]) == null ? void 0 : _theme$components.variants;\n  return variantsResolver(props, styles, themeVariants);\n};\n\n// Update /system/styled/#api in case if this changes\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\nconst lowercaseFirstLetter = string => {\n  if (!string) {\n    return string;\n  }\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\nfunction resolveTheme({\n  defaultTheme,\n  theme,\n  themeId\n}) {\n  return isEmpty(theme) ? defaultTheme : theme[themeId] || theme;\n}\nfunction defaultOverridesResolver(slot) {\n  if (!slot) {\n    return null;\n  }\n  return (props, styles) => styles[slot];\n}\nconst muiStyledFunctionResolver = ({\n  styledArg,\n  props,\n  defaultTheme,\n  themeId\n}) => {\n  const resolvedStyles = styledArg(_extends({}, props, {\n    theme: resolveTheme(_extends({}, props, {\n      defaultTheme,\n      themeId\n    }))\n  }));\n  let optionalVariants;\n  if (resolvedStyles && resolvedStyles.variants) {\n    optionalVariants = resolvedStyles.variants;\n    delete resolvedStyles.variants;\n  }\n  if (optionalVariants) {\n    const variantsStyles = variantsResolver(props, transformVariants(optionalVariants), optionalVariants);\n    return [resolvedStyles, ...variantsStyles];\n  }\n  return resolvedStyles;\n};\nexport default function createStyled(input = {}) {\n  const {\n    themeId,\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  const systemSx = props => {\n    return styleFunctionSx(_extends({}, props, {\n      theme: resolveTheme(_extends({}, props, {\n        defaultTheme,\n        themeId\n      }))\n    }));\n  };\n  systemSx.__mui_systemSx = true;\n  return (tag, inputOptions = {}) => {\n    // Filter out the `sx` style function from the previous styled component to prevent unnecessary styles generated by the composite components.\n    processStyles(tag, styles => styles.filter(style => !(style != null && style.__mui_systemSx)));\n    const {\n        name: componentName,\n        slot: componentSlot,\n        skipVariantsResolver: inputSkipVariantsResolver,\n        skipSx: inputSkipSx,\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        overridesResolver = defaultOverridesResolver(lowercaseFirstLetter(componentSlot))\n      } = inputOptions,\n      options = _objectWithoutPropertiesLoose(inputOptions, _excluded);\n\n    // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver :\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    componentSlot && componentSlot !== 'Root' && componentSlot !== 'root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        // TODO v6: remove `lowercaseFirstLetter()` in the next major release\n        // For more details: https://github.com/mui/material-ui/pull/37908\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n    let shouldForwardPropOption = shouldForwardProp;\n\n    // TODO v6: remove `Root` in the next major release\n    // For more details: https://github.com/mui/material-ui/pull/37908\n    if (componentSlot === 'Root' || componentSlot === 'root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    } else if (isStringTag(tag)) {\n      // for string (html) tag, preserve the behavior in emotion & styled-components.\n      shouldForwardPropOption = undefined;\n    }\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n        // component stays as a function. This condition makes sure that we do not interpolate functions\n        // which are basically components used as a selectors.\n        if (typeof stylesArg === 'function' && stylesArg.__emotion_real !== stylesArg) {\n          return props => muiStyledFunctionResolver({\n            styledArg: stylesArg,\n            props,\n            defaultTheme,\n            themeId\n          });\n        }\n        if (isPlainObject(stylesArg)) {\n          let transformedStylesArg = stylesArg;\n          let styledArgVariants;\n          if (stylesArg && stylesArg.variants) {\n            styledArgVariants = stylesArg.variants;\n            delete transformedStylesArg.variants;\n            transformedStylesArg = props => {\n              let result = stylesArg;\n              const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);\n              variantStyles.forEach(variantStyle => {\n                result = deepmerge(result, variantStyle);\n              });\n              return result;\n            };\n          }\n          return transformedStylesArg;\n        }\n        return stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n      if (isPlainObject(styleArg)) {\n        let styledArgVariants;\n        if (styleArg && styleArg.variants) {\n          styledArgVariants = styleArg.variants;\n          delete transformedStyleArg.variants;\n          transformedStyleArg = props => {\n            let result = styleArg;\n            const variantStyles = variantsResolver(props, transformVariants(styledArgVariants), styledArgVariants);\n            variantStyles.forEach(variantStyle => {\n              result = deepmerge(result, variantStyle);\n            });\n            return result;\n          };\n        }\n      } else if (typeof styleArg === 'function' &&\n      // On the server Emotion doesn't use React.forwardRef for creating components, so the created\n      // component stays as a function. This condition makes sure that we do not interpolate functions\n      // which are basically components used as a selectors.\n      styleArg.__emotion_real !== styleArg) {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = props => muiStyledFunctionResolver({\n          styledArg: styleArg,\n          props,\n          defaultTheme,\n          themeId\n        });\n      }\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          const styleOverrides = getStyleOverrides(componentName, theme);\n          if (styleOverrides) {\n            const resolvedStyleOverrides = {};\n            Object.entries(styleOverrides).forEach(([slotKey, slotStyle]) => {\n              resolvedStyleOverrides[slotKey] = typeof slotStyle === 'function' ? slotStyle(_extends({}, props, {\n                theme\n              })) : slotStyle;\n            });\n            return overridesResolver(props, resolvedStyleOverrides);\n          }\n          return null;\n        });\n      }\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = resolveTheme(_extends({}, props, {\n            defaultTheme,\n            themeId\n          }));\n          return themeVariantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(systemSx);\n      }\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill('');\n        // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      }\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n        if (componentName) {\n          displayName = `${componentName}${capitalize(componentSlot || '')}`;\n        }\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n        Component.displayName = displayName;\n      }\n      if (tag.muiName) {\n        Component.muiName = tag.muiName;\n      }\n      return Component;\n    };\n    if (defaultStyledResolver.withConfig) {\n      muiStyledResolver.withConfig = defaultStyledResolver.withConfig;\n    }\n    return muiStyledResolver;\n  };\n}"]},"metadata":{},"sourceType":"module"}