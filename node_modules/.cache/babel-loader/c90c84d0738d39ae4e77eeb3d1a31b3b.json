{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst RuntimeModule = require(\"../RuntimeModule\");\n\nconst Template = require(\"../Template\");\n\nconst {\n  chunkHasJs,\n  getChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\n\nconst {\n  getInitialChunkIds\n} = require(\"../javascript/StartupHelpers\");\n\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\n\nconst {\n  getUndoPath\n} = require(\"../util/identifier\");\n/** @typedef {import(\"../Chunk\")} Chunk */\n\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n\n/** @typedef {import(\"../Compilation\")} Compilation */\n\n\nclass ReadFileChunkLoadingRuntimeModule extends RuntimeModule {\n  /**\n   * @param {ReadonlySet<string>} runtimeRequirements runtime requirements\n   */\n  constructor(runtimeRequirements) {\n    super(\"readFile chunk loading\", RuntimeModule.STAGE_ATTACH);\n    this.runtimeRequirements = runtimeRequirements;\n  }\n  /**\n   * @private\n   * @param {Chunk} chunk chunk\n   * @param {string} rootOutputDir root output directory\n   * @returns {string} generated code\n   */\n\n\n  _generateBaseUri(chunk, rootOutputDir) {\n    const options = chunk.getEntryOptions();\n\n    if (options && options.baseUri) {\n      return `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n    }\n\n    return `${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${rootOutputDir ? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}` : \"__filename\"});`;\n  }\n  /**\n   * @returns {string | null} runtime code\n   */\n\n\n  generate() {\n    const compilation =\n    /** @type {Compilation} */\n    this.compilation;\n    const chunkGraph =\n    /** @type {ChunkGraph} */\n    this.chunkGraph;\n    const chunk =\n    /** @type {Chunk} */\n    this.chunk;\n    const {\n      runtimeTemplate\n    } = compilation;\n    const fn = RuntimeGlobals.ensureChunkHandlers;\n    const withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n    const withExternalInstallChunk = this.runtimeRequirements.has(RuntimeGlobals.externalInstallChunk);\n    const withOnChunkLoad = this.runtimeRequirements.has(RuntimeGlobals.onChunksLoaded);\n    const withLoading = this.runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers);\n    const withHmr = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n    const withHmrManifest = this.runtimeRequirements.has(RuntimeGlobals.hmrDownloadManifest);\n    const conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n    const hasJsMatcher = compileBooleanMatcher(conditionMap);\n    const initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n    const outputName = compilation.getPath(getChunkFilenameTemplate(chunk, compilation.outputOptions), {\n      chunk,\n      contentHashType: \"javascript\"\n    });\n    const rootOutputDir = getUndoPath(outputName,\n    /** @type {string} */\n    compilation.outputOptions.path, false);\n    const stateExpression = withHmr ? `${RuntimeGlobals.hmrRuntimeStatePrefix}_readFileVm` : undefined;\n    return Template.asString([withBaseURI ? this._generateBaseUri(chunk, rootOutputDir) : \"// no baseURI\", \"\", \"// object to store loaded chunks\", '// \"0\" means \"already loaded\", Promise means loading', `var installedChunks = ${stateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"}{`, Template.indent(Array.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}.readFileVm = ${runtimeTemplate.returningFunction(\"installedChunks[chunkId] === 0\", \"chunkId\")};` : \"// no on chunks loaded\", \"\", withLoading || withExternalInstallChunk ? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\", \"for(var moduleId in moreModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`, Template.indent([`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`]), \"}\"]), \"}\", `if(runtime) runtime(${RuntimeGlobals.require});`, \"for(var i = 0; i < chunkIds.length; i++) {\", Template.indent([\"if(installedChunks[chunkIds[i]]) {\", Template.indent([\"installedChunks[chunkIds[i]][0]();\"]), \"}\", \"installedChunks[chunkIds[i]] = 0;\"]), \"}\", withOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"])};` : \"// no chunk install function needed\", \"\", withLoading ? Template.asString([\"// ReadFile + VM.run chunk loading for javascript\", `${fn}.readFileVm = function(chunkId, promises) {`, hasJsMatcher !== false ? Template.indent([\"\", \"var installedChunkData = installedChunks[chunkId];\", 'if(installedChunkData !== 0) { // 0 means \"already installed\".', Template.indent(['// array of [resolve, reject, promise] means \"currently loading\"', \"if(installedChunkData) {\", Template.indent([\"promises.push(installedChunkData[2]);\"]), \"} else {\", Template.indent([hasJsMatcher === true ? \"if(true) { // all chunks have JS\" : `if(${hasJsMatcher(\"chunkId\")}) {`, Template.indent([\"// load the chunk and return promise to it\", \"var promise = new Promise(function(resolve, reject) {\", Template.indent([\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\", `var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkScriptFilename}(chunkId));`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) return reject(err);\", \"var chunk = {};\", \"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" + \"(chunk, require, require('path').dirname(filename), filename);\", \"installChunk(chunk);\"]), \"});\"]), \"});\", \"promises.push(installedChunkData[2] = promise);\"]), hasJsMatcher === true ? \"}\" : \"} else installedChunks[chunkId] = 0;\"]), \"}\"]), \"}\"]) : Template.indent([\"installedChunks[chunkId] = 0;\"]), \"};\"]) : \"// no chunk loading\", \"\", withExternalInstallChunk ? Template.asString([`module.exports = ${RuntimeGlobals.require};`, `${RuntimeGlobals.externalInstallChunk} = installChunk;`]) : \"// no external install chunk\", \"\", withHmr ? Template.asString([\"function loadUpdateChunk(chunkId, updatedModulesList) {\", Template.indent([\"return new Promise(function(resolve, reject) {\", Template.indent([`var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId));`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) return reject(err);\", \"var update = {};\", \"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" + \"(update, require, require('path').dirname(filename), filename);\", \"var updatedModules = update.modules;\", \"var runtime = update.runtime;\", \"for(var moduleId in updatedModules) {\", Template.indent([`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`, Template.indent([`currentUpdate[moduleId] = updatedModules[moduleId];`, \"if(updatedModulesList) updatedModulesList.push(moduleId);\"]), \"}\"]), \"}\", \"if(runtime) currentUpdateRuntime.push(runtime);\", \"resolve();\"]), \"});\"]), \"});\"]), \"}\", \"\", Template.getFunctionContent(require(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")).replace(/\\$key\\$/g, \"readFileVm\").replace(/\\$installedChunks\\$/g, \"installedChunks\").replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\").replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache).replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories).replace(/\\$ensureChunkHandlers\\$/g, RuntimeGlobals.ensureChunkHandlers).replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty).replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData).replace(/\\$hmrDownloadUpdateHandlers\\$/g, RuntimeGlobals.hmrDownloadUpdateHandlers).replace(/\\$hmrInvalidateModuleHandlers\\$/g, RuntimeGlobals.hmrInvalidateModuleHandlers)]) : \"// no HMR\", \"\", withHmrManifest ? Template.asString([`${RuntimeGlobals.hmrDownloadManifest} = function() {`, Template.indent([\"return new Promise(function(resolve, reject) {\", Template.indent([`var filename = require('path').join(__dirname, ${JSON.stringify(rootOutputDir)} + ${RuntimeGlobals.getUpdateManifestFilename}());`, \"require('fs').readFile(filename, 'utf-8', function(err, content) {\", Template.indent([\"if(err) {\", Template.indent(['if(err.code === \"ENOENT\") return resolve();', \"return reject(err);\"]), \"}\", \"try { resolve(JSON.parse(content)); }\", \"catch(e) { reject(e); }\"]), \"});\"]), \"});\"]), \"}\"]) : \"// no HMR manifest\"]);\n  }\n\n}\n\nmodule.exports = ReadFileChunkLoadingRuntimeModule;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/node/ReadFileChunkLoadingRuntimeModule.js"],"names":["RuntimeGlobals","require","RuntimeModule","Template","chunkHasJs","getChunkFilenameTemplate","getInitialChunkIds","compileBooleanMatcher","getUndoPath","ReadFileChunkLoadingRuntimeModule","constructor","runtimeRequirements","STAGE_ATTACH","_generateBaseUri","chunk","rootOutputDir","options","getEntryOptions","baseUri","baseURI","JSON","stringify","generate","compilation","chunkGraph","runtimeTemplate","fn","ensureChunkHandlers","withBaseURI","has","withExternalInstallChunk","externalInstallChunk","withOnChunkLoad","onChunksLoaded","withLoading","withHmr","hmrDownloadUpdateHandlers","withHmrManifest","hmrDownloadManifest","conditionMap","getChunkConditionMap","hasJsMatcher","initialChunkIds","outputName","getPath","outputOptions","contentHashType","path","stateExpression","hmrRuntimeStatePrefix","undefined","asString","indent","Array","from","id","join","returningFunction","basicFunction","hasOwnProperty","moduleFactories","getChunkScriptFilename","getChunkUpdateScriptFilename","getFunctionContent","replace","moduleCache","hmrModuleData","hmrInvalidateModuleHandlers","getUpdateManifestFilename","module","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst RuntimeModule = require(\"../RuntimeModule\");\nconst Template = require(\"../Template\");\nconst {\n\tchunkHasJs,\n\tgetChunkFilenameTemplate\n} = require(\"../javascript/JavascriptModulesPlugin\");\nconst { getInitialChunkIds } = require(\"../javascript/StartupHelpers\");\nconst compileBooleanMatcher = require(\"../util/compileBooleanMatcher\");\nconst { getUndoPath } = require(\"../util/identifier\");\n\n/** @typedef {import(\"../Chunk\")} Chunk */\n/** @typedef {import(\"../ChunkGraph\")} ChunkGraph */\n/** @typedef {import(\"../Compilation\")} Compilation */\n\nclass ReadFileChunkLoadingRuntimeModule extends RuntimeModule {\n\t/**\n\t * @param {ReadonlySet<string>} runtimeRequirements runtime requirements\n\t */\n\tconstructor(runtimeRequirements) {\n\t\tsuper(\"readFile chunk loading\", RuntimeModule.STAGE_ATTACH);\n\t\tthis.runtimeRequirements = runtimeRequirements;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Chunk} chunk chunk\n\t * @param {string} rootOutputDir root output directory\n\t * @returns {string} generated code\n\t */\n\t_generateBaseUri(chunk, rootOutputDir) {\n\t\tconst options = chunk.getEntryOptions();\n\t\tif (options && options.baseUri) {\n\t\t\treturn `${RuntimeGlobals.baseURI} = ${JSON.stringify(options.baseUri)};`;\n\t\t}\n\n\t\treturn `${RuntimeGlobals.baseURI} = require(\"url\").pathToFileURL(${\n\t\t\trootOutputDir\n\t\t\t\t? `__dirname + ${JSON.stringify(\"/\" + rootOutputDir)}`\n\t\t\t\t: \"__filename\"\n\t\t});`;\n\t}\n\n\t/**\n\t * @returns {string | null} runtime code\n\t */\n\tgenerate() {\n\t\tconst compilation = /** @type {Compilation} */ (this.compilation);\n\t\tconst chunkGraph = /** @type {ChunkGraph} */ (this.chunkGraph);\n\t\tconst chunk = /** @type {Chunk} */ (this.chunk);\n\t\tconst { runtimeTemplate } = compilation;\n\t\tconst fn = RuntimeGlobals.ensureChunkHandlers;\n\t\tconst withBaseURI = this.runtimeRequirements.has(RuntimeGlobals.baseURI);\n\t\tconst withExternalInstallChunk = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.externalInstallChunk\n\t\t);\n\t\tconst withOnChunkLoad = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t);\n\t\tconst withLoading = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t);\n\t\tconst withHmr = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t);\n\t\tconst withHmrManifest = this.runtimeRequirements.has(\n\t\t\tRuntimeGlobals.hmrDownloadManifest\n\t\t);\n\t\tconst conditionMap = chunkGraph.getChunkConditionMap(chunk, chunkHasJs);\n\t\tconst hasJsMatcher = compileBooleanMatcher(conditionMap);\n\t\tconst initialChunkIds = getInitialChunkIds(chunk, chunkGraph, chunkHasJs);\n\n\t\tconst outputName = compilation.getPath(\n\t\t\tgetChunkFilenameTemplate(chunk, compilation.outputOptions),\n\t\t\t{\n\t\t\t\tchunk,\n\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t}\n\t\t);\n\t\tconst rootOutputDir = getUndoPath(\n\t\t\toutputName,\n\t\t\t/** @type {string} */ (compilation.outputOptions.path),\n\t\t\tfalse\n\t\t);\n\n\t\tconst stateExpression = withHmr\n\t\t\t? `${RuntimeGlobals.hmrRuntimeStatePrefix}_readFileVm`\n\t\t\t: undefined;\n\n\t\treturn Template.asString([\n\t\t\twithBaseURI\n\t\t\t\t? this._generateBaseUri(chunk, rootOutputDir)\n\t\t\t\t: \"// no baseURI\",\n\t\t\t\"\",\n\t\t\t\"// object to store loaded chunks\",\n\t\t\t'// \"0\" means \"already loaded\", Promise means loading',\n\t\t\t`var installedChunks = ${\n\t\t\t\tstateExpression ? `${stateExpression} = ${stateExpression} || ` : \"\"\n\t\t\t}{`,\n\t\t\tTemplate.indent(\n\t\t\t\tArray.from(initialChunkIds, id => `${JSON.stringify(id)}: 0`).join(\n\t\t\t\t\t\",\\n\"\n\t\t\t\t)\n\t\t\t),\n\t\t\t\"};\",\n\t\t\t\"\",\n\t\t\twithOnChunkLoad\n\t\t\t\t? `${\n\t\t\t\t\t\tRuntimeGlobals.onChunksLoaded\n\t\t\t\t  }.readFileVm = ${runtimeTemplate.returningFunction(\n\t\t\t\t\t\t\"installedChunks[chunkId] === 0\",\n\t\t\t\t\t\t\"chunkId\"\n\t\t\t\t  )};`\n\t\t\t\t: \"// no on chunks loaded\",\n\t\t\t\"\",\n\t\t\twithLoading || withExternalInstallChunk\n\t\t\t\t? `var installChunk = ${runtimeTemplate.basicFunction(\"chunk\", [\n\t\t\t\t\t\t\"var moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\",\n\t\t\t\t\t\t\"for(var moduleId in moreModules) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(moreModules, moduleId)) {`,\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`${RuntimeGlobals.moduleFactories}[moduleId] = moreModules[moduleId];`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t`if(runtime) runtime(${RuntimeGlobals.require});`,\n\t\t\t\t\t\t\"for(var i = 0; i < chunkIds.length; i++) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"if(installedChunks[chunkIds[i]]) {\",\n\t\t\t\t\t\t\tTemplate.indent([\"installedChunks[chunkIds[i]][0]();\"]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"installedChunks[chunkIds[i]] = 0;\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\twithOnChunkLoad ? `${RuntimeGlobals.onChunksLoaded}();` : \"\"\n\t\t\t\t  ])};`\n\t\t\t\t: \"// no chunk install function needed\",\n\t\t\t\"\",\n\t\t\twithLoading\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"// ReadFile + VM.run chunk loading for javascript\",\n\t\t\t\t\t\t`${fn}.readFileVm = function(chunkId, promises) {`,\n\t\t\t\t\t\thasJsMatcher !== false\n\t\t\t\t\t\t\t? Template.indent([\n\t\t\t\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t\t\t\t\"var installedChunkData = installedChunks[chunkId];\",\n\t\t\t\t\t\t\t\t\t'if(installedChunkData !== 0) { // 0 means \"already installed\".',\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t'// array of [resolve, reject, promise] means \"currently loading\"',\n\t\t\t\t\t\t\t\t\t\t\"if(installedChunkData) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\"promises.push(installedChunkData[2]);\"]),\n\t\t\t\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"if(true) { // all chunks have JS\"\n\t\t\t\t\t\t\t\t\t\t\t\t: `if(${hasJsMatcher(\"chunkId\")}) {`,\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"// load the chunk and return promise to it\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"var promise = new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"installedChunkData = installedChunks[chunkId] = [resolve, reject];\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t\t\t\t\t\t)} + ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tRuntimeGlobals.getChunkScriptFilename\n\t\t\t\t\t\t\t\t\t\t\t\t\t}(chunkId));`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"if(err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"var chunk = {};\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"(chunk, require, require('path').dirname(filename), filename);\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"installChunk(chunk);\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\"});\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"promises.push(installedChunkData[2] = promise);\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\thasJsMatcher === true\n\t\t\t\t\t\t\t\t\t\t\t\t? \"}\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"} else installedChunks[chunkId] = 0;\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t: Template.indent([\"installedChunks[chunkId] = 0;\"]),\n\t\t\t\t\t\t\"};\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no chunk loading\",\n\t\t\t\"\",\n\t\t\twithExternalInstallChunk\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`module.exports = ${RuntimeGlobals.require};`,\n\t\t\t\t\t\t`${RuntimeGlobals.externalInstallChunk} = installChunk;`\n\t\t\t\t  ])\n\t\t\t\t: \"// no external install chunk\",\n\t\t\t\"\",\n\t\t\twithHmr\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\"function loadUpdateChunk(chunkId, updatedModulesList) {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t)} + ${RuntimeGlobals.getChunkUpdateScriptFilename}(chunkId));`,\n\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if(err) return reject(err);\",\n\t\t\t\t\t\t\t\t\t\"var update = {};\",\n\t\t\t\t\t\t\t\t\t\"require('vm').runInThisContext('(function(exports, require, __dirname, __filename) {' + content + '\\\\n})', filename)\" +\n\t\t\t\t\t\t\t\t\t\t\"(update, require, require('path').dirname(filename), filename);\",\n\t\t\t\t\t\t\t\t\t\"var updatedModules = update.modules;\",\n\t\t\t\t\t\t\t\t\t\"var runtime = update.runtime;\",\n\t\t\t\t\t\t\t\t\t\"for(var moduleId in updatedModules) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t`if(${RuntimeGlobals.hasOwnProperty}(updatedModules, moduleId)) {`,\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t`currentUpdate[moduleId] = updatedModules[moduleId];`,\n\t\t\t\t\t\t\t\t\t\t\t\"if(updatedModulesList) updatedModulesList.push(moduleId);\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"}\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"if(runtime) currentUpdateRuntime.push(runtime);\",\n\t\t\t\t\t\t\t\t\t\"resolve();\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\tTemplate.getFunctionContent(\n\t\t\t\t\t\t\trequire(\"../hmr/JavascriptHotModuleReplacement.runtime.js\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$key\\$/g, \"readFileVm\")\n\t\t\t\t\t\t\t.replace(/\\$installedChunks\\$/g, \"installedChunks\")\n\t\t\t\t\t\t\t.replace(/\\$loadUpdateChunk\\$/g, \"loadUpdateChunk\")\n\t\t\t\t\t\t\t.replace(/\\$moduleCache\\$/g, RuntimeGlobals.moduleCache)\n\t\t\t\t\t\t\t.replace(/\\$moduleFactories\\$/g, RuntimeGlobals.moduleFactories)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$ensureChunkHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.ensureChunkHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(/\\$hasOwnProperty\\$/g, RuntimeGlobals.hasOwnProperty)\n\t\t\t\t\t\t\t.replace(/\\$hmrModuleData\\$/g, RuntimeGlobals.hmrModuleData)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrDownloadUpdateHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrDownloadUpdateHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t/\\$hmrInvalidateModuleHandlers\\$/g,\n\t\t\t\t\t\t\t\tRuntimeGlobals.hmrInvalidateModuleHandlers\n\t\t\t\t\t\t\t)\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR\",\n\t\t\t\"\",\n\t\t\twithHmrManifest\n\t\t\t\t? Template.asString([\n\t\t\t\t\t\t`${RuntimeGlobals.hmrDownloadManifest} = function() {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\"return new Promise(function(resolve, reject) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`var filename = require('path').join(__dirname, ${JSON.stringify(\n\t\t\t\t\t\t\t\t\trootOutputDir\n\t\t\t\t\t\t\t\t)} + ${RuntimeGlobals.getUpdateManifestFilename}());`,\n\t\t\t\t\t\t\t\t\"require('fs').readFile(filename, 'utf-8', function(err, content) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\"if(err) {\",\n\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t'if(err.code === \"ENOENT\") return resolve();',\n\t\t\t\t\t\t\t\t\t\t\"return reject(err);\"\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\t\t\"try { resolve(JSON.parse(content)); }\",\n\t\t\t\t\t\t\t\t\t\"catch(e) { reject(e); }\"\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t  ])\n\t\t\t\t: \"// no HMR manifest\"\n\t\t]);\n\t}\n}\n\nmodule.exports = ReadFileChunkLoadingRuntimeModule;\n"]},"metadata":{},"sourceType":"script"}