{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as FilesAPI from 'openai/resources/beta/threads/messages/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Files extends APIResource {\n  /**\n   * Retrieves a message file.\n   */\n  retrieve(threadId, messageId, fileId, options) {\n    return this.get(`/threads/${threadId}/messages/${messageId}/files/${fileId}`, { ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n\n  list(threadId, messageId) {\n    let query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 ? arguments[3] : undefined;\n\n    if (isRequestOptions(query)) {\n      return this.list(threadId, messageId, {}, query);\n    }\n\n    return this.getAPIList(`/threads/${threadId}/messages/${messageId}/files`, MessageFilesPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n\n}\nexport class MessageFilesPage extends CursorPage {}\n\n(function (Files) {\n  Files.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Files || (Files = {}));","map":{"version":3,"mappings":"AAAA;SAGSA,mBAAmB;SACnBC,wBAAwB;OAC1B,KAAKC,cAAc;SACjBC,kBAAyC;AAElD,OAAM,MAAOC,KAAP,SAAqBJ,WAArB,CAAgC;AACpC;;;AAGAK,UAAQ,CACNC,QADM,EAENC,SAFM,EAGNC,MAHM,EAINC,OAJM,EAIuB;AAE7B,WAAO,KAAKC,GAAL,CAAS,YAAYJ,QAAQ,aAAaC,SAAS,UAAUC,MAAM,EAAnE,EAAuE,EAC5E,GAAGC,OADyE;AAE5EE,aAAO,EAAE;AAAE,uBAAe,eAAjB;AAAkC,WAAGF,OAAO,EAAEE;AAA9C;AAFmE,KAAvE,CAAP;AAID;;AAgBDC,MAAI,CACFN,QADE,EAEFC,SAFE,EAI2B;AAAA,QAD7BM,KAC6B,uEADiB,EACjB;AAAA,QAA7BJ,OAA6B;;AAE7B,QAAIR,gBAAgB,CAACY,KAAD,CAApB,EAA6B;AAC3B,aAAO,KAAKD,IAAL,CAAUN,QAAV,EAAoBC,SAApB,EAA+B,EAA/B,EAAmCM,KAAnC,CAAP;AACD;;AACD,WAAO,KAAKC,UAAL,CAAgB,YAAYR,QAAQ,aAAaC,SAAS,QAA1D,EAAoEQ,gBAApE,EAAsF;AAC3FF,WAD2F;AAE3F,SAAGJ,OAFwF;AAG3FE,aAAO,EAAE;AAAE,uBAAe,eAAjB;AAAkC,WAAGF,OAAO,EAAEE;AAA9C;AAHkF,KAAtF,CAAP;AAKD;;AA5CmC;AA+CtC,OAAM,MAAOI,gBAAP,SAAgCZ,UAAhC,CAAuD;;AA6C7D,WAAiBC,KAAjB,EAAsB;AAENA,2BAAmBF,QAAQ,CAACa,gBAA5B;AAEf,CAJD,EAAiBX,KAAK,KAALA,KAAK,MAAtB","names":["APIResource","isRequestOptions","FilesAPI","CursorPage","Files","retrieve","threadId","messageId","fileId","options","get","headers","list","query","getAPIList","MessageFilesPage"],"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/openai/src/resources/beta/threads/messages/files.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from \"../../../../core\";\nimport { APIResource } from \"../../../../resource\";\nimport { isRequestOptions } from \"../../../../core\";\nimport * as FilesAPI from \"./files\";\nimport { CursorPage, type CursorPageParams } from \"../../../../pagination\";\n\nexport class Files extends APIResource {\n  /**\n   * Retrieves a message file.\n   */\n  retrieve(\n    threadId: string,\n    messageId: string,\n    fileId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<MessageFile> {\n    return this.get(`/threads/${threadId}/messages/${messageId}/files/${fileId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of message files.\n   */\n  list(\n    threadId: string,\n    messageId: string,\n    query?: FileListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<MessageFilesPage, MessageFile>;\n  list(\n    threadId: string,\n    messageId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<MessageFilesPage, MessageFile>;\n  list(\n    threadId: string,\n    messageId: string,\n    query: FileListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<MessageFilesPage, MessageFile> {\n    if (isRequestOptions(query)) {\n      return this.list(threadId, messageId, {}, query);\n    }\n    return this.getAPIList(`/threads/${threadId}/messages/${messageId}/files`, MessageFilesPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n}\n\nexport class MessageFilesPage extends CursorPage<MessageFile> {}\n\n/**\n * A list of files attached to a `message`.\n */\nexport interface MessageFile {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the message file was created.\n   */\n  created_at: number;\n\n  /**\n   * The ID of the [message](https://platform.openai.com/docs/api-reference/messages)\n   * that the [File](https://platform.openai.com/docs/api-reference/files) is\n   * attached to.\n   */\n  message_id: string;\n\n  /**\n   * The object type, which is always `thread.message.file`.\n   */\n  object: 'thread.message.file';\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * ending with obj_foo, your subsequent call can include before=obj_foo in order to\n   * fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport namespace Files {\n  export import MessageFile = FilesAPI.MessageFile;\n  export import MessageFilesPage = FilesAPI.MessageFilesPage;\n  export import FileListParams = FilesAPI.FileListParams;\n}\n"]},"metadata":{},"sourceType":"module"}