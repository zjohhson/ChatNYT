{"ast":null,"code":"var _jsxFileName = \"/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/InstructionModel.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Icon } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InstructionModal() {\n  _s();\n\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  if (show) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"welcomeModal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"corner\",\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            style: {\n              color: \"black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"instruction\",\n          children: \"Welcome to Chat-NYT, a version of NYT's Wordle, with a Generative AI twist!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\",\n          children: \"You have to guess the wordle in 6 tries.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\",\n          children: \"Each guess must be a valid 5-letter word.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\",\n          children: \"The color of the tiles will change to show how close your guess was to the word.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"instruction\",\n          children: \"If you need assistance, you can click the OpenAI logo to ask ChatGPT for help. ChatGPT will connect your most recent guess to the correct wordle.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          className: \"instruction\",\n          children: \"You can only use the ChatGPT assistance 1 time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(InstructionModal, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n_c = InstructionModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"InstructionModal\");","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/InstructionModel.js"],"names":["React","useEffect","useState","Button","CloseIcon","Icon","InstructionModal","show","setShow","handleClose","handleShow","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AACA,eAAe,SAASC,gBAAT,GAA4B;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMO,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AACA,MAAID,IAAJ,EAAU;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA,gCACA,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEE,WAApC;AAAA,iCACM,QAAC,SAAD;AAAW,YAAA,KAAK,EAAE;AAAEE,cAAAA,KAAK,EAAE;AAAT;AAAlB;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,gBADA,eAIE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBD,MAiBK;AACD,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ;;GA1BuBL,gB;;KAAAA,gB","sourcesContent":["import React from 'react'\nimport { useEffect, useState } from 'react'\nimport Button from '@mui/material/Button';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Icon } from \"@material-ui/core\";\nexport default function InstructionModal() {\n    const [show, setShow] = useState(true);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    if (show) {  \n        return (\n            <div className=\"welcomeModal\">\n              <div>\n              <Button className=\"corner\" onClick={handleClose}>\n                    <CloseIcon style={{ color: \"black\" }}/>\n                </Button>\n                <h2 className='instruction'>Welcome to Chat-NYT, a version of NYT's Wordle, with a Generative AI twist!</h2>\n                <p className='instruction'>You have to guess the wordle in 6 tries.</p>\n                <p className='instruction'>Each guess must be a valid 5-letter word.</p>\n                <p className='instruction'>The color of the tiles will change to show how close your guess was to the word.</p>\n                <p className='instruction'>If you need assistance, you can click the OpenAI logo to ask ChatGPT for help. ChatGPT will connect your most recent guess to the correct wordle.</p>\n                <b className='instruction'>You can only use the ChatGPT assistance 1 time.</b>\n              </div>\n            </div>\n          )\n    }\n    else {\n        return (\n            <div></div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}