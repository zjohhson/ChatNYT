{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeSections = removeSections;\n\nvar _ast = require(\"@webassemblyjs/ast\");\n\nvar _helperBuffer = require(\"@webassemblyjs/helper-buffer\");\n\nfunction removeSections(ast, uint8Buffer, section) {\n  var sectionMetadatas = (0, _ast.getSectionMetadatas)(ast, section);\n\n  if (sectionMetadatas.length === 0) {\n    throw new Error(\"Section metadata not found\");\n  }\n\n  return sectionMetadatas.reverse().reduce(function (uint8Buffer, sectionMetadata) {\n    var startsIncludingId = sectionMetadata.startOffset - 1;\n    var ends = section === \"start\" ? sectionMetadata.size.loc.end.column + 1 : sectionMetadata.startOffset + sectionMetadata.size.value + 1;\n    var delta = -(ends - startsIncludingId);\n    /**\n     * update AST\n     */\n    // Once we hit our section every that is after needs to be shifted by the delta\n\n    var encounteredSection = false;\n    (0, _ast.traverse)(ast, {\n      SectionMetadata: function SectionMetadata(path) {\n        if (path.node.section === section) {\n          encounteredSection = true;\n          return path.remove();\n        }\n\n        if (encounteredSection === true) {\n          (0, _ast.shiftSection)(ast, path.node, delta);\n        }\n      }\n    }); // replacement is nothing\n\n    var replacement = [];\n    return (0, _helperBuffer.overrideBytesInBuffer)(uint8Buffer, startsIncludingId, ends, replacement);\n  }, uint8Buffer);\n}","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/@webassemblyjs/helper-wasm-section/lib/remove.js"],"names":["Object","defineProperty","exports","value","removeSections","_ast","require","_helperBuffer","ast","uint8Buffer","section","sectionMetadatas","getSectionMetadatas","length","Error","reverse","reduce","sectionMetadata","startsIncludingId","startOffset","ends","size","loc","end","column","delta","encounteredSection","traverse","SectionMetadata","path","node","remove","shiftSection","replacement","overrideBytesInBuffer"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBA,cAAzB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,oBAAD,CAAlB;;AAEA,IAAIC,aAAa,GAAGD,OAAO,CAAC,8BAAD,CAA3B;;AAEA,SAASF,cAAT,CAAwBI,GAAxB,EAA6BC,WAA7B,EAA0CC,OAA1C,EAAmD;AACjD,MAAIC,gBAAgB,GAAG,CAAC,GAAGN,IAAI,CAACO,mBAAT,EAA8BJ,GAA9B,EAAmCE,OAAnC,CAAvB;;AAEA,MAAIC,gBAAgB,CAACE,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,UAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,SAAOH,gBAAgB,CAACI,OAAjB,GAA2BC,MAA3B,CAAkC,UAAUP,WAAV,EAAuBQ,eAAvB,EAAwC;AAC/E,QAAIC,iBAAiB,GAAGD,eAAe,CAACE,WAAhB,GAA8B,CAAtD;AACA,QAAIC,IAAI,GAAGV,OAAO,KAAK,OAAZ,GAAsBO,eAAe,CAACI,IAAhB,CAAqBC,GAArB,CAAyBC,GAAzB,CAA6BC,MAA7B,GAAsC,CAA5D,GAAgEP,eAAe,CAACE,WAAhB,GAA8BF,eAAe,CAACI,IAAhB,CAAqBlB,KAAnD,GAA2D,CAAtI;AACA,QAAIsB,KAAK,GAAG,EAAEL,IAAI,GAAGF,iBAAT,CAAZ;AACA;AACJ;AACA;AACI;;AAEA,QAAIQ,kBAAkB,GAAG,KAAzB;AACA,KAAC,GAAGrB,IAAI,CAACsB,QAAT,EAAmBnB,GAAnB,EAAwB;AACtBoB,MAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AAC9C,YAAIA,IAAI,CAACC,IAAL,CAAUpB,OAAV,KAAsBA,OAA1B,EAAmC;AACjCgB,UAAAA,kBAAkB,GAAG,IAArB;AACA,iBAAOG,IAAI,CAACE,MAAL,EAAP;AACD;;AAED,YAAIL,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B,WAAC,GAAGrB,IAAI,CAAC2B,YAAT,EAAuBxB,GAAvB,EAA4BqB,IAAI,CAACC,IAAjC,EAAuCL,KAAvC;AACD;AACF;AAVqB,KAAxB,EAV+E,CAqB3E;;AAEJ,QAAIQ,WAAW,GAAG,EAAlB;AACA,WAAO,CAAC,GAAG1B,aAAa,CAAC2B,qBAAlB,EAAyCzB,WAAzC,EAAsDS,iBAAtD,EAAyEE,IAAzE,EAA+Ea,WAA/E,CAAP;AACD,GAzBM,EAyBJxB,WAzBI,CAAP;AA0BD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.removeSections = removeSections;\n\nvar _ast = require(\"@webassemblyjs/ast\");\n\nvar _helperBuffer = require(\"@webassemblyjs/helper-buffer\");\n\nfunction removeSections(ast, uint8Buffer, section) {\n  var sectionMetadatas = (0, _ast.getSectionMetadatas)(ast, section);\n\n  if (sectionMetadatas.length === 0) {\n    throw new Error(\"Section metadata not found\");\n  }\n\n  return sectionMetadatas.reverse().reduce(function (uint8Buffer, sectionMetadata) {\n    var startsIncludingId = sectionMetadata.startOffset - 1;\n    var ends = section === \"start\" ? sectionMetadata.size.loc.end.column + 1 : sectionMetadata.startOffset + sectionMetadata.size.value + 1;\n    var delta = -(ends - startsIncludingId);\n    /**\n     * update AST\n     */\n    // Once we hit our section every that is after needs to be shifted by the delta\n\n    var encounteredSection = false;\n    (0, _ast.traverse)(ast, {\n      SectionMetadata: function SectionMetadata(path) {\n        if (path.node.section === section) {\n          encounteredSection = true;\n          return path.remove();\n        }\n\n        if (encounteredSection === true) {\n          (0, _ast.shiftSection)(ast, path.node, delta);\n        }\n      }\n    }); // replacement is nothing\n\n    var replacement = [];\n    return (0, _helperBuffer.overrideBytesInBuffer)(uint8Buffer, startsIncludingId, ends, replacement);\n  }, uint8Buffer);\n}"]},"metadata":{},"sourceType":"script"}