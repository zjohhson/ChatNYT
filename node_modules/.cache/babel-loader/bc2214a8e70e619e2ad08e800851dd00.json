{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = decode;\n\nvar decoder = _interopRequireWildcard(require(\"./decoder\"));\n\nvar t = _interopRequireWildcard(require(\"@webassemblyjs/ast\"));\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/**\n * TODO(sven): I added initial props, but we should rather fix\n * https://github.com/xtuc/webassemblyjs/issues/405\n */\n\n\nvar defaultDecoderOpts = {\n  dump: false,\n  ignoreCodeSection: false,\n  ignoreDataSection: false,\n  ignoreCustomNameSection: false\n}; // traverses the AST, locating function name metadata, which is then\n// used to update index-based identifiers with function names\n\nfunction restoreFunctionNames(ast) {\n  var functionNames = [];\n  t.traverse(ast, {\n    FunctionNameMetadata: function FunctionNameMetadata(_ref) {\n      var node = _ref.node;\n      functionNames.push({\n        name: node.value,\n        index: node.index\n      });\n    }\n  });\n\n  if (functionNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func) {\n      function Func(_x) {\n        return _Func.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func.toString();\n      };\n\n      return Func;\n    }(function (_ref2) {\n      var node = _ref2.node; // $FlowIgnore\n\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = nodeName.value;\n        nodeName.value = functionName.name; // $FlowIgnore\n\n        nodeName.numeric = oldValue; // $FlowIgnore\n\n        delete nodeName.raw;\n      }\n    }),\n    // Also update the reference in the export\n    ModuleExport: function (_ModuleExport) {\n      function ModuleExport(_x2) {\n        return _ModuleExport.apply(this, arguments);\n      }\n\n      ModuleExport.toString = function () {\n        return _ModuleExport.toString();\n      };\n\n      return ModuleExport;\n    }(function (_ref3) {\n      var node = _ref3.node;\n\n      if (node.descr.exportType === \"Func\") {\n        // $FlowIgnore\n        var nodeName = node.descr.id;\n        var index = nodeName.value;\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    ModuleImport: function (_ModuleImport) {\n      function ModuleImport(_x3) {\n        return _ModuleImport.apply(this, arguments);\n      }\n\n      ModuleImport.toString = function () {\n        return _ModuleImport.toString();\n      };\n\n      return ModuleImport;\n    }(function (_ref4) {\n      var node = _ref4.node;\n\n      if (node.descr.type === \"FuncImportDescr\") {\n        // $FlowIgnore\n        var indexBasedFunctionName = node.descr.id;\n        var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          // $FlowIgnore\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    CallInstruction: function (_CallInstruction) {\n      function CallInstruction(_x4) {\n        return _CallInstruction.apply(this, arguments);\n      }\n\n      CallInstruction.toString = function () {\n        return _CallInstruction.toString();\n      };\n\n      return CallInstruction;\n    }(function (nodePath) {\n      var node = nodePath.node;\n      var index = node.index.value;\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = node.index;\n        node.index = t.identifier(functionName.name);\n        node.numeric = oldValue; // $FlowIgnore\n\n        delete node.raw;\n      }\n    })\n  });\n}\n\nfunction restoreLocalNames(ast) {\n  var localNames = [];\n  t.traverse(ast, {\n    LocalNameMetadata: function LocalNameMetadata(_ref5) {\n      var node = _ref5.node;\n      localNames.push({\n        name: node.value,\n        localIndex: node.localIndex,\n        functionIndex: node.functionIndex\n      });\n    }\n  });\n\n  if (localNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func2) {\n      function Func(_x5) {\n        return _Func2.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func2.toString();\n      };\n\n      return Func;\n    }(function (_ref6) {\n      var node = _ref6.node;\n      var signature = node.signature;\n\n      if (signature.type !== \"Signature\") {\n        return;\n      } // $FlowIgnore\n\n\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var functionIndex = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      signature.params.forEach(function (param, paramIndex) {\n        var paramName = localNames.find(function (f) {\n          return f.localIndex === paramIndex && f.functionIndex === functionIndex;\n        });\n\n        if (paramName && paramName.name !== \"\") {\n          param.id = paramName.name;\n        }\n      });\n    })\n  });\n}\n\nfunction restoreModuleName(ast) {\n  t.traverse(ast, {\n    ModuleNameMetadata: function (_ModuleNameMetadata) {\n      function ModuleNameMetadata(_x6) {\n        return _ModuleNameMetadata.apply(this, arguments);\n      }\n\n      ModuleNameMetadata.toString = function () {\n        return _ModuleNameMetadata.toString();\n      };\n\n      return ModuleNameMetadata;\n    }(function (moduleNameMetadataPath) {\n      // update module\n      t.traverse(ast, {\n        Module: function (_Module) {\n          function Module(_x7) {\n            return _Module.apply(this, arguments);\n          }\n\n          Module.toString = function () {\n            return _Module.toString();\n          };\n\n          return Module;\n        }(function (_ref7) {\n          var node = _ref7.node;\n          var name = moduleNameMetadataPath.node.value; // compatiblity with wast-parser\n\n          if (name === \"\") {\n            name = null;\n          }\n\n          node.id = name;\n        })\n      });\n    })\n  });\n}\n\nfunction decode(buf, customOpts) {\n  var opts = Object.assign({}, defaultDecoderOpts, customOpts);\n  var ast = decoder.decode(buf, opts);\n\n  if (opts.ignoreCustomNameSection === false) {\n    restoreFunctionNames(ast);\n    restoreLocalNames(ast);\n    restoreModuleName(ast);\n  }\n\n  return ast;\n}","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/@webassemblyjs/wasm-parser/lib/index.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","decode","decoder","_interopRequireWildcard","require","t","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","defaultDecoderOpts","dump","ignoreCodeSection","ignoreDataSection","ignoreCustomNameSection","restoreFunctionNames","ast","functionNames","traverse","FunctionNameMetadata","_ref","node","push","name","index","length","Func","_Func","_x","apply","arguments","toString","_ref2","nodeName","indexBasedFunctionName","Number","replace","functionName","find","f","oldValue","numeric","raw","ModuleExport","_ModuleExport","_x2","_ref3","descr","exportType","id","identifier","ModuleImport","_ModuleImport","_x3","_ref4","type","CallInstruction","_CallInstruction","_x4","nodePath","restoreLocalNames","localNames","LocalNameMetadata","_ref5","localIndex","functionIndex","_Func2","_x5","_ref6","signature","params","forEach","param","paramIndex","paramName","restoreModuleName","ModuleNameMetadata","_ModuleNameMetadata","_x6","moduleNameMetadataPath","Module","_Module","_x7","_ref7","buf","customOpts","opts","assign"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decode = decode;\n\nvar decoder = _interopRequireWildcard(require(\"./decoder\"));\n\nvar t = _interopRequireWildcard(require(\"@webassemblyjs/ast\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/**\n * TODO(sven): I added initial props, but we should rather fix\n * https://github.com/xtuc/webassemblyjs/issues/405\n */\nvar defaultDecoderOpts = {\n  dump: false,\n  ignoreCodeSection: false,\n  ignoreDataSection: false,\n  ignoreCustomNameSection: false\n}; // traverses the AST, locating function name metadata, which is then\n// used to update index-based identifiers with function names\n\nfunction restoreFunctionNames(ast) {\n  var functionNames = [];\n  t.traverse(ast, {\n    FunctionNameMetadata: function FunctionNameMetadata(_ref) {\n      var node = _ref.node;\n      functionNames.push({\n        name: node.value,\n        index: node.index\n      });\n    }\n  });\n\n  if (functionNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func) {\n      function Func(_x) {\n        return _Func.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func.toString();\n      };\n\n      return Func;\n    }(function (_ref2) {\n      var node = _ref2.node;\n      // $FlowIgnore\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = nodeName.value;\n        nodeName.value = functionName.name; // $FlowIgnore\n\n        nodeName.numeric = oldValue; // $FlowIgnore\n\n        delete nodeName.raw;\n      }\n    }),\n    // Also update the reference in the export\n    ModuleExport: function (_ModuleExport) {\n      function ModuleExport(_x2) {\n        return _ModuleExport.apply(this, arguments);\n      }\n\n      ModuleExport.toString = function () {\n        return _ModuleExport.toString();\n      };\n\n      return ModuleExport;\n    }(function (_ref3) {\n      var node = _ref3.node;\n\n      if (node.descr.exportType === \"Func\") {\n        // $FlowIgnore\n        var nodeName = node.descr.id;\n        var index = nodeName.value;\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    ModuleImport: function (_ModuleImport) {\n      function ModuleImport(_x3) {\n        return _ModuleImport.apply(this, arguments);\n      }\n\n      ModuleImport.toString = function () {\n        return _ModuleImport.toString();\n      };\n\n      return ModuleImport;\n    }(function (_ref4) {\n      var node = _ref4.node;\n\n      if (node.descr.type === \"FuncImportDescr\") {\n        // $FlowIgnore\n        var indexBasedFunctionName = node.descr.id;\n        var index = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n        var functionName = functionNames.find(function (f) {\n          return f.index === index;\n        });\n\n        if (functionName) {\n          // $FlowIgnore\n          node.descr.id = t.identifier(functionName.name);\n        }\n      }\n    }),\n    CallInstruction: function (_CallInstruction) {\n      function CallInstruction(_x4) {\n        return _CallInstruction.apply(this, arguments);\n      }\n\n      CallInstruction.toString = function () {\n        return _CallInstruction.toString();\n      };\n\n      return CallInstruction;\n    }(function (nodePath) {\n      var node = nodePath.node;\n      var index = node.index.value;\n      var functionName = functionNames.find(function (f) {\n        return f.index === index;\n      });\n\n      if (functionName) {\n        var oldValue = node.index;\n        node.index = t.identifier(functionName.name);\n        node.numeric = oldValue; // $FlowIgnore\n\n        delete node.raw;\n      }\n    })\n  });\n}\n\nfunction restoreLocalNames(ast) {\n  var localNames = [];\n  t.traverse(ast, {\n    LocalNameMetadata: function LocalNameMetadata(_ref5) {\n      var node = _ref5.node;\n      localNames.push({\n        name: node.value,\n        localIndex: node.localIndex,\n        functionIndex: node.functionIndex\n      });\n    }\n  });\n\n  if (localNames.length === 0) {\n    return;\n  }\n\n  t.traverse(ast, {\n    Func: function (_Func2) {\n      function Func(_x5) {\n        return _Func2.apply(this, arguments);\n      }\n\n      Func.toString = function () {\n        return _Func2.toString();\n      };\n\n      return Func;\n    }(function (_ref6) {\n      var node = _ref6.node;\n      var signature = node.signature;\n\n      if (signature.type !== \"Signature\") {\n        return;\n      } // $FlowIgnore\n\n\n      var nodeName = node.name;\n      var indexBasedFunctionName = nodeName.value;\n      var functionIndex = Number(indexBasedFunctionName.replace(\"func_\", \"\"));\n      signature.params.forEach(function (param, paramIndex) {\n        var paramName = localNames.find(function (f) {\n          return f.localIndex === paramIndex && f.functionIndex === functionIndex;\n        });\n\n        if (paramName && paramName.name !== \"\") {\n          param.id = paramName.name;\n        }\n      });\n    })\n  });\n}\n\nfunction restoreModuleName(ast) {\n  t.traverse(ast, {\n    ModuleNameMetadata: function (_ModuleNameMetadata) {\n      function ModuleNameMetadata(_x6) {\n        return _ModuleNameMetadata.apply(this, arguments);\n      }\n\n      ModuleNameMetadata.toString = function () {\n        return _ModuleNameMetadata.toString();\n      };\n\n      return ModuleNameMetadata;\n    }(function (moduleNameMetadataPath) {\n      // update module\n      t.traverse(ast, {\n        Module: function (_Module) {\n          function Module(_x7) {\n            return _Module.apply(this, arguments);\n          }\n\n          Module.toString = function () {\n            return _Module.toString();\n          };\n\n          return Module;\n        }(function (_ref7) {\n          var node = _ref7.node;\n          var name = moduleNameMetadataPath.node.value; // compatiblity with wast-parser\n\n          if (name === \"\") {\n            name = null;\n          }\n\n          node.id = name;\n        })\n      });\n    })\n  });\n}\n\nfunction decode(buf, customOpts) {\n  var opts = Object.assign({}, defaultDecoderOpts, customOpts);\n  var ast = decoder.decode(buf, opts);\n\n  if (opts.ignoreCustomNameSection === false) {\n    restoreFunctionNames(ast);\n    restoreLocalNames(ast);\n    restoreModuleName(ast);\n  }\n\n  return ast;\n}"]},"metadata":{},"sourceType":"script"}