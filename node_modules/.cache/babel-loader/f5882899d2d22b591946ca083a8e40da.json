{"ast":null,"code":"var _jsxFileName = \"/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useWordle from '../hooks/useWordle'; // components\n\nimport Grid from './Grid';\nimport Keypad from './Keypad';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Wordle(_ref) {\n  _s();\n\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    guesses,\n    turn,\n    isCorrect,\n    usedKeys,\n    handleKeyup\n  } = useWordle(solution);\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyup);\n\n    if (isCorrect) {\n      setTimeout(() => setShowModal(true), 2000);\n      window.removeEventListener('keyup', handleKeyup);\n    }\n\n    if (turn > 5) {\n      setTimeout(() => setShowModal(true), 2000);\n      window.removeEventListener('keyup', handleKeyup);\n    }\n\n    return () => window.removeEventListener('keyup', handleKeyup);\n  }, [handleKeyup, isCorrect, turn]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      guesses: guesses,\n      currentGuess: currentGuess,\n      turn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n      usedKeys: usedKeys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(Modal, {\n      isCorrect: isCorrect,\n      turn: turn,\n      solution: solution\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wordle, \"AnKTB1hAOenP7QYrCVqsgdC1SY8=\", false, function () {\n  return [useWordle];\n});\n\n_c = Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/Wordle.js"],"names":["React","useEffect","useState","useWordle","Grid","Keypad","Modal","Wordle","solution","currentGuess","guesses","turn","isCorrect","usedKeys","handleKeyup","showModal","setShowModal","window","addEventListener","setTimeout","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,SAASC,MAAT,OAA8B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC3C,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA,SAA/B;AAA0CC,IAAAA,QAA1C;AAAoDC,IAAAA;AAApD,MAAoEX,SAAS,CAACK,QAAD,CAAnF;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCJ,WAAjC;;AAEA,QAAIF,SAAJ,EAAe;AACbO,MAAAA,UAAU,CAAC,MAAMH,YAAY,CAAC,IAAD,CAAnB,EAA2B,IAA3B,CAAV;AACAC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoCN,WAApC;AACD;;AACD,QAAIH,IAAI,GAAG,CAAX,EAAc;AACZQ,MAAAA,UAAU,CAAC,MAAMH,YAAY,CAAC,IAAD,CAAnB,EAA2B,IAA3B,CAAV;AACAC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoCN,WAApC;AACD;;AAED,WAAO,MAAMG,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoCN,WAApC,CAAb;AACD,GAbQ,EAaN,CAACA,WAAD,EAAcF,SAAd,EAAyBD,IAAzB,CAbM,CAAT;AAeA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,OAAO,EAAED,OAAf;AAAwB,MAAA,YAAY,EAAED,YAAtC;AAAoD,MAAA,IAAI,EAAEE;AAA1D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGE,SAAS,iBAAI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEH,SAAlB;AAA6B,MAAA,IAAI,EAAED,IAAnC;AAAyC,MAAA,QAAQ,EAAEH;AAAnD;AAAA;AAAA;AAAA;AAAA,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA1BuBD,M;UACoDJ,S;;;KADpDI,M","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport useWordle from '../hooks/useWordle'\n\n// components\nimport Grid from './Grid'\nimport Keypad from './Keypad'\nimport Modal from './Modal'\n\nexport default function Wordle({ solution }) {\n  const { currentGuess, guesses, turn, isCorrect, usedKeys, handleKeyup } = useWordle(solution)\n  const [showModal, setShowModal] = useState(false)\n  \n  useEffect(() => {\n    window.addEventListener('keyup', handleKeyup)\n\n    if (isCorrect) {\n      setTimeout(() => setShowModal(true), 2000)\n      window.removeEventListener('keyup', handleKeyup)\n    }\n    if (turn > 5) {\n      setTimeout(() => setShowModal(true), 2000)\n      window.removeEventListener('keyup', handleKeyup)\n    }\n\n    return () => window.removeEventListener('keyup', handleKeyup)\n  }, [handleKeyup, isCorrect, turn])\n\n  return (\n    <div>\n      <Grid guesses={guesses} currentGuess={currentGuess} turn={turn} />\n      <Keypad usedKeys={usedKeys} />\n      {showModal && <Modal isCorrect={isCorrect} turn={turn} solution={solution} />}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}