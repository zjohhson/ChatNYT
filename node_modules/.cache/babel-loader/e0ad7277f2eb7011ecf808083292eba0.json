{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst {\n  RawSource\n} = require(\"webpack-sources\");\n\nconst ConcatenationScope = require(\"../ConcatenationScope\");\n\nconst {\n  UsageState\n} = require(\"../ExportsInfo\");\n\nconst Generator = require(\"../Generator\");\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n/** @typedef {import(\"webpack-sources\").Source} Source */\n\n/** @typedef {import(\"../ExportsInfo\")} ExportsInfo */\n\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n\n/** @typedef {import(\"./JsonData\")} JsonData */\n\n/** @typedef {import(\"./JsonModulesPlugin\").RawJsonData} RawJsonData */\n\n/**\n * @param {RawJsonData} data Raw JSON data\n * @returns {undefined|string} stringified data\n */\n\n\nconst stringifySafe = data => {\n  const stringified = JSON.stringify(data);\n\n  if (!stringified) {\n    return undefined; // Invalid JSON\n  }\n\n  return stringified.replace(/\\u2028|\\u2029/g, str => str === \"\\u2029\" ? \"\\\\u2029\" : \"\\\\u2028\"); // invalid in JavaScript but valid JSON\n};\n/**\n * @param {RawJsonData} data Raw JSON data (always an object or array)\n * @param {ExportsInfo} exportsInfo exports info\n * @param {RuntimeSpec} runtime the runtime\n * @returns {RawJsonData} reduced data\n */\n\n\nconst createObjectForExportsInfo = (data, exportsInfo, runtime) => {\n  if (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused) return data;\n  const isArray = Array.isArray(data);\n  /** @type {RawJsonData} */\n\n  const reducedData = isArray ? [] : {};\n\n  for (const key of Object.keys(data)) {\n    const exportInfo = exportsInfo.getReadOnlyExportInfo(key);\n    const used = exportInfo.getUsed(runtime);\n    if (used === UsageState.Unused) continue;\n    /** @type {RawJsonData} */\n\n    let value;\n\n    if (used === UsageState.OnlyPropertiesUsed && exportInfo.exportsInfo) {\n      value = createObjectForExportsInfo(data[key], exportInfo.exportsInfo, runtime);\n    } else {\n      value = data[key];\n    }\n\n    const name =\n    /** @type {string} */\n    exportInfo.getUsedName(key, runtime);\n    /** @type {Record<string, RawJsonData>} */\n\n    reducedData[name] = value;\n  }\n\n  if (isArray) {\n    let arrayLengthWhenUsed = exportsInfo.getReadOnlyExportInfo(\"length\").getUsed(runtime) !== UsageState.Unused ? data.length : undefined;\n    let sizeObjectMinusArray = 0;\n\n    for (let i = 0; i < reducedData.length; i++) {\n      if (reducedData[i] === undefined) {\n        sizeObjectMinusArray -= 2;\n      } else {\n        sizeObjectMinusArray += `${i}`.length + 3;\n      }\n    }\n\n    if (arrayLengthWhenUsed !== undefined) {\n      sizeObjectMinusArray += `${arrayLengthWhenUsed}`.length + 8 - (arrayLengthWhenUsed - reducedData.length) * 2;\n    }\n\n    if (sizeObjectMinusArray < 0) return Object.assign(arrayLengthWhenUsed === undefined ? {} : {\n      length: arrayLengthWhenUsed\n    }, reducedData);\n    /** @type {number} */\n\n    const generatedLength = arrayLengthWhenUsed !== undefined ? Math.max(arrayLengthWhenUsed, reducedData.length) : reducedData.length;\n\n    for (let i = 0; i < generatedLength; i++) {\n      if (reducedData[i] === undefined) {\n        reducedData[i] = 0;\n      }\n    }\n  }\n\n  return reducedData;\n};\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass JsonGenerator extends Generator {\n  /**\n   * @param {NormalModule} module fresh module\n   * @returns {Set<string>} available types (do not mutate)\n   */\n  getTypes(module) {\n    return TYPES;\n  }\n  /**\n   * @param {NormalModule} module the module\n   * @param {string=} type source type\n   * @returns {number} estimate size of the module\n   */\n\n\n  getSize(module, type) {\n    /** @type {RawJsonData | undefined} */\n    const data = module.buildInfo && module.buildInfo.jsonData && module.buildInfo.jsonData.get();\n    if (!data) return 0;\n    return (\n      /** @type {string} */\n      stringifySafe(data).length + 10\n    );\n  }\n  /**\n   * @param {NormalModule} module module for which the bailout reason should be determined\n   * @param {ConcatenationBailoutReasonContext} context context\n   * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n   */\n\n\n  getConcatenationBailoutReason(module, context) {\n    return undefined;\n  }\n  /**\n   * @param {NormalModule} module module for which the code should be generated\n   * @param {GenerateContext} generateContext context for generate\n   * @returns {Source} generated code\n   */\n\n\n  generate(module, _ref) {\n    let {\n      moduleGraph,\n      runtimeTemplate,\n      runtimeRequirements,\n      runtime,\n      concatenationScope\n    } = _ref;\n\n    /** @type {RawJsonData | undefined} */\n    const data = module.buildInfo && module.buildInfo.jsonData && module.buildInfo.jsonData.get();\n\n    if (data === undefined) {\n      return new RawSource(runtimeTemplate.missingModuleStatement({\n        request: module.rawRequest\n      }));\n    }\n\n    const exportsInfo = moduleGraph.getExportsInfo(module);\n    /** @type {RawJsonData} */\n\n    let finalJson = typeof data === \"object\" && data && exportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused ? createObjectForExportsInfo(data, exportsInfo, runtime) : data; // Use JSON because JSON.parse() is much faster than JavaScript evaluation\n\n    const jsonStr =\n    /** @type {string} */\n    stringifySafe(finalJson);\n    const jsonExpr = jsonStr.length > 20 && typeof finalJson === \"object\" ? `JSON.parse('${jsonStr.replace(/[\\\\']/g, \"\\\\$&\")}')` : jsonStr;\n    /** @type {string} */\n\n    let content;\n\n    if (concatenationScope) {\n      content = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${ConcatenationScope.NAMESPACE_OBJECT_EXPORT} = ${jsonExpr};`;\n      concatenationScope.registerNamespaceExport(ConcatenationScope.NAMESPACE_OBJECT_EXPORT);\n    } else {\n      runtimeRequirements.add(RuntimeGlobals.module);\n      content = `${module.moduleArgument}.exports = ${jsonExpr};`;\n    }\n\n    return new RawSource(content);\n  }\n\n}\n\nmodule.exports = JsonGenerator;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/json/JsonGenerator.js"],"names":["RawSource","require","ConcatenationScope","UsageState","Generator","RuntimeGlobals","stringifySafe","data","stringified","JSON","stringify","undefined","replace","str","createObjectForExportsInfo","exportsInfo","runtime","otherExportsInfo","getUsed","Unused","isArray","Array","reducedData","key","Object","keys","exportInfo","getReadOnlyExportInfo","used","value","OnlyPropertiesUsed","name","getUsedName","arrayLengthWhenUsed","length","sizeObjectMinusArray","i","assign","generatedLength","Math","max","TYPES","Set","JsonGenerator","getTypes","module","getSize","type","buildInfo","jsonData","get","getConcatenationBailoutReason","context","generate","moduleGraph","runtimeTemplate","runtimeRequirements","concatenationScope","missingModuleStatement","request","rawRequest","getExportsInfo","finalJson","jsonStr","jsonExpr","content","supportsConst","NAMESPACE_OBJECT_EXPORT","registerNamespaceExport","add","moduleArgument","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { RawSource } = require(\"webpack-sources\");\nconst ConcatenationScope = require(\"../ConcatenationScope\");\nconst { UsageState } = require(\"../ExportsInfo\");\nconst Generator = require(\"../Generator\");\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"../ExportsInfo\")} ExportsInfo */\n/** @typedef {import(\"../Generator\").GenerateContext} GenerateContext */\n/** @typedef {import(\"../Module\").ConcatenationBailoutReasonContext} ConcatenationBailoutReasonContext */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../util/runtime\").RuntimeSpec} RuntimeSpec */\n/** @typedef {import(\"./JsonData\")} JsonData */\n/** @typedef {import(\"./JsonModulesPlugin\").RawJsonData} RawJsonData */\n\n/**\n * @param {RawJsonData} data Raw JSON data\n * @returns {undefined|string} stringified data\n */\nconst stringifySafe = data => {\n\tconst stringified = JSON.stringify(data);\n\tif (!stringified) {\n\t\treturn undefined; // Invalid JSON\n\t}\n\n\treturn stringified.replace(/\\u2028|\\u2029/g, str =>\n\t\tstr === \"\\u2029\" ? \"\\\\u2029\" : \"\\\\u2028\"\n\t); // invalid in JavaScript but valid JSON\n};\n\n/**\n * @param {RawJsonData} data Raw JSON data (always an object or array)\n * @param {ExportsInfo} exportsInfo exports info\n * @param {RuntimeSpec} runtime the runtime\n * @returns {RawJsonData} reduced data\n */\nconst createObjectForExportsInfo = (data, exportsInfo, runtime) => {\n\tif (exportsInfo.otherExportsInfo.getUsed(runtime) !== UsageState.Unused)\n\t\treturn data;\n\tconst isArray = Array.isArray(data);\n\t/** @type {RawJsonData} */\n\tconst reducedData = isArray ? [] : {};\n\tfor (const key of Object.keys(data)) {\n\t\tconst exportInfo = exportsInfo.getReadOnlyExportInfo(key);\n\t\tconst used = exportInfo.getUsed(runtime);\n\t\tif (used === UsageState.Unused) continue;\n\n\t\t/** @type {RawJsonData} */\n\t\tlet value;\n\t\tif (used === UsageState.OnlyPropertiesUsed && exportInfo.exportsInfo) {\n\t\t\tvalue = createObjectForExportsInfo(\n\t\t\t\tdata[key],\n\t\t\t\texportInfo.exportsInfo,\n\t\t\t\truntime\n\t\t\t);\n\t\t} else {\n\t\t\tvalue = data[key];\n\t\t}\n\n\t\tconst name = /** @type {string} */ (exportInfo.getUsedName(key, runtime));\n\t\t/** @type {Record<string, RawJsonData>} */ (reducedData)[name] = value;\n\t}\n\tif (isArray) {\n\t\tlet arrayLengthWhenUsed =\n\t\t\texportsInfo.getReadOnlyExportInfo(\"length\").getUsed(runtime) !==\n\t\t\tUsageState.Unused\n\t\t\t\t? data.length\n\t\t\t\t: undefined;\n\n\t\tlet sizeObjectMinusArray = 0;\n\t\tfor (let i = 0; i < reducedData.length; i++) {\n\t\t\tif (reducedData[i] === undefined) {\n\t\t\t\tsizeObjectMinusArray -= 2;\n\t\t\t} else {\n\t\t\t\tsizeObjectMinusArray += `${i}`.length + 3;\n\t\t\t}\n\t\t}\n\t\tif (arrayLengthWhenUsed !== undefined) {\n\t\t\tsizeObjectMinusArray +=\n\t\t\t\t`${arrayLengthWhenUsed}`.length +\n\t\t\t\t8 -\n\t\t\t\t(arrayLengthWhenUsed - reducedData.length) * 2;\n\t\t}\n\t\tif (sizeObjectMinusArray < 0)\n\t\t\treturn Object.assign(\n\t\t\t\tarrayLengthWhenUsed === undefined\n\t\t\t\t\t? {}\n\t\t\t\t\t: { length: arrayLengthWhenUsed },\n\t\t\t\treducedData\n\t\t\t);\n\t\t/** @type {number} */\n\t\tconst generatedLength =\n\t\t\tarrayLengthWhenUsed !== undefined\n\t\t\t\t? Math.max(arrayLengthWhenUsed, reducedData.length)\n\t\t\t\t: reducedData.length;\n\t\tfor (let i = 0; i < generatedLength; i++) {\n\t\t\tif (reducedData[i] === undefined) {\n\t\t\t\treducedData[i] = 0;\n\t\t\t}\n\t\t}\n\t}\n\treturn reducedData;\n};\n\nconst TYPES = new Set([\"javascript\"]);\n\nclass JsonGenerator extends Generator {\n\t/**\n\t * @param {NormalModule} module fresh module\n\t * @returns {Set<string>} available types (do not mutate)\n\t */\n\tgetTypes(module) {\n\t\treturn TYPES;\n\t}\n\n\t/**\n\t * @param {NormalModule} module the module\n\t * @param {string=} type source type\n\t * @returns {number} estimate size of the module\n\t */\n\tgetSize(module, type) {\n\t\t/** @type {RawJsonData | undefined} */\n\t\tconst data =\n\t\t\tmodule.buildInfo &&\n\t\t\tmodule.buildInfo.jsonData &&\n\t\t\tmodule.buildInfo.jsonData.get();\n\t\tif (!data) return 0;\n\t\treturn /** @type {string} */ (stringifySafe(data)).length + 10;\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the bailout reason should be determined\n\t * @param {ConcatenationBailoutReasonContext} context context\n\t * @returns {string | undefined} reason why this module can't be concatenated, undefined when it can be concatenated\n\t */\n\tgetConcatenationBailoutReason(module, context) {\n\t\treturn undefined;\n\t}\n\n\t/**\n\t * @param {NormalModule} module module for which the code should be generated\n\t * @param {GenerateContext} generateContext context for generate\n\t * @returns {Source} generated code\n\t */\n\tgenerate(\n\t\tmodule,\n\t\t{\n\t\t\tmoduleGraph,\n\t\t\truntimeTemplate,\n\t\t\truntimeRequirements,\n\t\t\truntime,\n\t\t\tconcatenationScope\n\t\t}\n\t) {\n\t\t/** @type {RawJsonData | undefined} */\n\t\tconst data =\n\t\t\tmodule.buildInfo &&\n\t\t\tmodule.buildInfo.jsonData &&\n\t\t\tmodule.buildInfo.jsonData.get();\n\t\tif (data === undefined) {\n\t\t\treturn new RawSource(\n\t\t\t\truntimeTemplate.missingModuleStatement({\n\t\t\t\t\trequest: module.rawRequest\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t\tconst exportsInfo = moduleGraph.getExportsInfo(module);\n\t\t/** @type {RawJsonData} */\n\t\tlet finalJson =\n\t\t\ttypeof data === \"object\" &&\n\t\t\tdata &&\n\t\t\texportsInfo.otherExportsInfo.getUsed(runtime) === UsageState.Unused\n\t\t\t\t? createObjectForExportsInfo(data, exportsInfo, runtime)\n\t\t\t\t: data;\n\t\t// Use JSON because JSON.parse() is much faster than JavaScript evaluation\n\t\tconst jsonStr = /** @type {string} */ (stringifySafe(finalJson));\n\t\tconst jsonExpr =\n\t\t\tjsonStr.length > 20 && typeof finalJson === \"object\"\n\t\t\t\t? `JSON.parse('${jsonStr.replace(/[\\\\']/g, \"\\\\$&\")}')`\n\t\t\t\t: jsonStr;\n\t\t/** @type {string} */\n\t\tlet content;\n\t\tif (concatenationScope) {\n\t\t\tcontent = `${runtimeTemplate.supportsConst() ? \"const\" : \"var\"} ${\n\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\n\t\t\t} = ${jsonExpr};`;\n\t\t\tconcatenationScope.registerNamespaceExport(\n\t\t\t\tConcatenationScope.NAMESPACE_OBJECT_EXPORT\n\t\t\t);\n\t\t} else {\n\t\t\truntimeRequirements.add(RuntimeGlobals.module);\n\t\t\tcontent = `${module.moduleArgument}.exports = ${jsonExpr};`;\n\t\t}\n\t\treturn new RawSource(content);\n\t}\n}\n\nmodule.exports = JsonGenerator;\n"]},"metadata":{},"sourceType":"script"}