{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass ArraySerializer {\n  /**\n   * @template T\n   * @param {T[]} array array\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(array, context) {\n    context.write(array.length);\n\n    for (const item of array) context.write(item);\n  }\n  /**\n   * @template T\n   * @param {ObjectDeserializerContext} context context\n   * @returns {T[]} array\n   */\n\n\n  deserialize(context) {\n    /** @type {number} */\n    const length = context.read();\n    /** @type {T[]} */\n\n    const array = [];\n\n    for (let i = 0; i < length; i++) {\n      array.push(context.read());\n    }\n\n    return array;\n  }\n\n}\n\nmodule.exports = ArraySerializer;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/serialization/ArraySerializer.js"],"names":["ArraySerializer","serialize","array","context","write","length","item","deserialize","read","i","push","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA,MAAMA,eAAN,CAAsB;AACrB;AACD;AACA;AACA;AACA;AACCC,EAAAA,SAAS,CAACC,KAAD,EAAQC,OAAR,EAAiB;AACzBA,IAAAA,OAAO,CAACC,KAAR,CAAcF,KAAK,CAACG,MAApB;;AACA,SAAK,MAAMC,IAAX,IAAmBJ,KAAnB,EAA0BC,OAAO,CAACC,KAAR,CAAcE,IAAd;AAC1B;AAED;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,WAAW,CAACJ,OAAD,EAAU;AACpB;AACA,UAAME,MAAM,GAAGF,OAAO,CAACK,IAAR,EAAf;AACA;;AACA,UAAMN,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAApB,EAA4BI,CAAC,EAA7B,EAAiC;AAChCP,MAAAA,KAAK,CAACQ,IAAN,CAAWP,OAAO,CAACK,IAAR,EAAX;AACA;;AACD,WAAON,KAAP;AACA;;AAzBoB;;AA4BtBS,MAAM,CAACC,OAAP,GAAiBZ,eAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass ArraySerializer {\n\t/**\n\t * @template T\n\t * @param {T[]} array array\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(array, context) {\n\t\tcontext.write(array.length);\n\t\tfor (const item of array) context.write(item);\n\t}\n\n\t/**\n\t * @template T\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {T[]} array\n\t */\n\tdeserialize(context) {\n\t\t/** @type {number} */\n\t\tconst length = context.read();\n\t\t/** @type {T[]} */\n\t\tconst array = [];\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tarray.push(context.read());\n\t\t}\n\t\treturn array;\n\t}\n}\n\nmodule.exports = ArraySerializer;\n"]},"metadata":{},"sourceType":"script"}