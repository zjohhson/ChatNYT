{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n\n/** @type {WeakMap<ParserState, boolean>} */\n\nconst parserStateExportsState = new WeakMap();\n/**\n * @param {ParserState} parserState parser state\n * @returns {void}\n */\n\nexports.bailout = parserState => {\n  const value = parserStateExportsState.get(parserState);\n  parserStateExportsState.set(parserState, false);\n\n  if (value === true) {\n    const buildMeta =\n    /** @type {BuildMeta} */\n    parserState.module.buildMeta;\n    buildMeta.exportsType = undefined;\n    buildMeta.defaultObject = false;\n  }\n};\n/**\n * @param {ParserState} parserState parser state\n * @returns {void}\n */\n\n\nexports.enable = parserState => {\n  const value = parserStateExportsState.get(parserState);\n  if (value === false) return;\n  parserStateExportsState.set(parserState, true);\n\n  if (value !== true) {\n    const buildMeta =\n    /** @type {BuildMeta} */\n    parserState.module.buildMeta;\n    buildMeta.exportsType = \"default\";\n    buildMeta.defaultObject = \"redirect\";\n  }\n};\n/**\n * @param {ParserState} parserState parser state\n * @returns {void}\n */\n\n\nexports.setFlagged = parserState => {\n  const value = parserStateExportsState.get(parserState);\n  if (value !== true) return;\n  const buildMeta =\n  /** @type {BuildMeta} */\n  parserState.module.buildMeta;\n  if (buildMeta.exportsType === \"dynamic\") return;\n  buildMeta.exportsType = \"flagged\";\n};\n/**\n * @param {ParserState} parserState parser state\n * @returns {void}\n */\n\n\nexports.setDynamic = parserState => {\n  const value = parserStateExportsState.get(parserState);\n  if (value !== true) return;\n  /** @type {BuildMeta} */\n\n  parserState.module.buildMeta.exportsType = \"dynamic\";\n};\n/**\n * @param {ParserState} parserState parser state\n * @returns {boolean} true, when enabled\n */\n\n\nexports.isEnabled = parserState => {\n  const value = parserStateExportsState.get(parserState);\n  return value === true;\n};","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/DynamicExports.js"],"names":["parserStateExportsState","WeakMap","exports","bailout","parserState","value","get","set","buildMeta","module","exportsType","undefined","defaultObject","enable","setFlagged","setDynamic","isEnabled"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA;;AACA,MAAMA,uBAAuB,GAAG,IAAIC,OAAJ,EAAhC;AAEA;AACA;AACA;AACA;;AACAC,OAAO,CAACC,OAAR,GAAkBC,WAAW,IAAI;AAChC,QAAMC,KAAK,GAAGL,uBAAuB,CAACM,GAAxB,CAA4BF,WAA5B,CAAd;AACAJ,EAAAA,uBAAuB,CAACO,GAAxB,CAA4BH,WAA5B,EAAyC,KAAzC;;AACA,MAAIC,KAAK,KAAK,IAAd,EAAoB;AACnB,UAAMG,SAAS;AAAG;AAA0BJ,IAAAA,WAAW,CAACK,MAAZ,CAAmBD,SAA/D;AACAA,IAAAA,SAAS,CAACE,WAAV,GAAwBC,SAAxB;AACAH,IAAAA,SAAS,CAACI,aAAV,GAA0B,KAA1B;AACA;AACD,CARD;AAUA;AACA;AACA;AACA;;;AACAV,OAAO,CAACW,MAAR,GAAiBT,WAAW,IAAI;AAC/B,QAAMC,KAAK,GAAGL,uBAAuB,CAACM,GAAxB,CAA4BF,WAA5B,CAAd;AACA,MAAIC,KAAK,KAAK,KAAd,EAAqB;AACrBL,EAAAA,uBAAuB,CAACO,GAAxB,CAA4BH,WAA5B,EAAyC,IAAzC;;AACA,MAAIC,KAAK,KAAK,IAAd,EAAoB;AACnB,UAAMG,SAAS;AAAG;AAA0BJ,IAAAA,WAAW,CAACK,MAAZ,CAAmBD,SAA/D;AACAA,IAAAA,SAAS,CAACE,WAAV,GAAwB,SAAxB;AACAF,IAAAA,SAAS,CAACI,aAAV,GAA0B,UAA1B;AACA;AACD,CATD;AAWA;AACA;AACA;AACA;;;AACAV,OAAO,CAACY,UAAR,GAAqBV,WAAW,IAAI;AACnC,QAAMC,KAAK,GAAGL,uBAAuB,CAACM,GAAxB,CAA4BF,WAA5B,CAAd;AACA,MAAIC,KAAK,KAAK,IAAd,EAAoB;AACpB,QAAMG,SAAS;AAAG;AAA0BJ,EAAAA,WAAW,CAACK,MAAZ,CAAmBD,SAA/D;AACA,MAAIA,SAAS,CAACE,WAAV,KAA0B,SAA9B,EAAyC;AACzCF,EAAAA,SAAS,CAACE,WAAV,GAAwB,SAAxB;AACA,CAND;AAQA;AACA;AACA;AACA;;;AACAR,OAAO,CAACa,UAAR,GAAqBX,WAAW,IAAI;AACnC,QAAMC,KAAK,GAAGL,uBAAuB,CAACM,GAAxB,CAA4BF,WAA5B,CAAd;AACA,MAAIC,KAAK,KAAK,IAAd,EAAoB;AACpB;;AACCD,EAAAA,WAAW,CAACK,MAAZ,CAAmBD,SAApB,CAA+BE,WAA/B,GAA6C,SAA7C;AACA,CALD;AAOA;AACA;AACA;AACA;;;AACAR,OAAO,CAACc,SAAR,GAAoBZ,WAAW,IAAI;AAClC,QAAMC,KAAK,GAAGL,uBAAuB,CAACM,GAAxB,CAA4BF,WAA5B,CAAd;AACA,SAAOC,KAAK,KAAK,IAAjB;AACA,CAHD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"../Module\").BuildMeta} BuildMeta */\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n\n/** @type {WeakMap<ParserState, boolean>} */\nconst parserStateExportsState = new WeakMap();\n\n/**\n * @param {ParserState} parserState parser state\n * @returns {void}\n */\nexports.bailout = parserState => {\n\tconst value = parserStateExportsState.get(parserState);\n\tparserStateExportsState.set(parserState, false);\n\tif (value === true) {\n\t\tconst buildMeta = /** @type {BuildMeta} */ (parserState.module.buildMeta);\n\t\tbuildMeta.exportsType = undefined;\n\t\tbuildMeta.defaultObject = false;\n\t}\n};\n\n/**\n * @param {ParserState} parserState parser state\n * @returns {void}\n */\nexports.enable = parserState => {\n\tconst value = parserStateExportsState.get(parserState);\n\tif (value === false) return;\n\tparserStateExportsState.set(parserState, true);\n\tif (value !== true) {\n\t\tconst buildMeta = /** @type {BuildMeta} */ (parserState.module.buildMeta);\n\t\tbuildMeta.exportsType = \"default\";\n\t\tbuildMeta.defaultObject = \"redirect\";\n\t}\n};\n\n/**\n * @param {ParserState} parserState parser state\n * @returns {void}\n */\nexports.setFlagged = parserState => {\n\tconst value = parserStateExportsState.get(parserState);\n\tif (value !== true) return;\n\tconst buildMeta = /** @type {BuildMeta} */ (parserState.module.buildMeta);\n\tif (buildMeta.exportsType === \"dynamic\") return;\n\tbuildMeta.exportsType = \"flagged\";\n};\n\n/**\n * @param {ParserState} parserState parser state\n * @returns {void}\n */\nexports.setDynamic = parserState => {\n\tconst value = parserStateExportsState.get(parserState);\n\tif (value !== true) return;\n\t/** @type {BuildMeta} */\n\t(parserState.module.buildMeta).exportsType = \"dynamic\";\n};\n\n/**\n * @param {ParserState} parserState parser state\n * @returns {boolean} true, when enabled\n */\nexports.isEnabled = parserState => {\n\tconst value = parserStateExportsState.get(parserState);\n\treturn value === true;\n};\n"]},"metadata":{},"sourceType":"script"}