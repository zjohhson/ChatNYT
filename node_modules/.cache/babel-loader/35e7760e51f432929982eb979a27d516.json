{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n\n/**\n * @param {ResolveContext} options options for inner context\n * @param {null|string} message message to log\n * @returns {ResolveContext} inner context\n */\n\nmodule.exports = function createInnerContext(options, message) {\n  let messageReported = false;\n  let innerLog = undefined;\n\n  if (options.log) {\n    if (message) {\n      /**\n       * @param {string} msg message\n       */\n      innerLog = msg => {\n        if (!messageReported) {\n          /** @type {(function(string): void)} */\n          options.log(message);\n          messageReported = true;\n        }\n        /** @type {(function(string): void)} */\n\n\n        options.log(\"  \" + msg);\n      };\n    } else {\n      innerLog = options.log;\n    }\n  }\n\n  return {\n    log: innerLog,\n    yield: options.yield,\n    fileDependencies: options.fileDependencies,\n    contextDependencies: options.contextDependencies,\n    missingDependencies: options.missingDependencies,\n    stack: options.stack\n  };\n};","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/enhanced-resolve/lib/createInnerContext.js"],"names":["module","exports","createInnerContext","options","message","messageReported","innerLog","undefined","log","msg","yield","fileDependencies","contextDependencies","missingDependencies","stack"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA4BC,OAA5B,EAAqCC,OAArC,EAA8C;AAC9D,MAAIC,eAAe,GAAG,KAAtB;AACA,MAAIC,QAAQ,GAAGC,SAAf;;AACA,MAAIJ,OAAO,CAACK,GAAZ,EAAiB;AAChB,QAAIJ,OAAJ,EAAa;AACZ;AACH;AACA;AACGE,MAAAA,QAAQ,GAAGG,GAAG,IAAI;AACjB,YAAI,CAACJ,eAAL,EAAsB;AACrB;AACCF,UAAAA,OAAO,CAACK,GAAT,CAAcJ,OAAd;AACAC,UAAAA,eAAe,GAAG,IAAlB;AACA;AAED;;;AACCF,QAAAA,OAAO,CAACK,GAAT,CAAc,OAAOC,GAArB;AACA,OATD;AAUA,KAdD,MAcO;AACNH,MAAAA,QAAQ,GAAGH,OAAO,CAACK,GAAnB;AACA;AACD;;AAED,SAAO;AACNA,IAAAA,GAAG,EAAEF,QADC;AAENI,IAAAA,KAAK,EAAEP,OAAO,CAACO,KAFT;AAGNC,IAAAA,gBAAgB,EAAER,OAAO,CAACQ,gBAHpB;AAINC,IAAAA,mBAAmB,EAAET,OAAO,CAACS,mBAJvB;AAKNC,IAAAA,mBAAmB,EAAEV,OAAO,CAACU,mBALvB;AAMNC,IAAAA,KAAK,EAAEX,OAAO,CAACW;AANT,GAAP;AAQA,CA/BD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n\n/**\n * @param {ResolveContext} options options for inner context\n * @param {null|string} message message to log\n * @returns {ResolveContext} inner context\n */\nmodule.exports = function createInnerContext(options, message) {\n\tlet messageReported = false;\n\tlet innerLog = undefined;\n\tif (options.log) {\n\t\tif (message) {\n\t\t\t/**\n\t\t\t * @param {string} msg message\n\t\t\t */\n\t\t\tinnerLog = msg => {\n\t\t\t\tif (!messageReported) {\n\t\t\t\t\t/** @type {(function(string): void)} */\n\t\t\t\t\t(options.log)(message);\n\t\t\t\t\tmessageReported = true;\n\t\t\t\t}\n\n\t\t\t\t/** @type {(function(string): void)} */\n\t\t\t\t(options.log)(\"  \" + msg);\n\t\t\t};\n\t\t} else {\n\t\t\tinnerLog = options.log;\n\t\t}\n\t}\n\n\treturn {\n\t\tlog: innerLog,\n\t\tyield: options.yield,\n\t\tfileDependencies: options.fileDependencies,\n\t\tcontextDependencies: options.contextDependencies,\n\t\tmissingDependencies: options.missingDependencies,\n\t\tstack: options.stack\n\t};\n};\n"]},"metadata":{},"sourceType":"script"}