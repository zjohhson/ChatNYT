{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as FilesAPI from 'openai/resources/beta/assistants/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Files extends APIResource {\n  /**\n   * Create an assistant file by attaching a\n   * [File](https://platform.openai.com/docs/api-reference/files) to an\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants).\n   */\n  create(assistantId, body, options) {\n    return this.post(`/assistants/${assistantId}/files`, {\n      body,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Retrieves an AssistantFile.\n   */\n\n\n  retrieve(assistantId, fileId, options) {\n    return this.get(`/assistants/${assistantId}/files/${fileId}`, { ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n\n  list(assistantId) {\n    let query = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let options = arguments.length > 2 ? arguments[2] : undefined;\n\n    if (isRequestOptions(query)) {\n      return this.list(assistantId, {}, query);\n    }\n\n    return this.getAPIList(`/assistants/${assistantId}/files`, AssistantFilesPage, {\n      query,\n      ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n  /**\n   * Delete an assistant file.\n   */\n\n\n  del(assistantId, fileId, options) {\n    return this.delete(`/assistants/${assistantId}/files/${fileId}`, { ...options,\n      headers: {\n        'OpenAI-Beta': 'assistants=v1',\n        ...options?.headers\n      }\n    });\n  }\n\n}\nexport class AssistantFilesPage extends CursorPage {}\n\n(function (Files) {\n  Files.AssistantFilesPage = FilesAPI.AssistantFilesPage;\n})(Files || (Files = {}));","map":{"version":3,"mappings":"AAAA;SAGSA,mBAAmB;SACnBC,wBAAwB;OAC1B,KAAKC,cAAc;SACjBC,kBAAyC;AAElD,OAAM,MAAOC,KAAP,SAAqBJ,WAArB,CAAgC;AACpC;;;;;AAKAK,QAAM,CACJC,WADI,EAEJC,IAFI,EAGJC,OAHI,EAGyB;AAE7B,WAAO,KAAKC,IAAL,CAAU,eAAeH,WAAW,QAApC,EAA8C;AACnDC,UADmD;AAEnD,SAAGC,OAFgD;AAGnDE,aAAO,EAAE;AAAE,uBAAe,eAAjB;AAAkC,WAAGF,OAAO,EAAEE;AAA9C;AAH0C,KAA9C,CAAP;AAKD;AAED;;;;;AAGAC,UAAQ,CACNL,WADM,EAENM,MAFM,EAGNJ,OAHM,EAGuB;AAE7B,WAAO,KAAKK,GAAL,CAAS,eAAeP,WAAW,UAAUM,MAAM,EAAnD,EAAuD,EAC5D,GAAGJ,OADyD;AAE5DE,aAAO,EAAE;AAAE,uBAAe,eAAjB;AAAkC,WAAGF,OAAO,EAAEE;AAA9C;AAFmD,KAAvD,CAAP;AAID;;AAcDI,MAAI,CACFR,WADE,EAG2B;AAAA,QAD7BS,KAC6B,uEADiB,EACjB;AAAA,QAA7BP,OAA6B;;AAE7B,QAAIP,gBAAgB,CAACc,KAAD,CAApB,EAA6B;AAC3B,aAAO,KAAKD,IAAL,CAAUR,WAAV,EAAuB,EAAvB,EAA2BS,KAA3B,CAAP;AACD;;AACD,WAAO,KAAKC,UAAL,CAAgB,eAAeV,WAAW,QAA1C,EAAoDW,kBAApD,EAAwE;AAC7EF,WAD6E;AAE7E,SAAGP,OAF0E;AAG7EE,aAAO,EAAE;AAAE,uBAAe,eAAjB;AAAkC,WAAGF,OAAO,EAAEE;AAA9C;AAHoE,KAAxE,CAAP;AAKD;AAED;;;;;AAGAQ,KAAG,CACDZ,WADC,EAEDM,MAFC,EAGDJ,OAHC,EAG4B;AAE7B,WAAO,KAAKW,MAAL,CAAY,eAAeb,WAAW,UAAUM,MAAM,EAAtD,EAA0D,EAC/D,GAAGJ,OAD4D;AAE/DE,aAAO,EAAE;AAAE,uBAAe,eAAjB;AAAkC,WAAGF,OAAO,EAAEE;AAA9C;AAFsD,KAA1D,CAAP;AAID;;AAvEmC;AA0EtC,OAAM,MAAOO,kBAAP,SAAkCd,UAAlC,CAA2D;;AAiEjE,WAAiBC,KAAjB,EAAsB;AAGNA,6BAAqBF,QAAQ,CAACe,kBAA9B;AAGf,CAND,EAAiBb,KAAK,KAALA,KAAK,MAAtB","names":["APIResource","isRequestOptions","FilesAPI","CursorPage","Files","create","assistantId","body","options","post","headers","retrieve","fileId","get","list","query","getAPIList","AssistantFilesPage","del","delete"],"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/openai/src/resources/beta/assistants/files.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from \"../../../core\";\nimport { APIResource } from \"../../../resource\";\nimport { isRequestOptions } from \"../../../core\";\nimport * as FilesAPI from \"./files\";\nimport { CursorPage, type CursorPageParams } from \"../../../pagination\";\n\nexport class Files extends APIResource {\n  /**\n   * Create an assistant file by attaching a\n   * [File](https://platform.openai.com/docs/api-reference/files) to an\n   * [assistant](https://platform.openai.com/docs/api-reference/assistants).\n   */\n  create(\n    assistantId: string,\n    body: FileCreateParams,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<AssistantFile> {\n    return this.post(`/assistants/${assistantId}/files`, {\n      body,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n\n  /**\n   * Retrieves an AssistantFile.\n   */\n  retrieve(\n    assistantId: string,\n    fileId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<AssistantFile> {\n    return this.get(`/assistants/${assistantId}/files/${fileId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n\n  /**\n   * Returns a list of assistant files.\n   */\n  list(\n    assistantId: string,\n    query?: FileListParams,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<AssistantFilesPage, AssistantFile>;\n  list(\n    assistantId: string,\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<AssistantFilesPage, AssistantFile>;\n  list(\n    assistantId: string,\n    query: FileListParams | Core.RequestOptions = {},\n    options?: Core.RequestOptions,\n  ): Core.PagePromise<AssistantFilesPage, AssistantFile> {\n    if (isRequestOptions(query)) {\n      return this.list(assistantId, {}, query);\n    }\n    return this.getAPIList(`/assistants/${assistantId}/files`, AssistantFilesPage, {\n      query,\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n\n  /**\n   * Delete an assistant file.\n   */\n  del(\n    assistantId: string,\n    fileId: string,\n    options?: Core.RequestOptions,\n  ): Core.APIPromise<FileDeleteResponse> {\n    return this.delete(`/assistants/${assistantId}/files/${fileId}`, {\n      ...options,\n      headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n    });\n  }\n}\n\nexport class AssistantFilesPage extends CursorPage<AssistantFile> {}\n\n/**\n * A list of [Files](https://platform.openai.com/docs/api-reference/files) attached\n * to an `assistant`.\n */\nexport interface AssistantFile {\n  /**\n   * The identifier, which can be referenced in API endpoints.\n   */\n  id: string;\n\n  /**\n   * The assistant ID that the file is attached to.\n   */\n  assistant_id: string;\n\n  /**\n   * The Unix timestamp (in seconds) for when the assistant file was created.\n   */\n  created_at: number;\n\n  /**\n   * The object type, which is always `assistant.file`.\n   */\n  object: 'assistant.file';\n}\n\n/**\n * Deletes the association between the assistant and the file, but does not delete\n * the [File](https://platform.openai.com/docs/api-reference/files) object itself.\n */\nexport interface FileDeleteResponse {\n  id: string;\n\n  deleted: boolean;\n\n  object: 'assistant.file.deleted';\n}\n\nexport interface FileCreateParams {\n  /**\n   * A [File](https://platform.openai.com/docs/api-reference/files) ID (with\n   * `purpose=\"assistants\"`) that the assistant should use. Useful for tools like\n   * `retrieval` and `code_interpreter` that can access files.\n   */\n  file_id: string;\n}\n\nexport interface FileListParams extends CursorPageParams {\n  /**\n   * A cursor for use in pagination. `before` is an object ID that defines your place\n   * in the list. For instance, if you make a list request and receive 100 objects,\n   * ending with obj_foo, your subsequent call can include before=obj_foo in order to\n   * fetch the previous page of the list.\n   */\n  before?: string;\n\n  /**\n   * Sort order by the `created_at` timestamp of the objects. `asc` for ascending\n   * order and `desc` for descending order.\n   */\n  order?: 'asc' | 'desc';\n}\n\nexport namespace Files {\n  export import AssistantFile = FilesAPI.AssistantFile;\n  export import FileDeleteResponse = FilesAPI.FileDeleteResponse;\n  export import AssistantFilesPage = FilesAPI.AssistantFilesPage;\n  export import FileCreateParams = FilesAPI.FileCreateParams;\n  export import FileListParams = FilesAPI.FileListParams;\n}\n"]},"metadata":{},"sourceType":"module"}