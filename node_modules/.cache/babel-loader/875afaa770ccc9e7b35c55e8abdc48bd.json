{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\n\nconst {\n  CSS_MODULE_TYPE_AUTO\n} = require(\"../ModuleTypeConstants\");\n\nconst Parser = require(\"../Parser\");\n\nconst WebpackError = require(\"../WebpackError\");\n\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\n\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\n\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\n\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\n\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\n\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\n\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\n\nconst {\n  parseResource\n} = require(\"../util/identifier\");\n\nconst walkCssTokens = require(\"./walkCssTokens\");\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n\n/** @typedef {[number, number]} Range */\n\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0); // https://www.w3.org/TR/css-syntax-3/#newline\n// We don't have `preprocessing` stage, so we need specify all of them\n\nconst STRING_MULTILINE = /\\\\[\\n\\r\\f]/g; // https://www.w3.org/TR/css-syntax-3/#whitespace\n\nconst TRIM_WHITE_SPACES = /(^[ \\t\\n\\r\\f]*|[ \\t\\n\\r\\f]*$)/g;\nconst UNESCAPE = /\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g;\nconst IMAGE_SET_FUNCTION = /^(-\\w+-)?image-set$/i;\nconst OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE = /^@(-\\w+-)?keyframes$/;\nconst OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY = /^(-\\w+-)?animation(-name)?$/i;\nconst IS_MODULES = /\\.module(s)?\\.[^.]+$/i;\n/**\n * @param {string} str url string\n * @param {boolean} isString is url wrapped in quotes\n * @returns {string} normalized url\n */\n\nconst normalizeUrl = (str, isString) => {\n  // Remove extra spaces and newlines:\n  // `url(\"im\\\n  // g.png\")`\n  if (isString) {\n    str = str.replace(STRING_MULTILINE, \"\");\n  }\n\n  str = str // Remove unnecessary spaces from `url(\"   img.png\t \")`\n  .replace(TRIM_WHITE_SPACES, \"\") // Unescape\n  .replace(UNESCAPE, match => {\n    if (match.length > 2) {\n      return String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n    } else {\n      return match[1];\n    }\n  });\n\n  if (/^data:/i.test(str)) {\n    return str;\n  }\n\n  if (str.includes(\"%\")) {\n    // Convert `url('%2E/img.png')` -> `url('./img.png')`\n    try {\n      str = decodeURIComponent(str);\n    } catch (error) {// Ignore\n    }\n  }\n\n  return str;\n};\n\nclass LocConverter {\n  /**\n   * @param {string} input input\n   */\n  constructor(input) {\n    this._input = input;\n    this.line = 1;\n    this.column = 0;\n    this.pos = 0;\n  }\n  /**\n   * @param {number} pos position\n   * @returns {LocConverter} location converter\n   */\n\n\n  get(pos) {\n    if (this.pos !== pos) {\n      if (this.pos < pos) {\n        const str = this._input.slice(this.pos, pos);\n\n        let i = str.lastIndexOf(\"\\n\");\n\n        if (i === -1) {\n          this.column += str.length;\n        } else {\n          this.column = str.length - i - 1;\n          this.line++;\n\n          while (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1) this.line++;\n        }\n      } else {\n        let i = this._input.lastIndexOf(\"\\n\", this.pos);\n\n        while (i >= pos) {\n          this.line--;\n          i = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n        }\n\n        this.column = pos - i;\n      }\n\n      this.pos = pos;\n    }\n\n    return this;\n  }\n\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_BLOCK = 1;\nconst CSS_MODE_IN_AT_IMPORT = 2;\nconst CSS_MODE_AT_IMPORT_INVALID = 3;\nconst CSS_MODE_AT_NAMESPACE_INVALID = 4;\n\nclass CssParser extends Parser {\n  constructor() {\n    let {\n      allowModeSwitch = true,\n      defaultMode = \"global\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n    this.allowModeSwitch = allowModeSwitch;\n    this.defaultMode = defaultMode;\n  }\n  /**\n   * @param {ParserState} state parser state\n   * @param {string} message warning message\n   * @param {LocConverter} locConverter location converter\n   * @param {number} start start offset\n   * @param {number} end end offset\n   */\n\n\n  _emitWarning(state, message, locConverter, start, end) {\n    const {\n      line: sl,\n      column: sc\n    } = locConverter.get(start);\n    const {\n      line: el,\n      column: ec\n    } = locConverter.get(end);\n    state.current.addWarning(new ModuleDependencyWarning(state.module, new WebpackError(message), {\n      start: {\n        line: sl,\n        column: sc\n      },\n      end: {\n        line: el,\n        column: ec\n      }\n    }));\n  }\n  /**\n   * @param {string | Buffer | PreparsedAst} source the source to parse\n   * @param {ParserState} state the parser state\n   * @returns {ParserState} the parser state\n   */\n\n\n  parse(source, state) {\n    if (Buffer.isBuffer(source)) {\n      source = source.toString(\"utf-8\");\n    } else if (typeof source === \"object\") {\n      throw new Error(\"webpackAst is unexpected for the CssParser\");\n    }\n\n    if (source[0] === \"\\ufeff\") {\n      source = source.slice(1);\n    }\n\n    const module = state.module;\n    /** @type {string | undefined} */\n\n    let oldDefaultMode;\n\n    if (module.type === CSS_MODULE_TYPE_AUTO && IS_MODULES.test(parseResource(module.matchResource || module.resource).path)) {\n      oldDefaultMode = this.defaultMode;\n      this.defaultMode = \"local\";\n    }\n\n    const locConverter = new LocConverter(source);\n    /** @type {Set<string>}*/\n\n    const declaredCssVariables = new Set();\n    /** @type {number} */\n\n    let scope = CSS_MODE_TOP_LEVEL;\n    /** @type {number} */\n\n    let blockNestingLevel = 0;\n    /** @type {boolean} */\n\n    let allowImportAtRule = true;\n    /** @type {\"local\" | \"global\" | undefined} */\n\n    let modeData = undefined;\n    /** @type {[number, number] | undefined} */\n\n    let lastIdentifier = undefined;\n    /** @type [string, number, number][] */\n\n    let balanced = [];\n    /** @type {undefined | { start: number, url?: string, urlStart?: number, urlEnd?: number, layer?: string, layerStart?: number, layerEnd?: number, supports?: string, supportsStart?: number, supportsEnd?: number, inSupports?:boolean, media?: string  }} */\n\n    let importData = undefined;\n    /** @type {boolean} */\n\n    let inAnimationProperty = false;\n    /** @type {boolean} */\n\n    let isNextRulePrelude = true;\n    /**\n     * @param {string} input input\n     * @param {number} pos position\n     * @returns {boolean} true, when next is nested syntax\n     */\n\n    const isNextNestedSyntax = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\n      if (input[pos] === \"}\") {\n        return false;\n      } // According spec only identifier can be used as a property name\n\n\n      const isIdentifier = walkCssTokens.isIdentStartCodePoint(input.charCodeAt(pos));\n      return !isIdentifier;\n    };\n    /**\n     * @returns {boolean} true, when in local scope\n     */\n\n\n    const isLocalMode = () => modeData === \"local\" || this.defaultMode === \"local\" && modeData === undefined;\n    /**\n     * @param {string} chars characters\n     * @returns {(input: string, pos: number) => number} function to eat characters\n     */\n\n\n    const eatUntil = chars => {\n      const charCodes = Array.from({\n        length: chars.length\n      }, (_, i) => chars.charCodeAt(i));\n      const arr = Array.from({\n        length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1\n      }, () => false);\n      charCodes.forEach(cc => arr[cc] = true);\n      return (input, pos) => {\n        for (;;) {\n          const cc = input.charCodeAt(pos);\n\n          if (cc < arr.length && arr[cc]) {\n            return pos;\n          }\n\n          pos++;\n          if (pos === input.length) return pos;\n        }\n      };\n    };\n    /**\n     * @param {string} input input\n     * @param {number} pos start position\n     * @param {(input: string, pos: number) => number} eater eater\n     * @returns {[number,string]} new position and text\n     */\n\n\n    const eatText = (input, pos, eater) => {\n      let text = \"\";\n\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_SLASH) {\n          const newPos = walkCssTokens.eatComments(input, pos);\n\n          if (pos !== newPos) {\n            pos = newPos;\n            if (pos === input.length) break;\n          } else {\n            text += \"/\";\n            pos++;\n            if (pos === input.length) break;\n          }\n        }\n\n        const newPos = eater(input, pos);\n\n        if (pos !== newPos) {\n          text += input.slice(pos, newPos);\n          pos = newPos;\n        } else {\n          break;\n        }\n\n        if (pos === input.length) break;\n      }\n\n      return [pos, text.trimEnd()];\n    };\n\n    const eatExportName = eatUntil(\":};/\");\n    const eatExportValue = eatUntil(\"};/\");\n    /**\n     * @param {string} input input\n     * @param {number} pos start position\n     * @returns {number} position after parse\n     */\n\n    const parseExports = (input, pos) => {\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const cc = input.charCodeAt(pos);\n\n      if (cc !== CC_LEFT_CURLY) {\n        this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of ':export' (expected '{')`, locConverter, pos, pos);\n\n        return pos;\n      }\n\n      pos++;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\n      for (;;) {\n        if (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let start = pos;\n        let name;\n        [pos, name] = eatText(input, pos, eatExportName);\n        if (pos === input.length) return pos;\n\n        if (input.charCodeAt(pos) !== CC_COLON) {\n          this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of export name in ':export' (expected ':')`, locConverter, start, pos);\n\n          return pos;\n        }\n\n        pos++;\n        if (pos === input.length) return pos;\n        pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n        if (pos === input.length) return pos;\n        let value;\n        [pos, value] = eatText(input, pos, eatExportValue);\n        if (pos === input.length) return pos;\n        const cc = input.charCodeAt(pos);\n\n        if (cc === CC_SEMICOLON) {\n          pos++;\n          if (pos === input.length) return pos;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n        } else if (cc !== CC_RIGHT_CURLY) {\n          this._emitWarning(state, `Unexpected '${input[pos]}' at ${pos} during parsing of export value in ':export' (expected ';' or '}')`, locConverter, start, pos);\n\n          return pos;\n        }\n\n        const dep = new CssExportDependency(name, value);\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(start);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(pos);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n      }\n\n      pos++;\n      if (pos === input.length) return pos;\n      pos = walkCssTokens.eatWhiteLine(input, pos);\n      return pos;\n    };\n\n    const eatPropertyName = eatUntil(\":{};\");\n    /**\n     * @param {string} input input\n     * @param {number} pos name start position\n     * @param {number} end name end position\n     * @returns {number} position after handling\n     */\n\n    const processLocalDeclaration = (input, pos, end) => {\n      modeData = undefined;\n      pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n      const propertyNameStart = pos;\n      const [propertyNameEnd, propertyName] = eatText(input, pos, eatPropertyName);\n      if (input.charCodeAt(propertyNameEnd) !== CC_COLON) return end;\n      pos = propertyNameEnd + 1;\n\n      if (propertyName.startsWith(\"--\")) {\n        // CSS Variable\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(propertyNameStart);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(propertyNameEnd);\n        const name = propertyName.slice(2);\n        const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        declaredCssVariables.add(name);\n      } else if (!propertyName.startsWith(\"--\") && OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY.test(propertyName)) {\n        inAnimationProperty = true;\n      }\n\n      return pos;\n    };\n    /**\n     * @param {string} input input\n     */\n\n\n    const processDeclarationValueDone = input => {\n      if (inAnimationProperty && lastIdentifier) {\n        const {\n          line: sl,\n          column: sc\n        } = locConverter.get(lastIdentifier[0]);\n        const {\n          line: el,\n          column: ec\n        } = locConverter.get(lastIdentifier[1]);\n        const name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n        const dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n        dep.setLoc(sl, sc, el, ec);\n        module.addDependency(dep);\n        lastIdentifier = undefined;\n      }\n    };\n\n    const eatKeyframes = eatUntil(\"{};/\");\n    const eatNameInVar = eatUntil(\",)};/\");\n    walkCssTokens(source, {\n      isSelector: () => {\n        return isNextRulePrelude;\n      },\n      url: (input, start, end, contentStart, contentEnd) => {\n        let value = normalizeUrl(input.slice(contentStart, contentEnd), false);\n\n        switch (scope) {\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              // Do not parse URLs in `supports(...)`\n              if (importData.inSupports) {\n                break;\n              }\n\n              if (importData.url) {\n                this._emitWarning(state, `Duplicate of 'url(...)' in '${input.slice(importData.start, end)}'`, locConverter, start, end);\n\n                break;\n              }\n\n              importData.url = value;\n              importData.urlStart = start;\n              importData.urlEnd = end;\n              break;\n            }\n          // Do not parse URLs in import between rules\n\n          case CSS_MODE_AT_NAMESPACE_INVALID:\n          case CSS_MODE_AT_IMPORT_INVALID:\n            {\n              break;\n            }\n\n          case CSS_MODE_IN_BLOCK:\n            {\n              // Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n              if (value.length === 0) {\n                break;\n              }\n\n              const dep = new CssUrlDependency(value, [start, end], \"url\");\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              dep.setLoc(sl, sc, el, ec);\n              module.addDependency(dep);\n              module.addCodeGenerationDependency(dep);\n              break;\n            }\n        }\n\n        return end;\n      },\n      string: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              const insideURLFunction = balanced[balanced.length - 1] && balanced[balanced.length - 1][0] === \"url\"; // Do not parse URLs in `supports(...)` and other strings if we already have a URL\n\n              if (importData.inSupports || !insideURLFunction && importData.url) {\n                break;\n              }\n\n              if (insideURLFunction && importData.url) {\n                this._emitWarning(state, `Duplicate of 'url(...)' in '${input.slice(importData.start, end)}'`, locConverter, start, end);\n\n                break;\n              }\n\n              importData.url = normalizeUrl(input.slice(start + 1, end - 1), true);\n\n              if (!insideURLFunction) {\n                importData.urlStart = start;\n                importData.urlEnd = end;\n              }\n\n              break;\n            }\n\n          case CSS_MODE_IN_BLOCK:\n            {\n              // TODO move escaped parsing to tokenizer\n              const last = balanced[balanced.length - 1];\n\n              if (last && (last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\" || IMAGE_SET_FUNCTION.test(last[0].replace(/\\\\/g, \"\")))) {\n                let value = normalizeUrl(input.slice(start + 1, end - 1), true); // Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\n                if (value.length === 0) {\n                  break;\n                }\n\n                const isUrl = last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\";\n                const dep = new CssUrlDependency(value, [start, end], isUrl ? \"string\" : \"url\");\n                const {\n                  line: sl,\n                  column: sc\n                } = locConverter.get(start);\n                const {\n                  line: el,\n                  column: ec\n                } = locConverter.get(end);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n                module.addCodeGenerationDependency(dep);\n              }\n            }\n        }\n\n        return end;\n      },\n      atKeyword: (input, start, end) => {\n        const name = input.slice(start, end).toLowerCase();\n\n        if (name === \"@namespace\") {\n          scope = CSS_MODE_AT_NAMESPACE_INVALID;\n\n          this._emitWarning(state, \"'@namespace' is not supported in bundled CSS\", locConverter, start, end);\n\n          return end;\n        } else if (name === \"@import\") {\n          if (!allowImportAtRule) {\n            scope = CSS_MODE_AT_IMPORT_INVALID;\n\n            this._emitWarning(state, \"Any '@import' rules must precede all other rules\", locConverter, start, end);\n\n            return end;\n          }\n\n          scope = CSS_MODE_IN_AT_IMPORT;\n          importData = {\n            start\n          };\n        } else if (this.allowModeSwitch && OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE.test(name)) {\n          let pos = end;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n          const [newPos, name] = eatText(input, pos, eatKeyframes);\n          if (newPos === input.length) return newPos;\n\n          if (input.charCodeAt(newPos) !== CC_LEFT_CURLY) {\n            this._emitWarning(state, `Unexpected '${input[newPos]}' at ${newPos} during parsing of @keyframes (expected '{')`, locConverter, start, end);\n\n            return newPos;\n          }\n\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(pos);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(newPos);\n          const dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          pos = newPos;\n          return pos + 1;\n        } else if (this.allowModeSwitch && name === \"@property\") {\n          let pos = end;\n          pos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n          if (pos === input.length) return pos;\n          const propertyNameStart = pos;\n          const [propertyNameEnd, propertyName] = eatText(input, pos, eatKeyframes);\n          if (propertyNameEnd === input.length) return propertyNameEnd;\n          if (!propertyName.startsWith(\"--\")) return propertyNameEnd;\n\n          if (input.charCodeAt(propertyNameEnd) !== CC_LEFT_CURLY) {\n            this._emitWarning(state, `Unexpected '${input[propertyNameEnd]}' at ${propertyNameEnd} during parsing of @property (expected '{')`, locConverter, start, end);\n\n            return propertyNameEnd;\n          }\n\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(pos);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(propertyNameEnd);\n          const name = propertyName.slice(2);\n          const dep = new CssLocalIdentifierDependency(name, [propertyNameStart, propertyNameEnd], \"--\");\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n          declaredCssVariables.add(name);\n          pos = propertyNameEnd;\n          return pos + 1;\n        } else if (name === \"@media\" || name === \"@supports\" || name === \"@layer\" || name === \"@container\") {\n          modeData = isLocalMode() ? \"local\" : \"global\";\n          isNextRulePrelude = true;\n          return end;\n        } else if (this.allowModeSwitch) {\n          modeData = \"global\";\n          isNextRulePrelude = false;\n        }\n\n        return end;\n      },\n      semicolon: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              const {\n                start\n              } = importData;\n\n              if (importData.url === undefined) {\n                this._emitWarning(state, `Expected URL in '${input.slice(start, end)}'`, locConverter, start, end);\n\n                importData = undefined;\n                scope = CSS_MODE_TOP_LEVEL;\n                return end;\n              }\n\n              if (importData.urlStart > importData.layerStart || importData.urlStart > importData.supportsStart) {\n                this._emitWarning(state, `An URL in '${input.slice(start, end)}' should be before 'layer(...)' or 'supports(...)'`, locConverter, start, end);\n\n                importData = undefined;\n                scope = CSS_MODE_TOP_LEVEL;\n                return end;\n              }\n\n              if (importData.layerStart > importData.supportsStart) {\n                this._emitWarning(state, `The 'layer(...)' in '${input.slice(start, end)}' should be before 'supports(...)'`, locConverter, start, end);\n\n                importData = undefined;\n                scope = CSS_MODE_TOP_LEVEL;\n                return end;\n              }\n\n              const semicolonPos = end;\n              end = walkCssTokens.eatWhiteLine(input, end + 1);\n              const {\n                line: sl,\n                column: sc\n              } = locConverter.get(start);\n              const {\n                line: el,\n                column: ec\n              } = locConverter.get(end);\n              const lastEnd = importData.supportsEnd || importData.layerEnd || importData.urlEnd || start;\n              const pos = walkCssTokens.eatWhitespaceAndComments(input, lastEnd); // Prevent to consider comments as a part of media query\n\n              if (pos !== semicolonPos - 1) {\n                importData.media = input.slice(lastEnd, semicolonPos - 1).trim();\n              }\n\n              const url = importData.url.trim();\n\n              if (url.length === 0) {\n                const dep = new ConstDependency(\"\", [start, end]);\n                module.addPresentationalDependency(dep);\n                dep.setLoc(sl, sc, el, ec);\n              } else {\n                const dep = new CssImportDependency(url, [start, end], importData.layer, importData.supports, importData.media && importData.media.length > 0 ? importData.media : undefined);\n                dep.setLoc(sl, sc, el, ec);\n                module.addDependency(dep);\n              }\n\n              importData = undefined;\n              scope = CSS_MODE_TOP_LEVEL;\n              break;\n            }\n\n          case CSS_MODE_AT_IMPORT_INVALID:\n          case CSS_MODE_AT_NAMESPACE_INVALID:\n            {\n              scope = CSS_MODE_TOP_LEVEL;\n              break;\n            }\n\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (this.allowModeSwitch) {\n                processDeclarationValueDone(input);\n                inAnimationProperty = false;\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      leftCurlyBracket: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_TOP_LEVEL:\n            {\n              allowImportAtRule = false;\n              scope = CSS_MODE_IN_BLOCK;\n              blockNestingLevel = 1;\n\n              if (this.allowModeSwitch) {\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n\n              break;\n            }\n\n          case CSS_MODE_IN_BLOCK:\n            {\n              blockNestingLevel++;\n\n              if (this.allowModeSwitch) {\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      rightCurlyBracket: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (isLocalMode()) {\n                processDeclarationValueDone(input);\n                inAnimationProperty = false;\n              }\n\n              if (--blockNestingLevel === 0) {\n                scope = CSS_MODE_TOP_LEVEL;\n\n                if (this.allowModeSwitch) {\n                  isNextRulePrelude = true;\n                  modeData = undefined;\n                }\n              } else if (this.allowModeSwitch) {\n                isNextRulePrelude = isNextNestedSyntax(input, end);\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      identifier: (input, start, end) => {\n        switch (scope) {\n          case CSS_MODE_IN_BLOCK:\n            {\n              if (isLocalMode()) {\n                // Handle only top level values and not inside functions\n                if (inAnimationProperty && balanced.length === 0) {\n                  lastIdentifier = [start, end];\n                } else {\n                  return processLocalDeclaration(input, start, end);\n                }\n              }\n\n              break;\n            }\n\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              if (input.slice(start, end).toLowerCase() === \"layer\") {\n                importData.layer = \"\";\n                importData.layerStart = start;\n                importData.layerEnd = end;\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      class: (input, start, end) => {\n        if (isLocalMode()) {\n          const name = input.slice(start + 1, end);\n          const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(start);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(end);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n        }\n\n        return end;\n      },\n      id: (input, start, end) => {\n        if (isLocalMode()) {\n          const name = input.slice(start + 1, end);\n          const dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n          const {\n            line: sl,\n            column: sc\n          } = locConverter.get(start);\n          const {\n            line: el,\n            column: ec\n          } = locConverter.get(end);\n          dep.setLoc(sl, sc, el, ec);\n          module.addDependency(dep);\n        }\n\n        return end;\n      },\n      function: (input, start, end) => {\n        let name = input.slice(start, end - 1);\n        balanced.push([name, start, end]);\n\n        if (scope === CSS_MODE_IN_AT_IMPORT && name.toLowerCase() === \"supports\") {\n          importData.inSupports = true;\n        }\n\n        if (isLocalMode()) {\n          name = name.toLowerCase(); // Don't rename animation name when we have `var()` function\n\n          if (inAnimationProperty && balanced.length === 1) {\n            lastIdentifier = undefined;\n          }\n\n          if (name === \"var\") {\n            let pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n            if (pos === input.length) return pos;\n            const [newPos, name] = eatText(input, pos, eatNameInVar);\n            if (!name.startsWith(\"--\")) return end;\n            const {\n              line: sl,\n              column: sc\n            } = locConverter.get(pos);\n            const {\n              line: el,\n              column: ec\n            } = locConverter.get(newPos);\n            const dep = new CssSelfLocalIdentifierDependency(name.slice(2), [pos, newPos], \"--\", declaredCssVariables);\n            dep.setLoc(sl, sc, el, ec);\n            module.addDependency(dep);\n            return newPos;\n          }\n        }\n\n        return end;\n      },\n      leftParenthesis: (input, start, end) => {\n        balanced.push([\"(\", start, end]);\n        return end;\n      },\n      rightParenthesis: (input, start, end) => {\n        const last = balanced[balanced.length - 1];\n        const popped = balanced.pop();\n\n        if (this.allowModeSwitch && popped && (popped[0] === \":local\" || popped[0] === \":global\")) {\n          modeData = balanced[balanced.length - 1] ?\n          /** @type {\"local\" | \"global\"} */\n          balanced[balanced.length - 1][0] : undefined;\n          const dep = new ConstDependency(\"\", [start, end]);\n          module.addPresentationalDependency(dep);\n          return end;\n        }\n\n        switch (scope) {\n          case CSS_MODE_IN_AT_IMPORT:\n            {\n              if (last && last[0] === \"url\" && !importData.inSupports) {\n                importData.urlStart = last[1];\n                importData.urlEnd = end;\n              } else if (last && last[0].toLowerCase() === \"layer\" && !importData.inSupports) {\n                importData.layer = input.slice(last[2], end - 1).trim();\n                importData.layerStart = last[1];\n                importData.layerEnd = end;\n              } else if (last && last[0].toLowerCase() === \"supports\") {\n                importData.supports = input.slice(last[2], end - 1).trim();\n                importData.supportsStart = last[1];\n                importData.supportsEnd = end;\n                importData.inSupports = false;\n              }\n\n              break;\n            }\n        }\n\n        return end;\n      },\n      pseudoClass: (input, start, end) => {\n        if (this.allowModeSwitch) {\n          const name = input.slice(start, end).toLowerCase();\n\n          if (name === \":global\") {\n            modeData = \"global\"; // Eat extra whitespace and comments\n\n            end = walkCssTokens.eatWhitespace(input, end);\n            const dep = new ConstDependency(\"\", [start, end]);\n            module.addPresentationalDependency(dep);\n            return end;\n          } else if (name === \":local\") {\n            modeData = \"local\"; // Eat extra whitespace and comments\n\n            end = walkCssTokens.eatWhitespace(input, end);\n            const dep = new ConstDependency(\"\", [start, end]);\n            module.addPresentationalDependency(dep);\n            return end;\n          }\n\n          switch (scope) {\n            case CSS_MODE_TOP_LEVEL:\n              {\n                if (name === \":export\") {\n                  const pos = parseExports(input, end);\n                  const dep = new ConstDependency(\"\", [start, pos]);\n                  module.addPresentationalDependency(dep);\n                  return pos;\n                }\n\n                break;\n              }\n          }\n        }\n\n        return end;\n      },\n      pseudoFunction: (input, start, end) => {\n        let name = input.slice(start, end - 1);\n        balanced.push([name, start, end]);\n\n        if (this.allowModeSwitch) {\n          name = name.toLowerCase();\n\n          if (name === \":global\") {\n            modeData = \"global\";\n            const dep = new ConstDependency(\"\", [start, end]);\n            module.addPresentationalDependency(dep);\n          } else if (name === \":local\") {\n            modeData = \"local\";\n            const dep = new ConstDependency(\"\", [start, end]);\n            module.addPresentationalDependency(dep);\n          }\n        }\n\n        return end;\n      },\n      comma: (input, start, end) => {\n        if (this.allowModeSwitch) {\n          // Reset stack for `:global .class :local .class-other` selector after\n          modeData = undefined;\n\n          switch (scope) {\n            case CSS_MODE_IN_BLOCK:\n              {\n                if (isLocalMode()) {\n                  processDeclarationValueDone(input);\n                }\n\n                break;\n              }\n          }\n        }\n\n        return end;\n      }\n    });\n\n    if (oldDefaultMode) {\n      this.defaultMode = oldDefaultMode;\n    }\n\n    module.buildInfo.strict = true;\n    module.buildMeta.exportsType = \"namespace\";\n    module.addDependency(new StaticExportsDependency([], true));\n    return state;\n  }\n\n}\n\nmodule.exports = CssParser;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/css/CssParser.js"],"names":["ModuleDependencyWarning","require","CSS_MODULE_TYPE_AUTO","Parser","WebpackError","ConstDependency","CssExportDependency","CssImportDependency","CssLocalIdentifierDependency","CssSelfLocalIdentifierDependency","CssUrlDependency","StaticExportsDependency","parseResource","walkCssTokens","CC_LEFT_CURLY","charCodeAt","CC_RIGHT_CURLY","CC_COLON","CC_SLASH","CC_SEMICOLON","STRING_MULTILINE","TRIM_WHITE_SPACES","UNESCAPE","IMAGE_SET_FUNCTION","OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE","OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY","IS_MODULES","normalizeUrl","str","isString","replace","match","length","String","fromCharCode","parseInt","slice","trim","test","includes","decodeURIComponent","error","LocConverter","constructor","input","_input","line","column","pos","get","i","lastIndexOf","CSS_MODE_TOP_LEVEL","CSS_MODE_IN_BLOCK","CSS_MODE_IN_AT_IMPORT","CSS_MODE_AT_IMPORT_INVALID","CSS_MODE_AT_NAMESPACE_INVALID","CssParser","allowModeSwitch","defaultMode","_emitWarning","state","message","locConverter","start","end","sl","sc","el","ec","current","addWarning","module","parse","source","Buffer","isBuffer","toString","Error","oldDefaultMode","type","matchResource","resource","path","declaredCssVariables","Set","scope","blockNestingLevel","allowImportAtRule","modeData","undefined","lastIdentifier","balanced","importData","inAnimationProperty","isNextRulePrelude","isNextNestedSyntax","eatWhitespaceAndComments","isIdentifier","isIdentStartCodePoint","isLocalMode","eatUntil","chars","charCodes","Array","from","_","arr","reduce","a","b","Math","max","forEach","cc","eatText","eater","text","newPos","eatComments","trimEnd","eatExportName","eatExportValue","parseExports","name","value","dep","setLoc","addDependency","eatWhiteLine","eatPropertyName","processLocalDeclaration","propertyNameStart","propertyNameEnd","propertyName","startsWith","add","processDeclarationValueDone","eatKeyframes","eatNameInVar","isSelector","url","contentStart","contentEnd","inSupports","urlStart","urlEnd","addCodeGenerationDependency","string","insideURLFunction","last","toLowerCase","isUrl","atKeyword","semicolon","layerStart","supportsStart","semicolonPos","lastEnd","supportsEnd","layerEnd","media","addPresentationalDependency","layer","supports","leftCurlyBracket","rightCurlyBracket","identifier","class","id","function","push","leftParenthesis","rightParenthesis","popped","pop","pseudoClass","eatWhitespace","pseudoFunction","comma","buildInfo","strict","buildMeta","exportsType","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst { CSS_MODULE_TYPE_AUTO } = require(\"../ModuleTypeConstants\");\nconst Parser = require(\"../Parser\");\nconst WebpackError = require(\"../WebpackError\");\nconst ConstDependency = require(\"../dependencies/ConstDependency\");\nconst CssExportDependency = require(\"../dependencies/CssExportDependency\");\nconst CssImportDependency = require(\"../dependencies/CssImportDependency\");\nconst CssLocalIdentifierDependency = require(\"../dependencies/CssLocalIdentifierDependency\");\nconst CssSelfLocalIdentifierDependency = require(\"../dependencies/CssSelfLocalIdentifierDependency\");\nconst CssUrlDependency = require(\"../dependencies/CssUrlDependency\");\nconst StaticExportsDependency = require(\"../dependencies/StaticExportsDependency\");\nconst { parseResource } = require(\"../util/identifier\");\nconst walkCssTokens = require(\"./walkCssTokens\");\n\n/** @typedef {import(\"../Parser\").ParserState} ParserState */\n/** @typedef {import(\"../Parser\").PreparsedAst} PreparsedAst */\n/** @typedef {[number, number]} Range */\n\nconst CC_LEFT_CURLY = \"{\".charCodeAt(0);\nconst CC_RIGHT_CURLY = \"}\".charCodeAt(0);\nconst CC_COLON = \":\".charCodeAt(0);\nconst CC_SLASH = \"/\".charCodeAt(0);\nconst CC_SEMICOLON = \";\".charCodeAt(0);\n\n// https://www.w3.org/TR/css-syntax-3/#newline\n// We don't have `preprocessing` stage, so we need specify all of them\nconst STRING_MULTILINE = /\\\\[\\n\\r\\f]/g;\n// https://www.w3.org/TR/css-syntax-3/#whitespace\nconst TRIM_WHITE_SPACES = /(^[ \\t\\n\\r\\f]*|[ \\t\\n\\r\\f]*$)/g;\nconst UNESCAPE = /\\\\([0-9a-fA-F]{1,6}[ \\t\\n\\r\\f]?|[\\s\\S])/g;\nconst IMAGE_SET_FUNCTION = /^(-\\w+-)?image-set$/i;\nconst OPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE = /^@(-\\w+-)?keyframes$/;\nconst OPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY =\n\t/^(-\\w+-)?animation(-name)?$/i;\nconst IS_MODULES = /\\.module(s)?\\.[^.]+$/i;\n\n/**\n * @param {string} str url string\n * @param {boolean} isString is url wrapped in quotes\n * @returns {string} normalized url\n */\nconst normalizeUrl = (str, isString) => {\n\t// Remove extra spaces and newlines:\n\t// `url(\"im\\\n\t// g.png\")`\n\tif (isString) {\n\t\tstr = str.replace(STRING_MULTILINE, \"\");\n\t}\n\n\tstr = str\n\t\t// Remove unnecessary spaces from `url(\"   img.png\t \")`\n\t\t.replace(TRIM_WHITE_SPACES, \"\")\n\t\t// Unescape\n\t\t.replace(UNESCAPE, match => {\n\t\t\tif (match.length > 2) {\n\t\t\t\treturn String.fromCharCode(parseInt(match.slice(1).trim(), 16));\n\t\t\t} else {\n\t\t\t\treturn match[1];\n\t\t\t}\n\t\t});\n\n\tif (/^data:/i.test(str)) {\n\t\treturn str;\n\t}\n\n\tif (str.includes(\"%\")) {\n\t\t// Convert `url('%2E/img.png')` -> `url('./img.png')`\n\t\ttry {\n\t\t\tstr = decodeURIComponent(str);\n\t\t} catch (error) {\n\t\t\t// Ignore\n\t\t}\n\t}\n\n\treturn str;\n};\n\nclass LocConverter {\n\t/**\n\t * @param {string} input input\n\t */\n\tconstructor(input) {\n\t\tthis._input = input;\n\t\tthis.line = 1;\n\t\tthis.column = 0;\n\t\tthis.pos = 0;\n\t}\n\n\t/**\n\t * @param {number} pos position\n\t * @returns {LocConverter} location converter\n\t */\n\tget(pos) {\n\t\tif (this.pos !== pos) {\n\t\t\tif (this.pos < pos) {\n\t\t\t\tconst str = this._input.slice(this.pos, pos);\n\t\t\t\tlet i = str.lastIndexOf(\"\\n\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tthis.column += str.length;\n\t\t\t\t} else {\n\t\t\t\t\tthis.column = str.length - i - 1;\n\t\t\t\t\tthis.line++;\n\t\t\t\t\twhile (i > 0 && (i = str.lastIndexOf(\"\\n\", i - 1)) !== -1)\n\t\t\t\t\t\tthis.line++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet i = this._input.lastIndexOf(\"\\n\", this.pos);\n\t\t\t\twhile (i >= pos) {\n\t\t\t\t\tthis.line--;\n\t\t\t\t\ti = i > 0 ? this._input.lastIndexOf(\"\\n\", i - 1) : -1;\n\t\t\t\t}\n\t\t\t\tthis.column = pos - i;\n\t\t\t}\n\t\t\tthis.pos = pos;\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst CSS_MODE_TOP_LEVEL = 0;\nconst CSS_MODE_IN_BLOCK = 1;\nconst CSS_MODE_IN_AT_IMPORT = 2;\nconst CSS_MODE_AT_IMPORT_INVALID = 3;\nconst CSS_MODE_AT_NAMESPACE_INVALID = 4;\n\nclass CssParser extends Parser {\n\tconstructor({ allowModeSwitch = true, defaultMode = \"global\" } = {}) {\n\t\tsuper();\n\t\tthis.allowModeSwitch = allowModeSwitch;\n\t\tthis.defaultMode = defaultMode;\n\t}\n\n\t/**\n\t * @param {ParserState} state parser state\n\t * @param {string} message warning message\n\t * @param {LocConverter} locConverter location converter\n\t * @param {number} start start offset\n\t * @param {number} end end offset\n\t */\n\t_emitWarning(state, message, locConverter, start, end) {\n\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\tconst { line: el, column: ec } = locConverter.get(end);\n\n\t\tstate.current.addWarning(\n\t\t\tnew ModuleDependencyWarning(state.module, new WebpackError(message), {\n\t\t\t\tstart: { line: sl, column: sc },\n\t\t\t\tend: { line: el, column: ec }\n\t\t\t})\n\t\t);\n\t}\n\n\t/**\n\t * @param {string | Buffer | PreparsedAst} source the source to parse\n\t * @param {ParserState} state the parser state\n\t * @returns {ParserState} the parser state\n\t */\n\tparse(source, state) {\n\t\tif (Buffer.isBuffer(source)) {\n\t\t\tsource = source.toString(\"utf-8\");\n\t\t} else if (typeof source === \"object\") {\n\t\t\tthrow new Error(\"webpackAst is unexpected for the CssParser\");\n\t\t}\n\t\tif (source[0] === \"\\ufeff\") {\n\t\t\tsource = source.slice(1);\n\t\t}\n\n\t\tconst module = state.module;\n\n\t\t/** @type {string | undefined} */\n\t\tlet oldDefaultMode;\n\n\t\tif (\n\t\t\tmodule.type === CSS_MODULE_TYPE_AUTO &&\n\t\t\tIS_MODULES.test(\n\t\t\t\tparseResource(module.matchResource || module.resource).path\n\t\t\t)\n\t\t) {\n\t\t\toldDefaultMode = this.defaultMode;\n\n\t\t\tthis.defaultMode = \"local\";\n\t\t}\n\n\t\tconst locConverter = new LocConverter(source);\n\t\t/** @type {Set<string>}*/\n\t\tconst declaredCssVariables = new Set();\n\t\t/** @type {number} */\n\t\tlet scope = CSS_MODE_TOP_LEVEL;\n\t\t/** @type {number} */\n\t\tlet blockNestingLevel = 0;\n\t\t/** @type {boolean} */\n\t\tlet allowImportAtRule = true;\n\t\t/** @type {\"local\" | \"global\" | undefined} */\n\t\tlet modeData = undefined;\n\t\t/** @type {[number, number] | undefined} */\n\t\tlet lastIdentifier = undefined;\n\t\t/** @type [string, number, number][] */\n\t\tlet balanced = [];\n\t\t/** @type {undefined | { start: number, url?: string, urlStart?: number, urlEnd?: number, layer?: string, layerStart?: number, layerEnd?: number, supports?: string, supportsStart?: number, supportsEnd?: number, inSupports?:boolean, media?: string  }} */\n\t\tlet importData = undefined;\n\t\t/** @type {boolean} */\n\t\tlet inAnimationProperty = false;\n\t\t/** @type {boolean} */\n\t\tlet isNextRulePrelude = true;\n\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos position\n\t\t * @returns {boolean} true, when next is nested syntax\n\t\t */\n\t\tconst isNextNestedSyntax = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\n\t\t\tif (input[pos] === \"}\") {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// According spec only identifier can be used as a property name\n\t\t\tconst isIdentifier = walkCssTokens.isIdentStartCodePoint(\n\t\t\t\tinput.charCodeAt(pos)\n\t\t\t);\n\n\t\t\treturn !isIdentifier;\n\t\t};\n\t\t/**\n\t\t * @returns {boolean} true, when in local scope\n\t\t */\n\t\tconst isLocalMode = () =>\n\t\t\tmodeData === \"local\" ||\n\t\t\t(this.defaultMode === \"local\" && modeData === undefined);\n\t\t/**\n\t\t * @param {string} chars characters\n\t\t * @returns {(input: string, pos: number) => number} function to eat characters\n\t\t */\n\t\tconst eatUntil = chars => {\n\t\t\tconst charCodes = Array.from({ length: chars.length }, (_, i) =>\n\t\t\t\tchars.charCodeAt(i)\n\t\t\t);\n\t\t\tconst arr = Array.from(\n\t\t\t\t{ length: charCodes.reduce((a, b) => Math.max(a, b), 0) + 1 },\n\t\t\t\t() => false\n\t\t\t);\n\t\t\tcharCodes.forEach(cc => (arr[cc] = true));\n\t\t\treturn (input, pos) => {\n\t\t\t\tfor (;;) {\n\t\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\t\tif (cc < arr.length && arr[cc]) {\n\t\t\t\t\t\treturn pos;\n\t\t\t\t\t}\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos start position\n\t\t * @param {(input: string, pos: number) => number} eater eater\n\t\t * @returns {[number,string]} new position and text\n\t\t */\n\t\tconst eatText = (input, pos, eater) => {\n\t\t\tlet text = \"\";\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_SLASH) {\n\t\t\t\t\tconst newPos = walkCssTokens.eatComments(input, pos);\n\t\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\t\tpos = newPos;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext += \"/\";\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tif (pos === input.length) break;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newPos = eater(input, pos);\n\t\t\t\tif (pos !== newPos) {\n\t\t\t\t\ttext += input.slice(pos, newPos);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (pos === input.length) break;\n\t\t\t}\n\t\t\treturn [pos, text.trimEnd()];\n\t\t};\n\t\tconst eatExportName = eatUntil(\":};/\");\n\t\tconst eatExportValue = eatUntil(\"};/\");\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos start position\n\t\t * @returns {number} position after parse\n\t\t */\n\t\tconst parseExports = (input, pos) => {\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\tif (cc !== CC_LEFT_CURLY) {\n\t\t\t\tthis._emitWarning(\n\t\t\t\t\tstate,\n\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of ':export' (expected '{')`,\n\t\t\t\t\tlocConverter,\n\t\t\t\t\tpos,\n\t\t\t\t\tpos\n\t\t\t\t);\n\t\t\t\treturn pos;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tfor (;;) {\n\t\t\t\tif (input.charCodeAt(pos) === CC_RIGHT_CURLY) break;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet start = pos;\n\t\t\t\tlet name;\n\t\t\t\t[pos, name] = eatText(input, pos, eatExportName);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tif (input.charCodeAt(pos) !== CC_COLON) {\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of export name in ':export' (expected ':')`,\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\tpos++;\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tlet value;\n\t\t\t\t[pos, value] = eatText(input, pos, eatExportValue);\n\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\tconst cc = input.charCodeAt(pos);\n\t\t\t\tif (cc === CC_SEMICOLON) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t} else if (cc !== CC_RIGHT_CURLY) {\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t`Unexpected '${input[pos]}' at ${pos} during parsing of export value in ':export' (expected ';' or '}')`,\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tpos\n\t\t\t\t\t);\n\t\t\t\t\treturn pos;\n\t\t\t\t}\n\t\t\t\tconst dep = new CssExportDependency(name, value);\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(pos);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t}\n\t\t\tpos++;\n\t\t\tif (pos === input.length) return pos;\n\t\t\tpos = walkCssTokens.eatWhiteLine(input, pos);\n\t\t\treturn pos;\n\t\t};\n\t\tconst eatPropertyName = eatUntil(\":{};\");\n\t\t/**\n\t\t * @param {string} input input\n\t\t * @param {number} pos name start position\n\t\t * @param {number} end name end position\n\t\t * @returns {number} position after handling\n\t\t */\n\t\tconst processLocalDeclaration = (input, pos, end) => {\n\t\t\tmodeData = undefined;\n\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\tconst propertyNameStart = pos;\n\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\tinput,\n\t\t\t\tpos,\n\t\t\t\teatPropertyName\n\t\t\t);\n\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_COLON) return end;\n\t\t\tpos = propertyNameEnd + 1;\n\t\t\tif (propertyName.startsWith(\"--\")) {\n\t\t\t\t// CSS Variable\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(propertyNameStart);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\tname,\n\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\"--\"\n\t\t\t\t);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t} else if (\n\t\t\t\t!propertyName.startsWith(\"--\") &&\n\t\t\t\tOPTIONALLY_VENDOR_PREFIXED_ANIMATION_PROPERTY.test(propertyName)\n\t\t\t) {\n\t\t\t\tinAnimationProperty = true;\n\t\t\t}\n\t\t\treturn pos;\n\t\t};\n\t\t/**\n\t\t * @param {string} input input\n\t\t */\n\t\tconst processDeclarationValueDone = input => {\n\t\t\tif (inAnimationProperty && lastIdentifier) {\n\t\t\t\tconst { line: sl, column: sc } = locConverter.get(lastIdentifier[0]);\n\t\t\t\tconst { line: el, column: ec } = locConverter.get(lastIdentifier[1]);\n\t\t\t\tconst name = input.slice(lastIdentifier[0], lastIdentifier[1]);\n\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(name, lastIdentifier);\n\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\tmodule.addDependency(dep);\n\t\t\t\tlastIdentifier = undefined;\n\t\t\t}\n\t\t};\n\t\tconst eatKeyframes = eatUntil(\"{};/\");\n\t\tconst eatNameInVar = eatUntil(\",)};/\");\n\t\twalkCssTokens(source, {\n\t\t\tisSelector: () => {\n\t\t\t\treturn isNextRulePrelude;\n\t\t\t},\n\t\t\turl: (input, start, end, contentStart, contentEnd) => {\n\t\t\t\tlet value = normalizeUrl(input.slice(contentStart, contentEnd), false);\n\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\t// Do not parse URLs in `supports(...)`\n\t\t\t\t\t\tif (importData.inSupports) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (importData.url) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`Duplicate of 'url(...)' in '${input.slice(\n\t\t\t\t\t\t\t\t\timportData.start,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t)}'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timportData.url = value;\n\t\t\t\t\t\timportData.urlStart = start;\n\t\t\t\t\t\timportData.urlEnd = end;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t// Do not parse URLs in import between rules\n\t\t\t\t\tcase CSS_MODE_AT_NAMESPACE_INVALID:\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_INVALID: {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\t// Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\t\t\t\t\t\tif (value.length === 0) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst dep = new CssUrlDependency(value, [start, end], \"url\");\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tstring: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\tconst insideURLFunction =\n\t\t\t\t\t\t\tbalanced[balanced.length - 1] &&\n\t\t\t\t\t\t\tbalanced[balanced.length - 1][0] === \"url\";\n\n\t\t\t\t\t\t// Do not parse URLs in `supports(...)` and other strings if we already have a URL\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\timportData.inSupports ||\n\t\t\t\t\t\t\t(!insideURLFunction && importData.url)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (insideURLFunction && importData.url) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`Duplicate of 'url(...)' in '${input.slice(\n\t\t\t\t\t\t\t\t\timportData.start,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t)}'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timportData.url = normalizeUrl(\n\t\t\t\t\t\t\tinput.slice(start + 1, end - 1),\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (!insideURLFunction) {\n\t\t\t\t\t\t\timportData.urlStart = start;\n\t\t\t\t\t\t\timportData.urlEnd = end;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\t// TODO move escaped parsing to tokenizer\n\t\t\t\t\t\tconst last = balanced[balanced.length - 1];\n\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tlast &&\n\t\t\t\t\t\t\t(last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\" ||\n\t\t\t\t\t\t\t\tIMAGE_SET_FUNCTION.test(last[0].replace(/\\\\/g, \"\")))\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tlet value = normalizeUrl(input.slice(start + 1, end - 1), true);\n\n\t\t\t\t\t\t\t// Ignore `url()`, `url('')` and `url(\"\")`, they are valid by spec\n\t\t\t\t\t\t\tif (value.length === 0) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst isUrl = last[0].replace(/\\\\/g, \"\").toLowerCase() === \"url\";\n\t\t\t\t\t\t\tconst dep = new CssUrlDependency(\n\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t[start, end],\n\t\t\t\t\t\t\t\tisUrl ? \"string\" : \"url\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t\tmodule.addCodeGenerationDependency(dep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tatKeyword: (input, start, end) => {\n\t\t\t\tconst name = input.slice(start, end).toLowerCase();\n\t\t\t\tif (name === \"@namespace\") {\n\t\t\t\t\tscope = CSS_MODE_AT_NAMESPACE_INVALID;\n\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\"'@namespace' is not supported in bundled CSS\",\n\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\tstart,\n\t\t\t\t\t\tend\n\t\t\t\t\t);\n\t\t\t\t\treturn end;\n\t\t\t\t} else if (name === \"@import\") {\n\t\t\t\t\tif (!allowImportAtRule) {\n\t\t\t\t\t\tscope = CSS_MODE_AT_IMPORT_INVALID;\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\"Any '@import' rules must precede all other rules\",\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope = CSS_MODE_IN_AT_IMPORT;\n\t\t\t\t\timportData = { start };\n\t\t\t\t} else if (\n\t\t\t\t\tthis.allowModeSwitch &&\n\t\t\t\t\tOPTIONALLY_VENDOR_PREFIXED_KEYFRAMES_AT_RULE.test(name)\n\t\t\t\t) {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatKeyframes);\n\t\t\t\t\tif (newPos === input.length) return newPos;\n\t\t\t\t\tif (input.charCodeAt(newPos) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`Unexpected '${input[newPos]}' at ${newPos} during parsing of @keyframes (expected '{')`,\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t}\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [pos, newPos]);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\tpos = newPos;\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t} else if (this.allowModeSwitch && name === \"@property\") {\n\t\t\t\t\tlet pos = end;\n\t\t\t\t\tpos = walkCssTokens.eatWhitespaceAndComments(input, pos);\n\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\tconst propertyNameStart = pos;\n\t\t\t\t\tconst [propertyNameEnd, propertyName] = eatText(\n\t\t\t\t\t\tinput,\n\t\t\t\t\t\tpos,\n\t\t\t\t\t\teatKeyframes\n\t\t\t\t\t);\n\t\t\t\t\tif (propertyNameEnd === input.length) return propertyNameEnd;\n\t\t\t\t\tif (!propertyName.startsWith(\"--\")) return propertyNameEnd;\n\t\t\t\t\tif (input.charCodeAt(propertyNameEnd) !== CC_LEFT_CURLY) {\n\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t`Unexpected '${input[propertyNameEnd]}' at ${propertyNameEnd} during parsing of @property (expected '{')`,\n\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn propertyNameEnd;\n\t\t\t\t\t}\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(propertyNameEnd);\n\t\t\t\t\tconst name = propertyName.slice(2);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(\n\t\t\t\t\t\tname,\n\t\t\t\t\t\t[propertyNameStart, propertyNameEnd],\n\t\t\t\t\t\t\"--\"\n\t\t\t\t\t);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\tdeclaredCssVariables.add(name);\n\t\t\t\t\tpos = propertyNameEnd;\n\t\t\t\t\treturn pos + 1;\n\t\t\t\t} else if (\n\t\t\t\t\tname === \"@media\" ||\n\t\t\t\t\tname === \"@supports\" ||\n\t\t\t\t\tname === \"@layer\" ||\n\t\t\t\t\tname === \"@container\"\n\t\t\t\t) {\n\t\t\t\t\tmodeData = isLocalMode() ? \"local\" : \"global\";\n\t\t\t\t\tisNextRulePrelude = true;\n\t\t\t\t\treturn end;\n\t\t\t\t} else if (this.allowModeSwitch) {\n\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\tisNextRulePrelude = false;\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tsemicolon: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\tconst { start } = importData;\n\n\t\t\t\t\t\tif (importData.url === undefined) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`Expected URL in '${input.slice(start, end)}'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\timportData = undefined;\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\timportData.urlStart > importData.layerStart ||\n\t\t\t\t\t\t\timportData.urlStart > importData.supportsStart\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`An URL in '${input.slice(\n\t\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t)}' should be before 'layer(...)' or 'supports(...)'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\timportData = undefined;\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (importData.layerStart > importData.supportsStart) {\n\t\t\t\t\t\t\tthis._emitWarning(\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\t`The 'layer(...)' in '${input.slice(\n\t\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t)}' should be before 'supports(...)'`,\n\t\t\t\t\t\t\t\tlocConverter,\n\t\t\t\t\t\t\t\tstart,\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\timportData = undefined;\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\t\t\t\t\t\t\treturn end;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst semicolonPos = end;\n\t\t\t\t\t\tend = walkCssTokens.eatWhiteLine(input, end + 1);\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\t\tconst lastEnd =\n\t\t\t\t\t\t\timportData.supportsEnd ||\n\t\t\t\t\t\t\timportData.layerEnd ||\n\t\t\t\t\t\t\timportData.urlEnd ||\n\t\t\t\t\t\t\tstart;\n\t\t\t\t\t\tconst pos = walkCssTokens.eatWhitespaceAndComments(input, lastEnd);\n\t\t\t\t\t\t// Prevent to consider comments as a part of media query\n\t\t\t\t\t\tif (pos !== semicolonPos - 1) {\n\t\t\t\t\t\t\timportData.media = input.slice(lastEnd, semicolonPos - 1).trim();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst url = importData.url.trim();\n\n\t\t\t\t\t\tif (url.length === 0) {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst dep = new CssImportDependency(\n\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t[start, end],\n\t\t\t\t\t\t\t\timportData.layer,\n\t\t\t\t\t\t\t\timportData.supports,\n\t\t\t\t\t\t\t\timportData.media && importData.media.length > 0\n\t\t\t\t\t\t\t\t\t? importData.media\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\timportData = undefined;\n\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_AT_IMPORT_INVALID:\n\t\t\t\t\tcase CSS_MODE_AT_NAMESPACE_INVALID: {\n\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t\t\tinAnimationProperty = false;\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\tallowImportAtRule = false;\n\t\t\t\t\t\tscope = CSS_MODE_IN_BLOCK;\n\t\t\t\t\t\tblockNestingLevel = 1;\n\n\t\t\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tblockNestingLevel++;\n\n\t\t\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightCurlyBracket: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t\t\tinAnimationProperty = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (--blockNestingLevel === 0) {\n\t\t\t\t\t\t\tscope = CSS_MODE_TOP_LEVEL;\n\n\t\t\t\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t\t\t\tisNextRulePrelude = true;\n\t\t\t\t\t\t\t\tmodeData = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.allowModeSwitch) {\n\t\t\t\t\t\t\tisNextRulePrelude = isNextNestedSyntax(input, end);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tidentifier: (input, start, end) => {\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\t// Handle only top level values and not inside functions\n\t\t\t\t\t\t\tif (inAnimationProperty && balanced.length === 0) {\n\t\t\t\t\t\t\t\tlastIdentifier = [start, end];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn processLocalDeclaration(input, start, end);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\tif (input.slice(start, end).toLowerCase() === \"layer\") {\n\t\t\t\t\t\t\timportData.layer = \"\";\n\t\t\t\t\t\t\timportData.layerStart = start;\n\t\t\t\t\t\t\timportData.layerEnd = end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tclass: (input, start, end) => {\n\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tid: (input, start, end) => {\n\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\tconst name = input.slice(start + 1, end);\n\t\t\t\t\tconst dep = new CssLocalIdentifierDependency(name, [start + 1, end]);\n\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(start);\n\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(end);\n\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tfunction: (input, start, end) => {\n\t\t\t\tlet name = input.slice(start, end - 1);\n\n\t\t\t\tbalanced.push([name, start, end]);\n\n\t\t\t\tif (\n\t\t\t\t\tscope === CSS_MODE_IN_AT_IMPORT &&\n\t\t\t\t\tname.toLowerCase() === \"supports\"\n\t\t\t\t) {\n\t\t\t\t\timportData.inSupports = true;\n\t\t\t\t}\n\n\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\tname = name.toLowerCase();\n\n\t\t\t\t\t// Don't rename animation name when we have `var()` function\n\t\t\t\t\tif (inAnimationProperty && balanced.length === 1) {\n\t\t\t\t\t\tlastIdentifier = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (name === \"var\") {\n\t\t\t\t\t\tlet pos = walkCssTokens.eatWhitespaceAndComments(input, end);\n\t\t\t\t\t\tif (pos === input.length) return pos;\n\t\t\t\t\t\tconst [newPos, name] = eatText(input, pos, eatNameInVar);\n\t\t\t\t\t\tif (!name.startsWith(\"--\")) return end;\n\t\t\t\t\t\tconst { line: sl, column: sc } = locConverter.get(pos);\n\t\t\t\t\t\tconst { line: el, column: ec } = locConverter.get(newPos);\n\t\t\t\t\t\tconst dep = new CssSelfLocalIdentifierDependency(\n\t\t\t\t\t\t\tname.slice(2),\n\t\t\t\t\t\t\t[pos, newPos],\n\t\t\t\t\t\t\t\"--\",\n\t\t\t\t\t\t\tdeclaredCssVariables\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdep.setLoc(sl, sc, el, ec);\n\t\t\t\t\t\tmodule.addDependency(dep);\n\t\t\t\t\t\treturn newPos;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tleftParenthesis: (input, start, end) => {\n\t\t\t\tbalanced.push([\"(\", start, end]);\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\trightParenthesis: (input, start, end) => {\n\t\t\t\tconst last = balanced[balanced.length - 1];\n\t\t\t\tconst popped = balanced.pop();\n\n\t\t\t\tif (\n\t\t\t\t\tthis.allowModeSwitch &&\n\t\t\t\t\tpopped &&\n\t\t\t\t\t(popped[0] === \":local\" || popped[0] === \":global\")\n\t\t\t\t) {\n\t\t\t\t\tmodeData = balanced[balanced.length - 1]\n\t\t\t\t\t\t? /** @type {\"local\" | \"global\"} */\n\t\t\t\t\t\t  (balanced[balanced.length - 1][0])\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\n\t\t\t\t\treturn end;\n\t\t\t\t}\n\n\t\t\t\tswitch (scope) {\n\t\t\t\t\tcase CSS_MODE_IN_AT_IMPORT: {\n\t\t\t\t\t\tif (last && last[0] === \"url\" && !importData.inSupports) {\n\t\t\t\t\t\t\timportData.urlStart = last[1];\n\t\t\t\t\t\t\timportData.urlEnd = end;\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\tlast &&\n\t\t\t\t\t\t\tlast[0].toLowerCase() === \"layer\" &&\n\t\t\t\t\t\t\t!importData.inSupports\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\timportData.layer = input.slice(last[2], end - 1).trim();\n\t\t\t\t\t\t\timportData.layerStart = last[1];\n\t\t\t\t\t\t\timportData.layerEnd = end;\n\t\t\t\t\t\t} else if (last && last[0].toLowerCase() === \"supports\") {\n\t\t\t\t\t\t\timportData.supports = input.slice(last[2], end - 1).trim();\n\t\t\t\t\t\t\timportData.supportsStart = last[1];\n\t\t\t\t\t\t\timportData.supportsEnd = end;\n\t\t\t\t\t\t\timportData.inSupports = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoClass: (input, start, end) => {\n\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\tconst name = input.slice(start, end).toLowerCase();\n\n\t\t\t\t\tif (name === \":global\") {\n\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\t// Eat extra whitespace and comments\n\t\t\t\t\t\tend = walkCssTokens.eatWhitespace(input, end);\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t} else if (name === \":local\") {\n\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\t// Eat extra whitespace and comments\n\t\t\t\t\t\tend = walkCssTokens.eatWhitespace(input, end);\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\treturn end;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (scope) {\n\t\t\t\t\t\tcase CSS_MODE_TOP_LEVEL: {\n\t\t\t\t\t\t\tif (name === \":export\") {\n\t\t\t\t\t\t\t\tconst pos = parseExports(input, end);\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, pos]);\n\t\t\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn pos;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tpseudoFunction: (input, start, end) => {\n\t\t\t\tlet name = input.slice(start, end - 1);\n\n\t\t\t\tbalanced.push([name, start, end]);\n\n\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\tname = name.toLowerCase();\n\n\t\t\t\t\tif (name === \":global\") {\n\t\t\t\t\t\tmodeData = \"global\";\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t} else if (name === \":local\") {\n\t\t\t\t\t\tmodeData = \"local\";\n\t\t\t\t\t\tconst dep = new ConstDependency(\"\", [start, end]);\n\t\t\t\t\t\tmodule.addPresentationalDependency(dep);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn end;\n\t\t\t},\n\t\t\tcomma: (input, start, end) => {\n\t\t\t\tif (this.allowModeSwitch) {\n\t\t\t\t\t// Reset stack for `:global .class :local .class-other` selector after\n\t\t\t\t\tmodeData = undefined;\n\n\t\t\t\t\tswitch (scope) {\n\t\t\t\t\t\tcase CSS_MODE_IN_BLOCK: {\n\t\t\t\t\t\t\tif (isLocalMode()) {\n\t\t\t\t\t\t\t\tprocessDeclarationValueDone(input);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn end;\n\t\t\t}\n\t\t});\n\n\t\tif (oldDefaultMode) {\n\t\t\tthis.defaultMode = oldDefaultMode;\n\t\t}\n\n\t\tmodule.buildInfo.strict = true;\n\t\tmodule.buildMeta.exportsType = \"namespace\";\n\t\tmodule.addDependency(new StaticExportsDependency([], true));\n\t\treturn state;\n\t}\n}\n\nmodule.exports = CssParser;\n"]},"metadata":{},"sourceType":"script"}