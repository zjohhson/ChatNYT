{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ContextDependency = require(\"./ContextDependency\");\n\nconst ContextDependencyTemplateAsRequireCall = require(\"./ContextDependencyTemplateAsRequireCall\");\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n\nclass CommonJsRequireContextDependency extends ContextDependency {\n  /**\n   * @param {TODO} options options for the context module\n   * @param {Range} range location in source code\n   * @param {Range | undefined} valueRange location of the require call\n   * @param {boolean | string } inShorthand true or name\n   * @param {string} context context\n   */\n  constructor(options, range, valueRange, inShorthand, context) {\n    super(options, context);\n    this.range = range;\n    this.valueRange = valueRange; // inShorthand must be serialized by subclasses that use it\n\n    this.inShorthand = inShorthand;\n  }\n\n  get type() {\n    return \"cjs require context\";\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.range);\n    write(this.valueRange);\n    write(this.inShorthand);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.range = read();\n    this.valueRange = read();\n    this.inShorthand = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(CommonJsRequireContextDependency, \"webpack/lib/dependencies/CommonJsRequireContextDependency\");\nCommonJsRequireContextDependency.Template = ContextDependencyTemplateAsRequireCall;\nmodule.exports = CommonJsRequireContextDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/CommonJsRequireContextDependency.js"],"names":["makeSerializable","require","ContextDependency","ContextDependencyTemplateAsRequireCall","CommonJsRequireContextDependency","constructor","options","range","valueRange","inShorthand","context","type","serialize","write","deserialize","read","Template","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAME,sCAAsC,GAAGF,OAAO,CAAC,0CAAD,CAAtD;AAEA;;AACA;;AACA;;;AAEA,MAAMG,gCAAN,SAA+CF,iBAA/C,CAAiE;AAChE;AACD;AACA;AACA;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,UAAjB,EAA6BC,WAA7B,EAA0CC,OAA1C,EAAmD;AAC7D,UAAMJ,OAAN,EAAeI,OAAf;AAEA,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKC,UAAL,GAAkBA,UAAlB,CAJ6D,CAK7D;;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA;;AAEO,MAAJE,IAAI,GAAG;AACV,WAAO,qBAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,SAAS,CAACF,OAAD,EAAU;AAClB,UAAM;AAAEG,MAAAA;AAAF,QAAYH,OAAlB;AAEAG,IAAAA,KAAK,CAAC,KAAKN,KAAN,CAAL;AACAM,IAAAA,KAAK,CAAC,KAAKL,UAAN,CAAL;AACAK,IAAAA,KAAK,CAAC,KAAKJ,WAAN,CAAL;AAEA,UAAMG,SAAN,CAAgBF,OAAhB;AACA;AAED;AACD;AACA;;;AACCI,EAAAA,WAAW,CAACJ,OAAD,EAAU;AACpB,UAAM;AAAEK,MAAAA;AAAF,QAAWL,OAAjB;AAEA,SAAKH,KAAL,GAAaQ,IAAI,EAAjB;AACA,SAAKP,UAAL,GAAkBO,IAAI,EAAtB;AACA,SAAKN,WAAL,GAAmBM,IAAI,EAAvB;AAEA,UAAMD,WAAN,CAAkBJ,OAAlB;AACA;;AA7C+D;;AAgDjEV,gBAAgB,CACfI,gCADe,EAEf,2DAFe,CAAhB;AAKAA,gCAAgC,CAACY,QAAjC,GACCb,sCADD;AAGAc,MAAM,CAACC,OAAP,GAAiBd,gCAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ContextDependency = require(\"./ContextDependency\");\nconst ContextDependencyTemplateAsRequireCall = require(\"./ContextDependencyTemplateAsRequireCall\");\n\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass CommonJsRequireContextDependency extends ContextDependency {\n\t/**\n\t * @param {TODO} options options for the context module\n\t * @param {Range} range location in source code\n\t * @param {Range | undefined} valueRange location of the require call\n\t * @param {boolean | string } inShorthand true or name\n\t * @param {string} context context\n\t */\n\tconstructor(options, range, valueRange, inShorthand, context) {\n\t\tsuper(options, context);\n\n\t\tthis.range = range;\n\t\tthis.valueRange = valueRange;\n\t\t// inShorthand must be serialized by subclasses that use it\n\t\tthis.inShorthand = inShorthand;\n\t}\n\n\tget type() {\n\t\treturn \"cjs require context\";\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.range);\n\t\twrite(this.valueRange);\n\t\twrite(this.inShorthand);\n\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.range = read();\n\t\tthis.valueRange = read();\n\t\tthis.inShorthand = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tCommonJsRequireContextDependency,\n\t\"webpack/lib/dependencies/CommonJsRequireContextDependency\"\n);\n\nCommonJsRequireContextDependency.Template =\n\tContextDependencyTemplateAsRequireCall;\n\nmodule.exports = CommonJsRequireContextDependency;\n"]},"metadata":{},"sourceType":"script"}