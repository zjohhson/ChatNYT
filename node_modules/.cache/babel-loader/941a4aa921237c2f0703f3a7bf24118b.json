{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n\nclass FallbackDependency extends Dependency {\n  /**\n   * @param {string[]} requests requests\n   */\n  constructor(requests) {\n    super();\n    this.requests = requests;\n  }\n  /**\n   * @returns {string | null} an identifier to merge equal requests\n   */\n\n\n  getResourceIdentifier() {\n    return `fallback ${this.requests.join(\" \")}`;\n  }\n\n  get type() {\n    return \"fallback\";\n  }\n\n  get category() {\n    return \"esm\";\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.requests);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {FallbackDependency} deserialize fallback dependency\n   */\n\n\n  static deserialize(context) {\n    const {\n      read\n    } = context;\n    const obj = new FallbackDependency(read());\n    obj.deserialize(context);\n    return obj;\n  }\n\n}\n\nmakeSerializable(FallbackDependency, \"webpack/lib/container/FallbackDependency\");\nmodule.exports = FallbackDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/container/FallbackDependency.js"],"names":["Dependency","require","makeSerializable","FallbackDependency","constructor","requests","getResourceIdentifier","join","type","category","serialize","context","write","deserialize","read","obj","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;AAEA;;AACA;;;AAEA,MAAME,kBAAN,SAAiCH,UAAjC,CAA4C;AAC3C;AACD;AACA;AACCI,EAAAA,WAAW,CAACC,QAAD,EAAW;AACrB;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,qBAAqB,GAAG;AACvB,WAAQ,YAAW,KAAKD,QAAL,CAAcE,IAAd,CAAmB,GAAnB,CAAwB,EAA3C;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAO,UAAP;AACA;;AAEW,MAARC,QAAQ,GAAG;AACd,WAAO,KAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,OAAlB;AACAC,IAAAA,KAAK,CAAC,KAAKP,QAAN,CAAL;AACA,UAAMK,SAAN,CAAgBC,OAAhB;AACA;AAED;AACD;AACA;AACA;;;AACmB,SAAXE,WAAW,CAACF,OAAD,EAAU;AAC3B,UAAM;AAAEG,MAAAA;AAAF,QAAWH,OAAjB;AACA,UAAMI,GAAG,GAAG,IAAIZ,kBAAJ,CAAuBW,IAAI,EAA3B,CAAZ;AACAC,IAAAA,GAAG,CAACF,WAAJ,CAAgBF,OAAhB;AACA,WAAOI,GAAP;AACA;;AA1C0C;;AA6C5Cb,gBAAgB,CACfC,kBADe,EAEf,0CAFe,CAAhB;AAKAa,MAAM,CAACC,OAAP,GAAiBd,kBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst Dependency = require(\"../Dependency\");\nconst makeSerializable = require(\"../util/makeSerializable\");\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass FallbackDependency extends Dependency {\n\t/**\n\t * @param {string[]} requests requests\n\t */\n\tconstructor(requests) {\n\t\tsuper();\n\t\tthis.requests = requests;\n\t}\n\n\t/**\n\t * @returns {string | null} an identifier to merge equal requests\n\t */\n\tgetResourceIdentifier() {\n\t\treturn `fallback ${this.requests.join(\" \")}`;\n\t}\n\n\tget type() {\n\t\treturn \"fallback\";\n\t}\n\n\tget category() {\n\t\treturn \"esm\";\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.requests);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {FallbackDependency} deserialize fallback dependency\n\t */\n\tstatic deserialize(context) {\n\t\tconst { read } = context;\n\t\tconst obj = new FallbackDependency(read());\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmakeSerializable(\n\tFallbackDependency,\n\t\"webpack/lib/container/FallbackDependency\"\n);\n\nmodule.exports = FallbackDependency;\n"]},"metadata":{},"sourceType":"script"}