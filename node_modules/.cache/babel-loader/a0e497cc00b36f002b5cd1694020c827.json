{"ast":null,"code":"var _jsxFileName = \"/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/AIAssistance.js\";\nimport React from 'react'; // import { Configuration, OpenAIApi } from 'openai-api'\n\nimport OpenAI from 'openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: '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',\n  dangerouslyAllowBrowser: true // This is also the default, can be omitted\n\n});\nexport default function AIAssistance(_ref) {\n  let {\n    solution,\n    guesses,\n    turn\n  } = _ref;\n  let response = '';\n  let mostRecent = guesses[turn - 1].map((l, i) => {\n    return l.key;\n  }).join('');\n\n  const chatCompletion = async () => {\n    let response = await openai.chat.completions.create({\n      model: \"gpt-3.5-turbo\",\n      messages: [{\n        \"role\": \"user\",\n        \"content\": `we are playing a game where I have to guess a 5 letter secret word. You know the word, but I do not. I need your help in giving me hints about the secret word without actually revealing the word itself. You will help me by relating the most previous word that I just guessed with the secret word. Again, you will not reveal the word. For example, if my most recent guess was spoon, and the word is pasta, you would give a hint such as \\\"your guess spoon relates to the hidden word in that they both pertain to food. the difference is that spoon is a possible vessel in which you can eat the secret word with.\\\" for this scenario, my most recent guess was ${mostRecent}, and the secret word is ${solution}. please give me a hint, using the instructions I just gave, without revealing the secret word ${solution}. It is incredibly important that you response does not include the word ${solution}!`\n      }],\n      temperature: 0.2,\n      max_tokens: 1000,\n      frequency_penalty: 0.0\n    });\n    return response['choices'][0]['message']['content'];\n  };\n\n  const getResponse = () => {\n    response = chatCompletion();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getResponse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = AIAssistance;\n\nvar _c;\n\n$RefreshReg$(_c, \"AIAssistance\");","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/src/components/AIAssistance.js"],"names":["React","OpenAI","openai","apiKey","dangerouslyAllowBrowser","AIAssistance","solution","guesses","turn","response","mostRecent","map","l","i","key","join","chatCompletion","chat","completions","create","model","messages","temperature","max_tokens","frequency_penalty","getResponse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW;AACxBE,EAAAA,MAAM,EAAE,qDADgB;AAExBC,EAAAA,uBAAuB,EAAE,IAFD,CAEM;;AAFN,CAAX,CAAf;AAKA,eAAe,SAASC,YAAT,OAAiD;AAAA,MAA3B;AAACC,IAAAA,QAAD;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,GAA2B;AAC5D,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,UAAU,GAAGH,OAAO,CAACC,IAAI,GAAC,CAAN,CAAP,CAAgBG,GAAhB,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3C,WAAOD,CAAC,CAACE,GAAT;AACH,GAFgB,EAEdC,IAFc,CAET,EAFS,CAAjB;;AAGA,QAAMC,cAAc,GAAG,YAAW;AAC9B,QAAIP,QAAQ,GAAG,MAAMP,MAAM,CAACe,IAAP,CAAYC,WAAZ,CAAwBC,MAAxB,CAA+B;AAChDC,MAAAA,KAAK,EAAE,eADyC;AAEhDC,MAAAA,QAAQ,EAAE,CAAC;AAAC,gBAAQ,MAAT;AAAiB,mBAAY,kpBAAipBX,UAAW,4BAA2BJ,QAAS,kGAAiGA,QAAS,4EAA2EA,QAAS;AAA35B,OAAD,CAFsC;AAGhDgB,MAAAA,WAAW,EAAE,GAHmC;AAIhDC,MAAAA,UAAU,EAAE,IAJoC;AAKhDC,MAAAA,iBAAiB,EAAE;AAL6B,KAA/B,CAArB;AAOA,WAAOf,QAAQ,CAAC,SAAD,CAAR,CAAoB,CAApB,EAAuB,SAAvB,EAAkC,SAAlC,CAAP;AACH,GATD;;AAUA,QAAMgB,WAAW,GAAG,MAAM;AACtBhB,IAAAA,QAAQ,GAAGO,cAAc,EAAzB;AACH,GAFD;;AAGF,sBACE;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAES,WAAW;AAA5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAIhB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KAxBuBJ,Y","sourcesContent":["import React from 'react'\n// import { Configuration, OpenAIApi } from 'openai-api'\nimport OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: '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',\n  dangerouslyAllowBrowser: true // This is also the default, can be omitted\n});\n\nexport default function AIAssistance({solution, guesses, turn}) {\n    let response = '';\n    let mostRecent = guesses[turn-1].map((l, i) => {\n        return l.key\n    }).join('')\n    const chatCompletion = async() => {\n        let response = await openai.chat.completions.create({\n            model: \"gpt-3.5-turbo\",\n            messages: [{\"role\": \"user\", \"content\": `we are playing a game where I have to guess a 5 letter secret word. You know the word, but I do not. I need your help in giving me hints about the secret word without actually revealing the word itself. You will help me by relating the most previous word that I just guessed with the secret word. Again, you will not reveal the word. For example, if my most recent guess was spoon, and the word is pasta, you would give a hint such as \\\"your guess spoon relates to the hidden word in that they both pertain to food. the difference is that spoon is a possible vessel in which you can eat the secret word with.\\\" for this scenario, my most recent guess was ${mostRecent}, and the secret word is ${solution}. please give me a hint, using the instructions I just gave, without revealing the secret word ${solution}. It is incredibly important that you response does not include the word ${solution}!`}],\n            temperature: 0.2,\n            max_tokens: 1000,\n            frequency_penalty: 0.0\n        });\n        return response['choices'][0]['message']['content']\n    }\n    const getResponse = () => {\n        response = chatCompletion();\n    }\n  return (\n    <div>\n        <button onClick={getResponse()}></button>\n        <p>{response}</p> \n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}