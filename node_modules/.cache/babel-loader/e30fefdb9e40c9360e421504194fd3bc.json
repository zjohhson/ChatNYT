{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\"use strict\";\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass SetObjectSerializer {\n  /**\n   * @template T\n   * @param {Set<T>} obj set\n   * @param {ObjectSerializerContext} context context\n   */\n  serialize(obj, context) {\n    context.write(obj.size);\n\n    for (const value of obj) {\n      context.write(value);\n    }\n  }\n  /**\n   * @template T\n   * @param {ObjectDeserializerContext} context context\n   * @returns {Set<T>} date\n   */\n\n\n  deserialize(context) {\n    /** @type {number} */\n    let size = context.read();\n    /** @type {Set<T>} */\n\n    const set = new Set();\n\n    for (let i = 0; i < size; i++) {\n      set.add(context.read());\n    }\n\n    return set;\n  }\n\n}\n\nmodule.exports = SetObjectSerializer;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/serialization/SetObjectSerializer.js"],"names":["SetObjectSerializer","serialize","obj","context","write","size","value","deserialize","read","set","Set","i","add","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;AAEA;;AACA;;AAEA,MAAMA,mBAAN,CAA0B;AACzB;AACD;AACA;AACA;AACA;AACCC,EAAAA,SAAS,CAACC,GAAD,EAAMC,OAAN,EAAe;AACvBA,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAG,CAACG,IAAlB;;AACA,SAAK,MAAMC,KAAX,IAAoBJ,GAApB,EAAyB;AACxBC,MAAAA,OAAO,CAACC,KAAR,CAAcE,KAAd;AACA;AACD;AACD;AACD;AACA;AACA;AACA;;;AACCC,EAAAA,WAAW,CAACJ,OAAD,EAAU;AACpB;AACA,QAAIE,IAAI,GAAGF,OAAO,CAACK,IAAR,EAAX;AACA;;AACA,UAAMC,GAAG,GAAG,IAAIC,GAAJ,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAApB,EAA0BM,CAAC,EAA3B,EAA+B;AAC9BF,MAAAA,GAAG,CAACG,GAAJ,CAAQT,OAAO,CAACK,IAAR,EAAR;AACA;;AACD,WAAOC,GAAP;AACA;;AA1BwB;;AA6B1BI,MAAM,CAACC,OAAP,GAAiBd,mBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n*/\n\n\"use strict\";\n\n/** @typedef {import(\"./ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"./ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass SetObjectSerializer {\n\t/**\n\t * @template T\n\t * @param {Set<T>} obj set\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(obj, context) {\n\t\tcontext.write(obj.size);\n\t\tfor (const value of obj) {\n\t\t\tcontext.write(value);\n\t\t}\n\t}\n\t/**\n\t * @template T\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {Set<T>} date\n\t */\n\tdeserialize(context) {\n\t\t/** @type {number} */\n\t\tlet size = context.read();\n\t\t/** @type {Set<T>} */\n\t\tconst set = new Set();\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tset.add(context.read());\n\t\t}\n\t\treturn set;\n\t}\n}\n\nmodule.exports = SetObjectSerializer;\n"]},"metadata":{},"sourceType":"script"}