{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberLiteralFromRaw = numberLiteralFromRaw;\nexports.instruction = instruction;\nexports.objectInstruction = objectInstruction;\nexports.withLoc = withLoc;\nexports.withRaw = withRaw;\nexports.funcParam = funcParam;\nexports.indexLiteral = indexLiteral;\nexports.memIndexLiteral = memIndexLiteral;\n\nvar _helperNumbers = require(\"@webassemblyjs/helper-numbers\");\n\nvar _nodes = require(\"./nodes\");\n\nfunction numberLiteralFromRaw(rawValue) {\n  var instructionType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"i32\";\n  var original = rawValue; // Remove numeric separators _\n\n  if (typeof rawValue === \"string\") {\n    rawValue = rawValue.replace(/_/g, \"\");\n  }\n\n  if (typeof rawValue === \"number\") {\n    return (0, _nodes.numberLiteral)(rawValue, String(original));\n  } else {\n    switch (instructionType) {\n      case \"i32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _helperNumbers.parse32I)(rawValue), String(original));\n        }\n\n      case \"u32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _helperNumbers.parseU32)(rawValue), String(original));\n        }\n\n      case \"i64\":\n        {\n          return (0, _nodes.longNumberLiteral)((0, _helperNumbers.parse64I)(rawValue), String(original));\n        }\n\n      case \"f32\":\n        {\n          return (0, _nodes.floatLiteral)((0, _helperNumbers.parse32F)(rawValue), (0, _helperNumbers.isNanLiteral)(rawValue), (0, _helperNumbers.isInfLiteral)(rawValue), String(original));\n        }\n      // f64\n\n      default:\n        {\n          return (0, _nodes.floatLiteral)((0, _helperNumbers.parse64F)(rawValue), (0, _helperNumbers.isNanLiteral)(rawValue), (0, _helperNumbers.isInfLiteral)(rawValue), String(original));\n        }\n    }\n  }\n}\n\nfunction instruction(id) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var namedArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return (0, _nodes.instr)(id, undefined, args, namedArgs);\n}\n\nfunction objectInstruction(id, object) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var namedArgs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return (0, _nodes.instr)(id, object, args, namedArgs);\n}\n/**\n * Decorators\n */\n\n\nfunction withLoc(n, end, start) {\n  var loc = {\n    start: start,\n    end: end\n  };\n  n.loc = loc;\n  return n;\n}\n\nfunction withRaw(n, raw) {\n  n.raw = raw;\n  return n;\n}\n\nfunction funcParam(valtype, id) {\n  return {\n    id: id,\n    valtype: valtype\n  };\n}\n\nfunction indexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}\n\nfunction memIndexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/@webassemblyjs/ast/lib/node-helpers.js"],"names":["Object","defineProperty","exports","value","numberLiteralFromRaw","instruction","objectInstruction","withLoc","withRaw","funcParam","indexLiteral","memIndexLiteral","_helperNumbers","require","_nodes","rawValue","instructionType","arguments","length","undefined","original","replace","numberLiteral","String","parse32I","parseU32","longNumberLiteral","parse64I","floatLiteral","parse32F","isNanLiteral","isInfLiteral","parse64F","id","args","namedArgs","instr","object","n","end","start","loc","raw","valtype","x"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,oBAAR,GAA+BA,oBAA/B;AACAF,OAAO,CAACG,WAAR,GAAsBA,WAAtB;AACAH,OAAO,CAACI,iBAAR,GAA4BA,iBAA5B;AACAJ,OAAO,CAACK,OAAR,GAAkBA,OAAlB;AACAL,OAAO,CAACM,OAAR,GAAkBA,OAAlB;AACAN,OAAO,CAACO,SAAR,GAAoBA,SAApB;AACAP,OAAO,CAACQ,YAAR,GAAuBA,YAAvB;AACAR,OAAO,CAACS,eAAR,GAA0BA,eAA1B;;AAEA,IAAIC,cAAc,GAAGC,OAAO,CAAC,+BAAD,CAA5B;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,SAAD,CAApB;;AAEA,SAAST,oBAAT,CAA8BW,QAA9B,EAAwC;AACtC,MAAIC,eAAe,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA1F;AACA,MAAIG,QAAQ,GAAGL,QAAf,CAFsC,CAEb;;AAEzB,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChCA,IAAAA,QAAQ,GAAGA,QAAQ,CAACM,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,CAAX;AACD;;AAED,MAAI,OAAON,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WAAO,CAAC,GAAGD,MAAM,CAACQ,aAAX,EAA0BP,QAA1B,EAAoCQ,MAAM,CAACH,QAAD,CAA1C,CAAP;AACD,GAFD,MAEO;AACL,YAAQJ,eAAR;AACE,WAAK,KAAL;AACE;AACE,iBAAO,CAAC,GAAGF,MAAM,CAACQ,aAAX,EAA0B,CAAC,GAAGV,cAAc,CAACY,QAAnB,EAA6BT,QAA7B,CAA1B,EAAkEQ,MAAM,CAACH,QAAD,CAAxE,CAAP;AACD;;AAEH,WAAK,KAAL;AACE;AACE,iBAAO,CAAC,GAAGN,MAAM,CAACQ,aAAX,EAA0B,CAAC,GAAGV,cAAc,CAACa,QAAnB,EAA6BV,QAA7B,CAA1B,EAAkEQ,MAAM,CAACH,QAAD,CAAxE,CAAP;AACD;;AAEH,WAAK,KAAL;AACE;AACE,iBAAO,CAAC,GAAGN,MAAM,CAACY,iBAAX,EAA8B,CAAC,GAAGd,cAAc,CAACe,QAAnB,EAA6BZ,QAA7B,CAA9B,EAAsEQ,MAAM,CAACH,QAAD,CAA5E,CAAP;AACD;;AAEH,WAAK,KAAL;AACE;AACE,iBAAO,CAAC,GAAGN,MAAM,CAACc,YAAX,EAAyB,CAAC,GAAGhB,cAAc,CAACiB,QAAnB,EAA6Bd,QAA7B,CAAzB,EAAiE,CAAC,GAAGH,cAAc,CAACkB,YAAnB,EAAiCf,QAAjC,CAAjE,EAA6G,CAAC,GAAGH,cAAc,CAACmB,YAAnB,EAAiChB,QAAjC,CAA7G,EAAyJQ,MAAM,CAACH,QAAD,CAA/J,CAAP;AACD;AACH;;AAEA;AACE;AACE,iBAAO,CAAC,GAAGN,MAAM,CAACc,YAAX,EAAyB,CAAC,GAAGhB,cAAc,CAACoB,QAAnB,EAA6BjB,QAA7B,CAAzB,EAAiE,CAAC,GAAGH,cAAc,CAACkB,YAAnB,EAAiCf,QAAjC,CAAjE,EAA6G,CAAC,GAAGH,cAAc,CAACmB,YAAnB,EAAiChB,QAAjC,CAA7G,EAAyJQ,MAAM,CAACH,QAAD,CAA/J,CAAP;AACD;AAzBL;AA2BD;AACF;;AAED,SAASf,WAAT,CAAqB4B,EAArB,EAAyB;AACvB,MAAIC,IAAI,GAAGjB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AACA,MAAIkB,SAAS,GAAGlB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAApF;AACA,SAAO,CAAC,GAAGH,MAAM,CAACsB,KAAX,EAAkBH,EAAlB,EAAsBd,SAAtB,EAAiCe,IAAjC,EAAuCC,SAAvC,CAAP;AACD;;AAED,SAAS7B,iBAAT,CAA2B2B,EAA3B,EAA+BI,MAA/B,EAAuC;AACrC,MAAIH,IAAI,GAAGjB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAA/E;AACA,MAAIkB,SAAS,GAAGlB,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAApF;AACA,SAAO,CAAC,GAAGH,MAAM,CAACsB,KAAX,EAAkBH,EAAlB,EAAsBI,MAAtB,EAA8BH,IAA9B,EAAoCC,SAApC,CAAP;AACD;AACD;AACA;AACA;;;AAGA,SAAS5B,OAAT,CAAiB+B,CAAjB,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgC;AAC9B,MAAIC,GAAG,GAAG;AACRD,IAAAA,KAAK,EAAEA,KADC;AAERD,IAAAA,GAAG,EAAEA;AAFG,GAAV;AAIAD,EAAAA,CAAC,CAACG,GAAF,GAAQA,GAAR;AACA,SAAOH,CAAP;AACD;;AAED,SAAS9B,OAAT,CAAiB8B,CAAjB,EAAoBI,GAApB,EAAyB;AACvBJ,EAAAA,CAAC,CAACI,GAAF,GAAQA,GAAR;AACA,SAAOJ,CAAP;AACD;;AAED,SAAS7B,SAAT,CAAmBkC,OAAnB,EAA4BV,EAA5B,EAAgC;AAC9B,SAAO;AACLA,IAAAA,EAAE,EAAEA,EADC;AAELU,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID;;AAED,SAASjC,YAAT,CAAsBP,KAAtB,EAA6B;AAC3B;AACA,MAAIyC,CAAC,GAAGxC,oBAAoB,CAACD,KAAD,EAAQ,KAAR,CAA5B;AACA,SAAOyC,CAAP;AACD;;AAED,SAASjC,eAAT,CAAyBR,KAAzB,EAAgC;AAC9B;AACA,MAAIyC,CAAC,GAAGxC,oBAAoB,CAACD,KAAD,EAAQ,KAAR,CAA5B;AACA,SAAOyC,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.numberLiteralFromRaw = numberLiteralFromRaw;\nexports.instruction = instruction;\nexports.objectInstruction = objectInstruction;\nexports.withLoc = withLoc;\nexports.withRaw = withRaw;\nexports.funcParam = funcParam;\nexports.indexLiteral = indexLiteral;\nexports.memIndexLiteral = memIndexLiteral;\n\nvar _helperNumbers = require(\"@webassemblyjs/helper-numbers\");\n\nvar _nodes = require(\"./nodes\");\n\nfunction numberLiteralFromRaw(rawValue) {\n  var instructionType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"i32\";\n  var original = rawValue; // Remove numeric separators _\n\n  if (typeof rawValue === \"string\") {\n    rawValue = rawValue.replace(/_/g, \"\");\n  }\n\n  if (typeof rawValue === \"number\") {\n    return (0, _nodes.numberLiteral)(rawValue, String(original));\n  } else {\n    switch (instructionType) {\n      case \"i32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _helperNumbers.parse32I)(rawValue), String(original));\n        }\n\n      case \"u32\":\n        {\n          return (0, _nodes.numberLiteral)((0, _helperNumbers.parseU32)(rawValue), String(original));\n        }\n\n      case \"i64\":\n        {\n          return (0, _nodes.longNumberLiteral)((0, _helperNumbers.parse64I)(rawValue), String(original));\n        }\n\n      case \"f32\":\n        {\n          return (0, _nodes.floatLiteral)((0, _helperNumbers.parse32F)(rawValue), (0, _helperNumbers.isNanLiteral)(rawValue), (0, _helperNumbers.isInfLiteral)(rawValue), String(original));\n        }\n      // f64\n\n      default:\n        {\n          return (0, _nodes.floatLiteral)((0, _helperNumbers.parse64F)(rawValue), (0, _helperNumbers.isNanLiteral)(rawValue), (0, _helperNumbers.isInfLiteral)(rawValue), String(original));\n        }\n    }\n  }\n}\n\nfunction instruction(id) {\n  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var namedArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return (0, _nodes.instr)(id, undefined, args, namedArgs);\n}\n\nfunction objectInstruction(id, object) {\n  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var namedArgs = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return (0, _nodes.instr)(id, object, args, namedArgs);\n}\n/**\n * Decorators\n */\n\n\nfunction withLoc(n, end, start) {\n  var loc = {\n    start: start,\n    end: end\n  };\n  n.loc = loc;\n  return n;\n}\n\nfunction withRaw(n, raw) {\n  n.raw = raw;\n  return n;\n}\n\nfunction funcParam(valtype, id) {\n  return {\n    id: id,\n    valtype: valtype\n  };\n}\n\nfunction indexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}\n\nfunction memIndexLiteral(value) {\n  // $FlowIgnore\n  var x = numberLiteralFromRaw(value, \"u32\");\n  return x;\n}"]},"metadata":{},"sourceType":"script"}