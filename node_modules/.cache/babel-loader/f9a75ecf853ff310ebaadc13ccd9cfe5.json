{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {}\nexport class APIError extends OpenAIError {\n  constructor(status, error, message, headers) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    const data = error;\n    this.error = data;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n\n  static makeMessage(status, error, message) {\n    const msg = error?.message ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n\n    if (msg) {\n      return msg;\n    }\n\n    return '(no status code or body)';\n  }\n\n  static generate(status, errorResponse, message, headers) {\n    if (!status) {\n      return new APIConnectionError({\n        cause: castToError(errorResponse)\n      });\n    }\n\n    const error = errorResponse?.['error'];\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n\n}\nexport class APIUserAbortError extends APIError {\n  constructor() {\n    let {\n      message\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n    this.status = undefined;\n  }\n\n}\nexport class APIConnectionError extends APIError {\n  constructor(_ref) {\n    let {\n      message,\n      cause\n    } = _ref;\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    this.status = undefined; // in some environments the 'cause' property is already declared\n    // @ts-ignore\n\n    if (cause) this.cause = cause;\n  }\n\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor() {\n    let {\n      message\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      message: message ?? 'Request timed out.'\n    });\n  }\n\n}\nexport class BadRequestError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 400;\n  }\n\n}\nexport class AuthenticationError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 401;\n  }\n\n}\nexport class PermissionDeniedError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 403;\n  }\n\n}\nexport class NotFoundError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 404;\n  }\n\n}\nexport class ConflictError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 409;\n  }\n\n}\nexport class UnprocessableEntityError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 422;\n  }\n\n}\nexport class RateLimitError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 429;\n  }\n\n}\nexport class InternalServerError extends APIError {}","map":{"version":3,"mappings":"AAAA;SAESA,mBAAsB;AAE/B,OAAM,MAAOC,WAAP,SAA2BC,KAA3B,CAAgC;AAEtC,OAAM,MAAOC,QAAP,SAAwBF,WAAxB,CAAmC;AASvCG,cACEC,MADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,OAJF,EAI8B;AAE5B,UAAM,GAAGL,QAAQ,CAACM,WAAT,CAAqBJ,MAArB,EAA6BC,KAA7B,EAAoCC,OAApC,CAA4C,EAArD;AACA,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKG,OAAL,GAAeA,OAAf;AAEA,UAAME,IAAI,GAAGJ,KAAb;AACA,SAAKA,KAAL,GAAaI,IAAb;AACA,SAAKC,IAAL,GAAYD,IAAI,GAAG,MAAH,CAAhB;AACA,SAAKE,KAAL,GAAaF,IAAI,GAAG,OAAH,CAAjB;AACA,SAAKG,IAAL,GAAYH,IAAI,GAAG,MAAH,CAAhB;AACD;;AAEyB,SAAXD,WAAW,CAACJ,MAAD,EAA6BC,KAA7B,EAAyCC,OAAzC,EAAoE;AAC5F,UAAMO,GAAG,GACPR,KAAK,EAAEC,OAAP,GACE,OAAOD,KAAK,CAACC,OAAb,KAAyB,QAAzB,GAAoCD,KAAK,CAACC,OAA1C,GACEQ,IAAI,CAACC,SAAL,CAAeV,KAAK,CAACC,OAArB,CAFJ,GAGED,KAAK,GAAGS,IAAI,CAACC,SAAL,CAAeV,KAAf,CAAH,GACLC,OALJ;;AAOA,QAAIF,MAAM,IAAIS,GAAd,EAAmB;AACjB,aAAO,GAAGT,MAAM,IAAIS,GAAG,EAAvB;AACD;;AACD,QAAIT,MAAJ,EAAY;AACV,aAAO,GAAGA,MAAM,wBAAhB;AACD;;AACD,QAAIS,GAAJ,EAAS;AACP,aAAOA,GAAP;AACD;;AACD,WAAO,0BAAP;AACD;;AAEc,SAARG,QAAQ,CACbZ,MADa,EAEba,aAFa,EAGbX,OAHa,EAIbC,OAJa,EAIe;AAE5B,QAAI,CAACH,MAAL,EAAa;AACX,aAAO,IAAIc,kBAAJ,CAAuB;AAAEC,aAAK,EAAEpB,WAAW,CAACkB,aAAD;AAApB,OAAvB,CAAP;AACD;;AAED,UAAMZ,KAAK,GAAIY,aAAqC,GAAG,OAAH,CAApD;;AAEA,QAAIb,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,IAAIgB,eAAJ,CAAoBhB,MAApB,EAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,OAA5C,CAAP;AACD;;AAED,QAAIH,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,IAAIiB,mBAAJ,CAAwBjB,MAAxB,EAAgCC,KAAhC,EAAuCC,OAAvC,EAAgDC,OAAhD,CAAP;AACD;;AAED,QAAIH,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,IAAIkB,qBAAJ,CAA0BlB,MAA1B,EAAkCC,KAAlC,EAAyCC,OAAzC,EAAkDC,OAAlD,CAAP;AACD;;AAED,QAAIH,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,IAAImB,aAAJ,CAAkBnB,MAAlB,EAA0BC,KAA1B,EAAiCC,OAAjC,EAA0CC,OAA1C,CAAP;AACD;;AAED,QAAIH,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,IAAIoB,aAAJ,CAAkBpB,MAAlB,EAA0BC,KAA1B,EAAiCC,OAAjC,EAA0CC,OAA1C,CAAP;AACD;;AAED,QAAIH,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,IAAIqB,wBAAJ,CAA6BrB,MAA7B,EAAqCC,KAArC,EAA4CC,OAA5C,EAAqDC,OAArD,CAAP;AACD;;AAED,QAAIH,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAO,IAAIsB,cAAJ,CAAmBtB,MAAnB,EAA2BC,KAA3B,EAAkCC,OAAlC,EAA2CC,OAA3C,CAAP;AACD;;AAED,QAAIH,MAAM,IAAI,GAAd,EAAmB;AACjB,aAAO,IAAIuB,mBAAJ,CAAwBvB,MAAxB,EAAgCC,KAAhC,EAAuCC,OAAvC,EAAgDC,OAAhD,CAAP;AACD;;AAED,WAAO,IAAIL,QAAJ,CAAaE,MAAb,EAAqBC,KAArB,EAA4BC,OAA5B,EAAqCC,OAArC,CAAP;AACD;;AA3FsC;AA8FzC,OAAM,MAAOqB,iBAAP,SAAiC1B,QAAjC,CAAyC;AAG7CC,gBAAkD;AAAA,QAAtC;AAAEG;AAAF,KAAsC,uEAAF,EAAE;AAChD,UAAMuB,SAAN,EAAiBA,SAAjB,EAA4BvB,OAAO,IAAI,sBAAvC,EAA+DuB,SAA/D;AAHgB,kBAAoBA,SAApB;AAIjB;;AAL4C;AAQ/C,OAAM,MAAOX,kBAAP,SAAkChB,QAAlC,CAA0C;AAG9CC,oBAA+E;AAAA,QAAnE;AAAEG,aAAF;AAAWa;AAAX,KAAmE;AAC7E,UAAMU,SAAN,EAAiBA,SAAjB,EAA4BvB,OAAO,IAAI,mBAAvC,EAA4DuB,SAA5D;AAHgB,kBAAoBA,SAApB,CAE6D,CAE7E;AACA;;AACA,QAAIV,KAAJ,EAAW,KAAKA,KAAL,GAAaA,KAAb;AACZ;;AAR6C;AAWhD,OAAM,MAAOW,yBAAP,SAAyCZ,kBAAzC,CAA2D;AAC/Df,gBAAkD;AAAA,QAAtC;AAAEG;AAAF,KAAsC,uEAAF,EAAE;AAChD,UAAM;AAAEA,aAAO,EAAEA,OAAO,IAAI;AAAtB,KAAN;AACD;;AAH8D;AAMjE,OAAM,MAAOc,eAAP,SAA+BlB,QAA/B,CAAuC;AAA7CC;;AACoB,kBAAc,GAAd;AACnB;;AAF4C;AAI7C,OAAM,MAAOkB,mBAAP,SAAmCnB,QAAnC,CAA2C;AAAjDC;;AACoB,kBAAc,GAAd;AACnB;;AAFgD;AAIjD,OAAM,MAAOmB,qBAAP,SAAqCpB,QAArC,CAA6C;AAAnDC;;AACoB,kBAAc,GAAd;AACnB;;AAFkD;AAInD,OAAM,MAAOoB,aAAP,SAA6BrB,QAA7B,CAAqC;AAA3CC;;AACoB,kBAAc,GAAd;AACnB;;AAF0C;AAI3C,OAAM,MAAOqB,aAAP,SAA6BtB,QAA7B,CAAqC;AAA3CC;;AACoB,kBAAc,GAAd;AACnB;;AAF0C;AAI3C,OAAM,MAAOsB,wBAAP,SAAwCvB,QAAxC,CAAgD;AAAtDC;;AACoB,kBAAc,GAAd;AACnB;;AAFqD;AAItD,OAAM,MAAOuB,cAAP,SAA8BxB,QAA9B,CAAsC;AAA5CC;;AACoB,kBAAc,GAAd;AACnB;;AAF2C;AAI5C,OAAM,MAAOwB,mBAAP,SAAmCzB,QAAnC,CAA2C","names":["castToError","OpenAIError","Error","APIError","constructor","status","error","message","headers","makeMessage","data","code","param","type","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError"],"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/openai/src/error.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport { castToError, Headers } from './core';\n\nexport class OpenAIError extends Error {}\n\nexport class APIError extends OpenAIError {\n  readonly status: number | undefined;\n  readonly headers: Headers | undefined;\n  readonly error: Object | undefined;\n\n  readonly code: string | null | undefined;\n  readonly param: string | null | undefined;\n  readonly type: string | undefined;\n\n  constructor(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n\n    const data = error as Record<string, any>;\n    this.error = data;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ? error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    if (!status) {\n      return new APIConnectionError({ cause: castToError(errorResponse) });\n    }\n\n    const error = (errorResponse as Record<string, any>)?.['error'];\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message, cause }: { message?: string; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError {\n  override readonly status: 400 = 400;\n}\n\nexport class AuthenticationError extends APIError {\n  override readonly status: 401 = 401;\n}\n\nexport class PermissionDeniedError extends APIError {\n  override readonly status: 403 = 403;\n}\n\nexport class NotFoundError extends APIError {\n  override readonly status: 404 = 404;\n}\n\nexport class ConflictError extends APIError {\n  override readonly status: 409 = 409;\n}\n\nexport class UnprocessableEntityError extends APIError {\n  override readonly status: 422 = 422;\n}\n\nexport class RateLimitError extends APIError {\n  override readonly status: 429 = 429;\n}\n\nexport class InternalServerError extends APIError {}\n"]},"metadata":{},"sourceType":"module"}