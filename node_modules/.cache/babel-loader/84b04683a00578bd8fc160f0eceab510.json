{"ast":null,"code":"import e from \"../lib/LdrsBaseElement.js\";\nvar i = \":host{align-items:center;display:inline-flex;flex-shrink:0;height:var(--uib-size);justify-content:center;width:var(--uib-size)}:host([hidden]){display:none}.container{align-items:center;display:flex;height:var(--uib-size);justify-content:center;position:relative;width:var(--uib-size)}.line{animation:rotate var(--uib-speed) ease-in-out infinite alternate;background-color:var(--uib-color);border-radius:calc(var(--uib-stroke)/2);height:var(--uib-stroke);left:0;position:absolute;top:calc(50% - var(--uib-stroke)/2);transition:background-color .3s ease;width:100%}.line:first-child,.line:nth-child(2){animation-delay:calc(var(--uib-speed)*-.375)}.line:nth-child(2){opacity:.8}.line:nth-child(3){animation-delay:calc(var(--uib-speed)*-.3);opacity:.6}.line:nth-child(4){animation-delay:calc(var(--uib-speed)*-.225);opacity:.4}.line:nth-child(5){animation-delay:calc(var(--uib-speed)*-.15);opacity:.2}.line:nth-child(6){animation-delay:calc(var(--uib-speed)*-.075);opacity:.1}@keyframes rotate{0%{transform:rotate(0deg)}to{transform:rotate(180deg)}}\";\n\nclass t extends e {\n  _attributes = [\"size\", \"color\", \"speed\", \"stroke\"];\n  size;\n  color;\n  speed;\n  stroke;\n\n  static get observedAttributes() {\n    return [\"size\", \"color\", \"speed\", \"stroke\"];\n  }\n\n  constructor() {\n    super(), this.storePropsToUpgrade(this._attributes), this.reflect(this._attributes);\n  }\n\n  connectedCallback() {\n    this.upgradeStoredProps(), this.applyDefaultProps({\n      size: 35,\n      color: \"black\",\n      speed: .9,\n      stroke: 3.5\n    }), this.template.innerHTML = `\\n      <div class=\"container\">\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n        <div class=\"line\"></div>\\n      </div>\\n      <style>\\n        :host{\\n          --uib-size: ${this.size}px;\\n          --uib-color: ${this.color};\\n          --uib-speed: ${this.speed}s;\\n          --uib-stroke: ${this.stroke}px;\\n        }\\n        ${i}\\n      </style>\\n    `, this.shadow.replaceChildren(this.template.content.cloneNode(!0));\n  }\n\n  attributeChangedCallback() {\n    const e = this.shadow.querySelector(\"style\");\n    e && (e.innerHTML = `\\n      :host{\\n        --uib-size: ${this.size}px;\\n        --uib-color: ${this.color};\\n        --uib-speed: ${this.speed}s;\\n        --uib-stroke: ${this.stroke}px;\\n      }\\n      ${i}\\n    `);\n  }\n\n}\n\nvar s = {\n  register: function () {\n    let e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"l-miyagi\";\n    customElements.get(e) || customElements.define(e, class extends t {});\n  },\n  element: t\n};\nexport { s as default };","map":{"version":3,"mappings":";;;AAEA,MAAMA,CAAN,SAAqBC,CAArB,CAAqBA;AACjBC,gBAAc,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,QAA3B,CAAdA;AACAC;AACAC;AACAC;AACAC;;AACWC;AACP,WAAO,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,QAA3B,CAAP;AAEJC;;AAAAA;AACIC,aACAC,KAAKC,mBAALD,CAAyBA,KAAKR,WAA9BQ,CADAD,EAEAC,KAAKE,OAALF,CAAaA,KAAKR,WAAlBQ,CAFAD;AAIJI;;AAAAA;AACIH,SAAKI,kBAALJ,IACAA,KAAKK,iBAALL,CAAuB;AACnBP,YAAM,EADa;AAEnBC,aAAO,OAFY;AAGnBC,aAAO,EAHY;AAInBC,cAAQ;AAJW,KAAvBI,CADAA,EAOAA,KAAKM,QAALN,CAAcO,SAAdP,GAA0B,mTAWVA,KAAKP,mCACJO,KAAKN,kCACLM,KAAKL,oCACJK,KAAKJ,iCAErBY,yBAvBFR,EA0BAA,KAAKS,MAALT,CAAYU,eAAZV,CAA4BA,KAAKM,QAALN,CAAcW,OAAdX,CAAsBY,SAAtBZ,CAAsBY,CAAU,CAAhCZ,CAA5BA,CA1BAA;AA4BJa;;AAAAA;AACI,UAAMC,IAAUd,KAAKS,MAALT,CAAYe,aAAZf,CAA0B,OAA1BA,CAAhB;AACKc,UAELA,EAAQP,SAARO,GAAoB,uCAENd,KAAKP,iCACJO,KAAKN,gCACLM,KAAKL,kCACJK,KAAKJ,6BAErBY,SATKM;AAWR;;AAxDgBvB;;AA0DrB,IAAeyB;AACXC,YAAU,YAAQ;AAAA,QAAPC,CAAO;AACTC,mBAAeC,GAAfD,CAAmBD,CAAnBC,KACDA,eAAeE,MAAfF,CAAsBD,CAAtBC,EAA4B,cAAc7B,CAAd,CAAcA,EAA1C6B,CADCA;AAGJ,GALM;AAOXG,WAAShC;AAPE,CAAf;AAOaA","names":["Miyagi","Base","_attributes","size","color","speed","stroke","observedAttributes","constructor","super","this","storePropsToUpgrade","reflect","connectedCallback","upgradeStoredProps","applyDefaultProps","template","innerHTML","styles","shadow","replaceChildren","content","cloneNode","attributeChangedCallback","styleEl","querySelector","miyagi","register","name","customElements","get","define","element"],"sources":["/Users/zachjohnson/Desktop/React-Wordle-lesson-16/node_modules/ldrs/temp-ts-out/elements/miyagi.js"],"sourcesContent":["import Base from '../lib/LdrsBaseElement.js';\nimport styles from './miyagi.scss';\nclass Miyagi extends Base {\n    _attributes = ['size', 'color', 'speed', 'stroke'];\n    size;\n    color;\n    speed;\n    stroke;\n    static get observedAttributes() {\n        return ['size', 'color', 'speed', 'stroke'];\n    }\n    constructor() {\n        super();\n        this.storePropsToUpgrade(this._attributes);\n        this.reflect(this._attributes);\n    }\n    connectedCallback() {\n        this.upgradeStoredProps();\n        this.applyDefaultProps({\n            size: 35,\n            color: 'black',\n            speed: 0.9,\n            stroke: 3.5,\n        });\n        this.template.innerHTML = `\n      <div class=\"container\">\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n      </div>\n      <style>\n        :host{\n          --uib-size: ${this.size}px;\n          --uib-color: ${this.color};\n          --uib-speed: ${this.speed}s;\n          --uib-stroke: ${this.stroke}px;\n        }\n        ${styles}\n      </style>\n    `;\n        this.shadow.replaceChildren(this.template.content.cloneNode(true));\n    }\n    attributeChangedCallback() {\n        const styleEl = this.shadow.querySelector('style');\n        if (!styleEl)\n            return;\n        styleEl.innerHTML = `\n      :host{\n        --uib-size: ${this.size}px;\n        --uib-color: ${this.color};\n        --uib-speed: ${this.speed}s;\n        --uib-stroke: ${this.stroke}px;\n      }\n      ${styles}\n    `;\n    }\n}\nexport default {\n    register: (name = 'l-miyagi') => {\n        if (!customElements.get(name)) {\n            customElements.define(name, class extends Miyagi {\n            });\n        }\n    },\n    element: Miyagi,\n};\n"]},"metadata":{},"sourceType":"module"}