{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst ContextDependency = require(\"./ContextDependency\");\n\nconst ContextDependencyTemplateAsRequireCall = require(\"./ContextDependencyTemplateAsRequireCall\");\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n\nclass ImportContextDependency extends ContextDependency {\n  /**\n   * @param {TODO} options options\n   * @param {Range} range range\n   * @param {Range} valueRange value range\n   */\n  constructor(options, range, valueRange) {\n    super(options);\n    this.range = range;\n    this.valueRange = valueRange;\n  }\n\n  get type() {\n    return `import() context ${this.options.mode}`;\n  }\n\n  get category() {\n    return \"esm\";\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.valueRange);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   */\n\n\n  deserialize(context) {\n    const {\n      read\n    } = context;\n    this.valueRange = read();\n    super.deserialize(context);\n  }\n\n}\n\nmakeSerializable(ImportContextDependency, \"webpack/lib/dependencies/ImportContextDependency\");\nImportContextDependency.Template = ContextDependencyTemplateAsRequireCall;\nmodule.exports = ImportContextDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/ImportContextDependency.js"],"names":["makeSerializable","require","ContextDependency","ContextDependencyTemplateAsRequireCall","ImportContextDependency","constructor","options","range","valueRange","type","mode","category","serialize","context","write","deserialize","read","Template","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,qBAAD,CAAjC;;AACA,MAAME,sCAAsC,GAAGF,OAAO,CAAC,0CAAD,CAAtD;AAEA;;AACA;;AACA;;;AAEA,MAAMG,uBAAN,SAAsCF,iBAAtC,CAAwD;AACvD;AACD;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,UAAjB,EAA6B;AACvC,UAAMF,OAAN;AAEA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA;;AAEO,MAAJC,IAAI,GAAG;AACV,WAAQ,oBAAmB,KAAKH,OAAL,CAAaI,IAAK,EAA7C;AACA;;AAEW,MAARC,QAAQ,GAAG;AACd,WAAO,KAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,OAAlB;AAEAC,IAAAA,KAAK,CAAC,KAAKN,UAAN,CAAL;AAEA,UAAMI,SAAN,CAAgBC,OAAhB;AACA;AAED;AACD;AACA;;;AACCE,EAAAA,WAAW,CAACF,OAAD,EAAU;AACpB,UAAM;AAAEG,MAAAA;AAAF,QAAWH,OAAjB;AAEA,SAAKL,UAAL,GAAkBQ,IAAI,EAAtB;AAEA,UAAMD,WAAN,CAAkBF,OAAlB;AACA;;AAzCsD;;AA4CxDb,gBAAgB,CACfI,uBADe,EAEf,kDAFe,CAAhB;AAKAA,uBAAuB,CAACa,QAAxB,GAAmCd,sCAAnC;AAEAe,MAAM,CAACC,OAAP,GAAiBf,uBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst ContextDependency = require(\"./ContextDependency\");\nconst ContextDependencyTemplateAsRequireCall = require(\"./ContextDependencyTemplateAsRequireCall\");\n\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass ImportContextDependency extends ContextDependency {\n\t/**\n\t * @param {TODO} options options\n\t * @param {Range} range range\n\t * @param {Range} valueRange value range\n\t */\n\tconstructor(options, range, valueRange) {\n\t\tsuper(options);\n\n\t\tthis.range = range;\n\t\tthis.valueRange = valueRange;\n\t}\n\n\tget type() {\n\t\treturn `import() context ${this.options.mode}`;\n\t}\n\n\tget category() {\n\t\treturn \"esm\";\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\n\t\twrite(this.valueRange);\n\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t */\n\tdeserialize(context) {\n\t\tconst { read } = context;\n\n\t\tthis.valueRange = read();\n\n\t\tsuper.deserialize(context);\n\t}\n}\n\nmakeSerializable(\n\tImportContextDependency,\n\t\"webpack/lib/dependencies/ImportContextDependency\"\n);\n\nImportContextDependency.Template = ContextDependencyTemplateAsRequireCall;\n\nmodule.exports = ImportContextDependency;\n"]},"metadata":{},"sourceType":"script"}