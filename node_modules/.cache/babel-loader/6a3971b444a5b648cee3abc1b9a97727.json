{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst {\n  pathToFileURL\n} = require(\"url\");\n\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\n\nconst Template = require(\"../Template\");\n\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\n\nconst {\n  evaluateToIdentifier,\n  toConstantDependency,\n  evaluateToString,\n  evaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\n\nconst memoize = require(\"../util/memoize\");\n\nconst propertyAccess = require(\"../util/propertyAccess\");\n\nconst ConstDependency = require(\"./ConstDependency\");\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\n\nconst getCriticalDependencyWarning = memoize(() => require(\"./CriticalDependencyWarning\"));\nconst PLUGIN_NAME = \"ImportMetaPlugin\";\n\nclass ImportMetaPlugin {\n  /**\n   * @param {Compiler} compiler compiler\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        normalModuleFactory\n      } = _ref;\n\n      /**\n       * @param {NormalModule} module module\n       * @returns {string} file url\n       */\n      const getUrl = module => {\n        return pathToFileURL(module.resource).toString();\n      };\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n\n\n      const parserHandler = (parser, _ref2) => {\n        let {\n          importMeta\n        } = _ref2;\n\n        if (importMeta === false) {\n          const {\n            importMetaName\n          } = compilation.outputOptions;\n          if (importMetaName === \"import.meta\") return;\n          parser.hooks.expression.for(\"import.meta\").tap(PLUGIN_NAME, metaProperty => {\n            const dep = new ConstDependency(\n            /** @type {string} */\n            importMetaName,\n            /** @type {Range} */\n            metaProperty.range);\n            dep.loc =\n            /** @type {DependencyLocation} */\n            metaProperty.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          });\n          return;\n        } /// import.meta direct ///\n\n\n        const webpackVersion = parseInt(require(\"../../package.json\").version, 10);\n\n        const importMetaUrl = () => JSON.stringify(getUrl(parser.state.module));\n\n        const importMetaWebpackVersion = () => JSON.stringify(webpackVersion);\n        /**\n         * @param {string[]} members members\n         * @returns {string} error message\n         */\n\n\n        const importMetaUnknownProperty = members => `${Template.toNormalComment(\"unsupported import.meta.\" + members.join(\".\"))} undefined${propertyAccess(members, 1)}`;\n\n        parser.hooks.typeof.for(\"import.meta\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"object\")));\n        parser.hooks.expression.for(\"import.meta\").tap(PLUGIN_NAME, metaProperty => {\n          const referencedPropertiesInDestructuring = parser.destructuringAssignmentPropertiesFor(metaProperty);\n\n          if (!referencedPropertiesInDestructuring) {\n            const CriticalDependencyWarning = getCriticalDependencyWarning();\n            parser.state.module.addWarning(new ModuleDependencyWarning(parser.state.module, new CriticalDependencyWarning(\"Accessing import.meta directly is unsupported (only property access or destructuring is supported)\"),\n            /** @type {DependencyLocation} */\n            metaProperty.loc));\n            const dep = new ConstDependency(`${parser.isAsiPosition(\n            /** @type {Range} */\n            metaProperty.range[0]) ? \";\" : \"\"}({})`,\n            /** @type {Range} */\n            metaProperty.range);\n            dep.loc =\n            /** @type {DependencyLocation} */\n            metaProperty.loc;\n            parser.state.module.addPresentationalDependency(dep);\n            return true;\n          }\n\n          let str = \"\";\n\n          for (const prop of referencedPropertiesInDestructuring) {\n            switch (prop) {\n              case \"url\":\n                str += `url: ${importMetaUrl()},`;\n                break;\n\n              case \"webpack\":\n                str += `webpack: ${importMetaWebpackVersion()},`;\n                break;\n\n              default:\n                str += `[${JSON.stringify(prop)}]: ${importMetaUnknownProperty([prop])},`;\n                break;\n            }\n          }\n\n          const dep = new ConstDependency(`({${str}})`,\n          /** @type {Range} */\n          metaProperty.range);\n          dep.loc =\n          /** @type {DependencyLocation} */\n          metaProperty.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta\").tap(PLUGIN_NAME, evaluateToString(\"object\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta\").tap(PLUGIN_NAME, evaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true)); /// import.meta.url ///\n\n        parser.hooks.typeof.for(\"import.meta.url\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"string\")));\n        parser.hooks.expression.for(\"import.meta.url\").tap(PLUGIN_NAME, expr => {\n          const dep = new ConstDependency(importMetaUrl(),\n          /** @type {Range} */\n          expr.range);\n          dep.loc =\n          /** @type {DependencyLocation} */\n          expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluateTypeof.for(\"import.meta.url\").tap(PLUGIN_NAME, evaluateToString(\"string\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.url\").tap(PLUGIN_NAME, expr => {\n          return new BasicEvaluatedExpression().setString(getUrl(parser.state.module)).setRange(\n          /** @type {Range} */\n          expr.range);\n        }); /// import.meta.webpack ///\n\n        parser.hooks.typeof.for(\"import.meta.webpack\").tap(PLUGIN_NAME, toConstantDependency(parser, JSON.stringify(\"number\")));\n        parser.hooks.expression.for(\"import.meta.webpack\").tap(PLUGIN_NAME, toConstantDependency(parser, importMetaWebpackVersion()));\n        parser.hooks.evaluateTypeof.for(\"import.meta.webpack\").tap(PLUGIN_NAME, evaluateToString(\"number\"));\n        parser.hooks.evaluateIdentifier.for(\"import.meta.webpack\").tap(PLUGIN_NAME, evaluateToNumber(webpackVersion)); /// Unknown properties ///\n\n        parser.hooks.unhandledExpressionMemberChain.for(\"import.meta\").tap(PLUGIN_NAME, (expr, members) => {\n          const dep = new ConstDependency(importMetaUnknownProperty(members),\n          /** @type {Range} */\n          expr.range);\n          dep.loc =\n          /** @type {DependencyLocation} */\n          expr.loc;\n          parser.state.module.addPresentationalDependency(dep);\n          return true;\n        });\n        parser.hooks.evaluate.for(\"MemberExpression\").tap(PLUGIN_NAME, expression => {\n          const expr =\n          /** @type {MemberExpression} */\n          expression;\n\n          if (expr.object.type === \"MetaProperty\" && expr.object.meta.name === \"import\" && expr.object.property.name === \"meta\" && expr.property.type === (expr.computed ? \"Literal\" : \"Identifier\")) {\n            return new BasicEvaluatedExpression().setUndefined().setRange(\n            /** @type {Range} */\n            expr.range);\n          }\n        });\n      };\n\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, parserHandler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, parserHandler);\n    });\n  }\n\n}\n\nmodule.exports = ImportMetaPlugin;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/ImportMetaPlugin.js"],"names":["pathToFileURL","require","ModuleDependencyWarning","JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_ESM","Template","BasicEvaluatedExpression","evaluateToIdentifier","toConstantDependency","evaluateToString","evaluateToNumber","memoize","propertyAccess","ConstDependency","getCriticalDependencyWarning","PLUGIN_NAME","ImportMetaPlugin","apply","compiler","hooks","compilation","tap","normalModuleFactory","getUrl","module","resource","toString","parserHandler","parser","importMeta","importMetaName","outputOptions","expression","for","metaProperty","dep","range","loc","state","addPresentationalDependency","webpackVersion","parseInt","version","importMetaUrl","JSON","stringify","importMetaWebpackVersion","importMetaUnknownProperty","members","toNormalComment","join","typeof","referencedPropertiesInDestructuring","destructuringAssignmentPropertiesFor","CriticalDependencyWarning","addWarning","isAsiPosition","str","prop","evaluateTypeof","evaluateIdentifier","expr","setString","setRange","unhandledExpressionMemberChain","evaluate","object","type","meta","name","property","computed","setUndefined","exports"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst { pathToFileURL } = require(\"url\");\nconst ModuleDependencyWarning = require(\"../ModuleDependencyWarning\");\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst Template = require(\"../Template\");\nconst BasicEvaluatedExpression = require(\"../javascript/BasicEvaluatedExpression\");\nconst {\n\tevaluateToIdentifier,\n\ttoConstantDependency,\n\tevaluateToString,\n\tevaluateToNumber\n} = require(\"../javascript/JavascriptParserHelpers\");\nconst memoize = require(\"../util/memoize\");\nconst propertyAccess = require(\"../util/propertyAccess\");\nconst ConstDependency = require(\"./ConstDependency\");\n\n/** @typedef {import(\"estree\").MemberExpression} MemberExpression */\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"../NormalModule\")} NormalModule */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\nconst getCriticalDependencyWarning = memoize(() =>\n\trequire(\"./CriticalDependencyWarning\")\n);\n\nconst PLUGIN_NAME = \"ImportMetaPlugin\";\n\nclass ImportMetaPlugin {\n\t/**\n\t * @param {Compiler} compiler compiler\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\t/**\n\t\t\t\t * @param {NormalModule} module module\n\t\t\t\t * @returns {string} file url\n\t\t\t\t */\n\t\t\t\tconst getUrl = module => {\n\t\t\t\t\treturn pathToFileURL(module.resource).toString();\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst parserHandler = (parser, { importMeta }) => {\n\t\t\t\t\tif (importMeta === false) {\n\t\t\t\t\t\tconst { importMetaName } = compilation.outputOptions;\n\t\t\t\t\t\tif (importMetaName === \"import.meta\") return;\n\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t\t.tap(PLUGIN_NAME, metaProperty => {\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\t/** @type {string} */ (importMetaName),\n\t\t\t\t\t\t\t\t\t/** @type {Range} */ (metaProperty.range)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (metaProperty.loc);\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t/// import.meta direct ///\n\t\t\t\t\tconst webpackVersion = parseInt(\n\t\t\t\t\t\trequire(\"../../package.json\").version,\n\t\t\t\t\t\t10\n\t\t\t\t\t);\n\t\t\t\t\tconst importMetaUrl = () =>\n\t\t\t\t\t\tJSON.stringify(getUrl(parser.state.module));\n\t\t\t\t\tconst importMetaWebpackVersion = () => JSON.stringify(webpackVersion);\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {string[]} members members\n\t\t\t\t\t * @returns {string} error message\n\t\t\t\t\t */\n\t\t\t\t\tconst importMetaUnknownProperty = members =>\n\t\t\t\t\t\t`${Template.toNormalComment(\n\t\t\t\t\t\t\t\"unsupported import.meta.\" + members.join(\".\")\n\t\t\t\t\t\t)} undefined${propertyAccess(members, 1)}`;\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"object\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, metaProperty => {\n\t\t\t\t\t\t\tconst referencedPropertiesInDestructuring =\n\t\t\t\t\t\t\t\tparser.destructuringAssignmentPropertiesFor(metaProperty);\n\t\t\t\t\t\t\tif (!referencedPropertiesInDestructuring) {\n\t\t\t\t\t\t\t\tconst CriticalDependencyWarning =\n\t\t\t\t\t\t\t\t\tgetCriticalDependencyWarning();\n\t\t\t\t\t\t\t\tparser.state.module.addWarning(\n\t\t\t\t\t\t\t\t\tnew ModuleDependencyWarning(\n\t\t\t\t\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\t\t\t\t\tnew CriticalDependencyWarning(\n\t\t\t\t\t\t\t\t\t\t\t\"Accessing import.meta directly is unsupported (only property access or destructuring is supported)\"\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t/** @type {DependencyLocation} */ (metaProperty.loc)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t\t`${\n\t\t\t\t\t\t\t\t\t\tparser.isAsiPosition(\n\t\t\t\t\t\t\t\t\t\t\t/** @type {Range} */ (metaProperty.range)[0]\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t? \";\"\n\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t}({})`,\n\t\t\t\t\t\t\t\t\t/** @type {Range} */ (metaProperty.range)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (metaProperty.loc);\n\t\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet str = \"\";\n\t\t\t\t\t\t\tfor (const prop of referencedPropertiesInDestructuring) {\n\t\t\t\t\t\t\t\tswitch (prop) {\n\t\t\t\t\t\t\t\t\tcase \"url\":\n\t\t\t\t\t\t\t\t\t\tstr += `url: ${importMetaUrl()},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase \"webpack\":\n\t\t\t\t\t\t\t\t\t\tstr += `webpack: ${importMetaWebpackVersion()},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tstr += `[${JSON.stringify(\n\t\t\t\t\t\t\t\t\t\t\tprop\n\t\t\t\t\t\t\t\t\t\t)}]: ${importMetaUnknownProperty([prop])},`;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\t`({${str}})`,\n\t\t\t\t\t\t\t\t/** @type {Range} */ (metaProperty.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (metaProperty.loc);\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"object\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier.for(\"import.meta\").tap(\n\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\tevaluateToIdentifier(\"import.meta\", \"import.meta\", () => [], true)\n\t\t\t\t\t);\n\n\t\t\t\t\t/// import.meta.url ///\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"string\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\timportMetaUrl(),\n\t\t\t\t\t\t\t\t/** @type {Range} */ (expr.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"string\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.url\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expr => {\n\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t.setString(getUrl(parser.state.module))\n\t\t\t\t\t\t\t\t.setRange(/** @type {Range} */ (expr.range));\n\t\t\t\t\t\t});\n\n\t\t\t\t\t/// import.meta.webpack ///\n\t\t\t\t\tparser.hooks.typeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, JSON.stringify(\"number\"))\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\tPLUGIN_NAME,\n\t\t\t\t\t\t\ttoConstantDependency(parser, importMetaWebpackVersion())\n\t\t\t\t\t\t);\n\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToString(\"number\"));\n\t\t\t\t\tparser.hooks.evaluateIdentifier\n\t\t\t\t\t\t.for(\"import.meta.webpack\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, evaluateToNumber(webpackVersion));\n\n\t\t\t\t\t/// Unknown properties ///\n\t\t\t\t\tparser.hooks.unhandledExpressionMemberChain\n\t\t\t\t\t\t.for(\"import.meta\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, (expr, members) => {\n\t\t\t\t\t\t\tconst dep = new ConstDependency(\n\t\t\t\t\t\t\t\timportMetaUnknownProperty(members),\n\t\t\t\t\t\t\t\t/** @type {Range} */ (expr.range)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdep.loc = /** @type {DependencyLocation} */ (expr.loc);\n\t\t\t\t\t\t\tparser.state.module.addPresentationalDependency(dep);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\tparser.hooks.evaluate\n\t\t\t\t\t\t.for(\"MemberExpression\")\n\t\t\t\t\t\t.tap(PLUGIN_NAME, expression => {\n\t\t\t\t\t\t\tconst expr = /** @type {MemberExpression} */ (expression);\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\texpr.object.type === \"MetaProperty\" &&\n\t\t\t\t\t\t\t\texpr.object.meta.name === \"import\" &&\n\t\t\t\t\t\t\t\texpr.object.property.name === \"meta\" &&\n\t\t\t\t\t\t\t\texpr.property.type ===\n\t\t\t\t\t\t\t\t\t(expr.computed ? \"Literal\" : \"Identifier\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn new BasicEvaluatedExpression()\n\t\t\t\t\t\t\t\t\t.setUndefined()\n\t\t\t\t\t\t\t\t\t.setRange(/** @type {Range} */ (expr.range));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, parserHandler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, parserHandler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaPlugin;\n"]},"metadata":{},"sourceType":"script"}