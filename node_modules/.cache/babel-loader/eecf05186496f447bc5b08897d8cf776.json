{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\"use strict\";\n\nconst {\n  JAVASCRIPT_MODULE_TYPE_AUTO,\n  JAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\n\nconst ContextElementDependency = require(\"./ContextElementDependency\");\n\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\n\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\n\nconst PLUGIN_NAME = \"ImportMetaContextPlugin\";\n\nclass ImportMetaContextPlugin {\n  /**\n   * Apply the plugin\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, _ref) => {\n      let {\n        contextModuleFactory,\n        normalModuleFactory\n      } = _ref;\n      compilation.dependencyFactories.set(ImportMetaContextDependency, contextModuleFactory);\n      compilation.dependencyTemplates.set(ImportMetaContextDependency, new ImportMetaContextDependency.Template());\n      compilation.dependencyFactories.set(ContextElementDependency, normalModuleFactory);\n      /**\n       * @param {Parser} parser parser parser\n       * @param {JavascriptParserOptions} parserOptions parserOptions\n       * @returns {void}\n       */\n\n      const handler = (parser, parserOptions) => {\n        if (parserOptions.importMetaContext !== undefined && !parserOptions.importMetaContext) return;\n        new ImportMetaContextDependencyParserPlugin().apply(parser);\n      };\n\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_AUTO).tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(JAVASCRIPT_MODULE_TYPE_ESM).tap(PLUGIN_NAME, handler);\n    });\n  }\n\n}\n\nmodule.exports = ImportMetaContextPlugin;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/ImportMetaContextPlugin.js"],"names":["JAVASCRIPT_MODULE_TYPE_AUTO","JAVASCRIPT_MODULE_TYPE_ESM","require","ContextElementDependency","ImportMetaContextDependency","ImportMetaContextDependencyParserPlugin","PLUGIN_NAME","ImportMetaContextPlugin","apply","compiler","hooks","compilation","tap","contextModuleFactory","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","importMetaContext","undefined","for","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAM;AACLA,EAAAA,2BADK;AAELC,EAAAA;AAFK,IAGFC,OAAO,CAAC,wBAAD,CAHX;;AAIA,MAAMC,wBAAwB,GAAGD,OAAO,CAAC,4BAAD,CAAxC;;AACA,MAAME,2BAA2B,GAAGF,OAAO,CAAC,+BAAD,CAA3C;;AACA,MAAMG,uCAAuC,GAAGH,OAAO,CAAC,2CAAD,CAAvD;AAEA;;AACA;;AACA;;AACA;;;AAEA,MAAMI,WAAW,GAAG,yBAApB;;AAEA,MAAMC,uBAAN,CAA8B;AAC7B;AACD;AACA;AACA;AACA;AACCC,EAAAA,KAAK,CAACC,QAAD,EAAW;AACfA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,WAAf,CAA2BC,GAA3B,CACCN,WADD,EAEC,CAACK,WAAD,WAAgE;AAAA,UAAlD;AAAEE,QAAAA,oBAAF;AAAwBC,QAAAA;AAAxB,OAAkD;AAC/DH,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCZ,2BADD,EAECS,oBAFD;AAIAF,MAAAA,WAAW,CAACM,mBAAZ,CAAgCD,GAAhC,CACCZ,2BADD,EAEC,IAAIA,2BAA2B,CAACc,QAAhC,EAFD;AAIAP,MAAAA,WAAW,CAACI,mBAAZ,CAAgCC,GAAhC,CACCb,wBADD,EAECW,mBAFD;AAKA;AACJ;AACA;AACA;AACA;;AACI,YAAMK,OAAO,GAAG,CAACC,MAAD,EAASC,aAAT,KAA2B;AAC1C,YACCA,aAAa,CAACC,iBAAd,KAAoCC,SAApC,IACA,CAACF,aAAa,CAACC,iBAFhB,EAIC;AAED,YAAIjB,uCAAJ,GAA8CG,KAA9C,CAAoDY,MAApD;AACA,OARD;;AAUAN,MAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACMxB,2BADN,EAEEY,GAFF,CAEMN,WAFN,EAEmBa,OAFnB;AAGAL,MAAAA,mBAAmB,CAACJ,KAApB,CAA0BU,MAA1B,CACEI,GADF,CACMvB,0BADN,EAEEW,GAFF,CAEMN,WAFN,EAEmBa,OAFnB;AAGA,KArCF;AAuCA;;AA9C4B;;AAiD9BM,MAAM,CAACC,OAAP,GAAiBnB,uBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst {\n\tJAVASCRIPT_MODULE_TYPE_AUTO,\n\tJAVASCRIPT_MODULE_TYPE_ESM\n} = require(\"../ModuleTypeConstants\");\nconst ContextElementDependency = require(\"./ContextElementDependency\");\nconst ImportMetaContextDependency = require(\"./ImportMetaContextDependency\");\nconst ImportMetaContextDependencyParserPlugin = require(\"./ImportMetaContextDependencyParserPlugin\");\n\n/** @typedef {import(\"../../declarations/WebpackOptions\").JavascriptParserOptions} JavascriptParserOptions */\n/** @typedef {import(\"../../declarations/WebpackOptions\").ResolveOptions} ResolveOptions */\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../javascript/JavascriptParser\")} Parser */\n\nconst PLUGIN_NAME = \"ImportMetaContextPlugin\";\n\nclass ImportMetaContextPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { contextModuleFactory, normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tcontextModuleFactory\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tImportMetaContextDependency,\n\t\t\t\t\tnew ImportMetaContextDependency.Template()\n\t\t\t\t);\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContextElementDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\t/**\n\t\t\t\t * @param {Parser} parser parser parser\n\t\t\t\t * @param {JavascriptParserOptions} parserOptions parserOptions\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tparserOptions.importMetaContext !== undefined &&\n\t\t\t\t\t\t!parserOptions.importMetaContext\n\t\t\t\t\t)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tnew ImportMetaContextDependencyParserPlugin().apply(parser);\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_AUTO)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(JAVASCRIPT_MODULE_TYPE_ESM)\n\t\t\t\t\t.tap(PLUGIN_NAME, handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ImportMetaContextPlugin;\n"]},"metadata":{},"sourceType":"script"}