{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst versions = require(\"process\").versions;\n\nconst Resolver = require(\"./Resolver\");\n\nconst {\n  getType,\n  PathType\n} = require(\"./util/path\");\n\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\n\nconst AliasPlugin = require(\"./AliasPlugin\");\n\nconst AppendPlugin = require(\"./AppendPlugin\");\n\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\n\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\n\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\n\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\n\nconst ExtensionAliasPlugin = require(\"./ExtensionAliasPlugin\");\n\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\n\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\n\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\n\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\n\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\n\nconst ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\n\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\n\nconst NextPlugin = require(\"./NextPlugin\");\n\nconst ParsePlugin = require(\"./ParsePlugin\");\n\nconst PnpPlugin = require(\"./PnpPlugin\");\n\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\n\nconst ResultPlugin = require(\"./ResultPlugin\");\n\nconst RootsPlugin = require(\"./RootsPlugin\");\n\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\n\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\n\nconst TryNextPlugin = require(\"./TryNextPlugin\");\n\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\n\nconst UseFilePlugin = require(\"./UseFilePlugin\");\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n\n/** @typedef {import(\"./ExtensionAliasPlugin\").ExtensionAliasOption} ExtensionAliasOption */\n\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n\n/** @typedef {import(\"./Resolver\").EnsuredHooks} EnsuredHooks */\n\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n\n/** @typedef {import(\"./Resolver\").KnownHooks} KnownHooks */\n\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n\n/** @typedef {{[k: string]: string|string[] }} ExtensionAliasOptions */\n\n/** @typedef {false | 0 | \"\" | null | undefined} Falsy */\n\n/** @typedef {{apply: function(Resolver): void} | (function(this: Resolver, Resolver): void) | Falsy} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {ExtensionAliasOptions=} extensionAlias An object which maps extension to extension aliases\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {ExtensionAliasOption[]} extensionAlias\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n * @property {boolean} preferAbsolute\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\n\n\nfunction processPnpApiOption(option) {\n  if (option === undefined &&\n  /** @type {NodeJS.ProcessVersions & {pnp: string}} */\n  versions.pnp) {\n    // @ts-ignore\n    return require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n  }\n\n  return option || null;\n}\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\n\n\nfunction normalizeAlias(alias) {\n  return typeof alias === \"object\" && !Array.isArray(alias) && alias !== null ? Object.keys(alias).map(key => {\n    /** @type {AliasOptionEntry} */\n    const obj = {\n      name: key,\n      onlyModule: false,\n      alias: alias[key]\n    };\n\n    if (/\\$$/.test(key)) {\n      obj.onlyModule = true;\n      obj.name = key.slice(0, -1);\n    }\n\n    return obj;\n  }) :\n  /** @type {Array<AliasOptionEntry>} */\n  alias || [];\n}\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\n\n\nfunction createOptions(options) {\n  const mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n  /** @type {ResolveOptions[\"mainFields\"]} */\n\n  const mainFields = [];\n\n  for (const item of mainFieldsSet) {\n    if (typeof item === \"string\") {\n      mainFields.push({\n        name: [item],\n        forceRelative: true\n      });\n    } else if (Array.isArray(item)) {\n      mainFields.push({\n        name: item,\n        forceRelative: true\n      });\n    } else {\n      mainFields.push({\n        name: Array.isArray(item.name) ? item.name : [item.name],\n        forceRelative: item.forceRelative\n      });\n    }\n  }\n\n  return {\n    alias: normalizeAlias(options.alias),\n    fallback: normalizeAlias(options.fallback),\n    aliasFields: new Set(options.aliasFields),\n    cachePredicate: options.cachePredicate || function () {\n      return true;\n    },\n    cacheWithContext: typeof options.cacheWithContext !== \"undefined\" ? options.cacheWithContext : true,\n    exportsFields: new Set(options.exportsFields || [\"exports\"]),\n    importsFields: new Set(options.importsFields || [\"imports\"]),\n    conditionNames: new Set(options.conditionNames),\n    descriptionFiles: Array.from(new Set(options.descriptionFiles || [\"package.json\"])),\n    enforceExtension: options.enforceExtension === undefined ? options.extensions && options.extensions.includes(\"\") ? true : false : options.enforceExtension,\n    extensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n    extensionAlias: options.extensionAlias ? Object.keys(options.extensionAlias).map(k => ({\n      extension: k,\n      alias:\n      /** @type {ExtensionAliasOptions} */\n      options.extensionAlias[k]\n    })) : [],\n    fileSystem: options.useSyncFileSystemCalls ? new SyncAsyncFileSystemDecorator(\n    /** @type {SyncFileSystem} */\n\n    /** @type {unknown} */\n    options.fileSystem) : options.fileSystem,\n    unsafeCache: options.unsafeCache && typeof options.unsafeCache !== \"object\" ? {} : options.unsafeCache || false,\n    symlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n    resolver: options.resolver,\n    modules: mergeFilteredToArray(Array.isArray(options.modules) ? options.modules : options.modules ? [options.modules] : [\"node_modules\"], item => {\n      const type = getType(item);\n      return type === PathType.Normal || type === PathType.Relative;\n    }),\n    mainFields,\n    mainFiles: new Set(options.mainFiles || [\"index\"]),\n    plugins: options.plugins || [],\n    pnpApi: processPnpApiOption(options.pnpApi),\n    roots: new Set(options.roots || undefined),\n    fullySpecified: options.fullySpecified || false,\n    resolveToContext: options.resolveToContext || false,\n    preferRelative: options.preferRelative || false,\n    preferAbsolute: options.preferAbsolute || false,\n    restrictions: new Set(options.restrictions)\n  };\n}\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\n\n\nexports.createResolver = function (options) {\n  const normalizedOptions = createOptions(options);\n  const {\n    alias,\n    fallback,\n    aliasFields,\n    cachePredicate,\n    cacheWithContext,\n    conditionNames,\n    descriptionFiles,\n    enforceExtension,\n    exportsFields,\n    extensionAlias,\n    importsFields,\n    extensions,\n    fileSystem,\n    fullySpecified,\n    mainFields,\n    mainFiles,\n    modules,\n    plugins: userPlugins,\n    pnpApi,\n    resolveToContext,\n    preferRelative,\n    preferAbsolute,\n    symlinks,\n    unsafeCache,\n    resolver: customResolver,\n    restrictions,\n    roots\n  } = normalizedOptions;\n  const plugins = userPlugins.slice();\n  const resolver = customResolver ? customResolver : new Resolver(fileSystem, normalizedOptions); //// pipeline ////\n\n  resolver.ensureHook(\"resolve\");\n  resolver.ensureHook(\"internalResolve\");\n  resolver.ensureHook(\"newInternalResolve\");\n  resolver.ensureHook(\"parsedResolve\");\n  resolver.ensureHook(\"describedResolve\");\n  resolver.ensureHook(\"rawResolve\");\n  resolver.ensureHook(\"normalResolve\");\n  resolver.ensureHook(\"internal\");\n  resolver.ensureHook(\"rawModule\");\n  resolver.ensureHook(\"module\");\n  resolver.ensureHook(\"resolveAsModule\");\n  resolver.ensureHook(\"undescribedResolveInPackage\");\n  resolver.ensureHook(\"resolveInPackage\");\n  resolver.ensureHook(\"resolveInExistingDirectory\");\n  resolver.ensureHook(\"relative\");\n  resolver.ensureHook(\"describedRelative\");\n  resolver.ensureHook(\"directory\");\n  resolver.ensureHook(\"undescribedExistingDirectory\");\n  resolver.ensureHook(\"existingDirectory\");\n  resolver.ensureHook(\"undescribedRawFile\");\n  resolver.ensureHook(\"rawFile\");\n  resolver.ensureHook(\"file\");\n  resolver.ensureHook(\"finalFile\");\n  resolver.ensureHook(\"existingFile\");\n  resolver.ensureHook(\"resolved\"); // TODO remove in next major\n  // cspell:word Interal\n  // Backward-compat\n  // @ts-ignore\n\n  resolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve; // resolve\n\n  for (const {\n    source,\n    resolveOptions\n  } of [{\n    source: \"resolve\",\n    resolveOptions: {\n      fullySpecified\n    }\n  }, {\n    source: \"internal-resolve\",\n    resolveOptions: {\n      fullySpecified: false\n    }\n  }]) {\n    if (unsafeCache) {\n      plugins.push(new UnsafeCachePlugin(source, cachePredicate,\n      /** @type {import(\"./UnsafeCachePlugin\").Cache} */\n      unsafeCache, cacheWithContext, `new-${source}`));\n      plugins.push(new ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\"));\n    } else {\n      plugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n    }\n  } // parsed-resolve\n\n\n  plugins.push(new DescriptionFilePlugin(\"parsed-resolve\", descriptionFiles, false, \"described-resolve\"));\n  plugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\")); // described-resolve\n\n  plugins.push(new NextPlugin(\"described-resolve\", \"raw-resolve\"));\n\n  if (fallback.length > 0) {\n    plugins.push(new AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\"));\n  } // raw-resolve\n\n\n  if (alias.length > 0) {\n    plugins.push(new AliasPlugin(\"raw-resolve\", alias, \"internal-resolve\"));\n  }\n\n  aliasFields.forEach(item => {\n    plugins.push(new AliasFieldPlugin(\"raw-resolve\", item, \"internal-resolve\"));\n  });\n  extensionAlias.forEach(item => plugins.push(new ExtensionAliasPlugin(\"raw-resolve\", item, \"normal-resolve\")));\n  plugins.push(new NextPlugin(\"raw-resolve\", \"normal-resolve\")); // normal-resolve\n\n  if (preferRelative) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    module: true\n  }, \"resolve as module\", false, \"raw-module\"));\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    internal: true\n  }, \"resolve as internal import\", false, \"internal\"));\n\n  if (preferAbsolute) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n\n  if (roots.size > 0) {\n    plugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n  }\n\n  if (!preferRelative && !preferAbsolute) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  } // internal\n\n\n  importsFields.forEach(importsField => {\n    plugins.push(new ImportsFieldPlugin(\"internal\", conditionNames, importsField, \"relative\", \"internal-resolve\"));\n  }); // raw-module\n\n  exportsFields.forEach(exportsField => {\n    plugins.push(new SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\"));\n  });\n  modules.forEach(item => {\n    if (Array.isArray(item)) {\n      if (item.includes(\"node_modules\") && pnpApi) {\n        plugins.push(new ModulesInHierarchicalDirectoriesPlugin(\"raw-module\", item.filter(i => i !== \"node_modules\"), \"module\"));\n        plugins.push(new PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\"));\n      } else {\n        plugins.push(new ModulesInHierarchicalDirectoriesPlugin(\"raw-module\", item, \"module\"));\n      }\n    } else {\n      plugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n    }\n  }); // module\n\n  plugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\")); // resolve-as-module\n\n  if (!resolveToContext) {\n    plugins.push(new ConditionalPlugin(\"resolve-as-module\", {\n      directory: false,\n      request: \".\"\n    }, \"single file module\", true, \"undescribed-raw-file\"));\n  }\n\n  plugins.push(new DirectoryExistsPlugin(\"resolve-as-module\", \"undescribed-resolve-in-package\")); // undescribed-resolve-in-package\n\n  plugins.push(new DescriptionFilePlugin(\"undescribed-resolve-in-package\", descriptionFiles, false, \"resolve-in-package\"));\n  plugins.push(new NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")); // resolve-in-package\n\n  exportsFields.forEach(exportsField => {\n    plugins.push(new ExportsFieldPlugin(\"resolve-in-package\", conditionNames, exportsField, \"relative\"));\n  });\n  plugins.push(new NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")); // resolve-in-existing-directory\n\n  plugins.push(new JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")); // relative\n\n  plugins.push(new DescriptionFilePlugin(\"relative\", descriptionFiles, true, \"described-relative\"));\n  plugins.push(new NextPlugin(\"after-relative\", \"described-relative\")); // described-relative\n\n  if (resolveToContext) {\n    plugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n  } else {\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      directory: false\n    }, null, true, \"raw-file\"));\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      fullySpecified: false\n    }, \"as directory\", true, \"directory\"));\n  } // directory\n\n\n  plugins.push(new DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\"));\n\n  if (resolveToContext) {\n    // undescribed-existing-directory\n    plugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n  } else {\n    // undescribed-existing-directory\n    plugins.push(new DescriptionFilePlugin(\"undescribed-existing-directory\", descriptionFiles, false, \"existing-directory\"));\n    mainFiles.forEach(item => {\n      plugins.push(new UseFilePlugin(\"undescribed-existing-directory\", item, \"undescribed-raw-file\"));\n    }); // described-existing-directory\n\n    mainFields.forEach(item => {\n      plugins.push(new MainFieldPlugin(\"existing-directory\", item, \"resolve-in-existing-directory\"));\n    });\n    mainFiles.forEach(item => {\n      plugins.push(new UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\"));\n    }); // undescribed-raw-file\n\n    plugins.push(new DescriptionFilePlugin(\"undescribed-raw-file\", descriptionFiles, true, \"raw-file\"));\n    plugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\")); // raw-file\n\n    plugins.push(new ConditionalPlugin(\"raw-file\", {\n      fullySpecified: true\n    }, null, false, \"file\"));\n\n    if (!enforceExtension) {\n      plugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n    }\n\n    extensions.forEach(item => {\n      plugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n    }); // file\n\n    if (alias.length > 0) plugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n    aliasFields.forEach(item => {\n      plugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n    });\n    plugins.push(new NextPlugin(\"file\", \"final-file\")); // final-file\n\n    plugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\")); // existing-file\n\n    if (symlinks) plugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n    plugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n  }\n\n  const resolved =\n  /** @type {KnownHooks & EnsuredHooks} */\n  resolver.hooks.resolved; // resolved\n\n  if (restrictions.size > 0) {\n    plugins.push(new RestrictionsPlugin(resolved, restrictions));\n  }\n\n  plugins.push(new ResultPlugin(resolved)); //// RESOLVER ////\n\n  for (const plugin of plugins) {\n    if (typeof plugin === \"function\") {\n      /** @type {function(this: Resolver, Resolver): void} */\n      plugin.call(resolver, resolver);\n    } else if (plugin) {\n      plugin.apply(resolver);\n    }\n  }\n\n  return resolver;\n};\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\n\n\nfunction mergeFilteredToArray(array, filter) {\n  /** @type {Array<string | string[]>} */\n  const result = [];\n  const set = new Set(array);\n\n  for (const item of set) {\n    if (filter(item)) {\n      const lastElement = result.length > 0 ? result[result.length - 1] : undefined;\n\n      if (Array.isArray(lastElement)) {\n        lastElement.push(item);\n      } else {\n        result.push([item]);\n      }\n    } else {\n      result.push(item);\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/enhanced-resolve/lib/ResolverFactory.js"],"names":["versions","require","Resolver","getType","PathType","SyncAsyncFileSystemDecorator","AliasFieldPlugin","AliasPlugin","AppendPlugin","ConditionalPlugin","DescriptionFilePlugin","DirectoryExistsPlugin","ExportsFieldPlugin","ExtensionAliasPlugin","FileExistsPlugin","ImportsFieldPlugin","JoinRequestPartPlugin","JoinRequestPlugin","MainFieldPlugin","ModulesInHierarchicalDirectoriesPlugin","ModulesInRootPlugin","NextPlugin","ParsePlugin","PnpPlugin","RestrictionsPlugin","ResultPlugin","RootsPlugin","SelfReferencePlugin","SymlinkPlugin","TryNextPlugin","UnsafeCachePlugin","UseFilePlugin","processPnpApiOption","option","undefined","pnp","normalizeAlias","alias","Array","isArray","Object","keys","map","key","obj","name","onlyModule","test","slice","createOptions","options","mainFieldsSet","Set","mainFields","item","push","forceRelative","fallback","aliasFields","cachePredicate","cacheWithContext","exportsFields","importsFields","conditionNames","descriptionFiles","from","enforceExtension","extensions","includes","extensionAlias","k","extension","fileSystem","useSyncFileSystemCalls","unsafeCache","symlinks","resolver","modules","mergeFilteredToArray","type","Normal","Relative","mainFiles","plugins","pnpApi","roots","fullySpecified","resolveToContext","preferRelative","preferAbsolute","restrictions","exports","createResolver","normalizedOptions","userPlugins","customResolver","ensureHook","hooks","newInteralResolve","newInternalResolve","source","resolveOptions","length","forEach","module","internal","size","importsField","exportsField","filter","i","directory","request","resolved","plugin","call","apply","array","result","set","lastElement"],"mappings":"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","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst versions = require(\"process\").versions;\nconst Resolver = require(\"./Resolver\");\nconst { getType, PathType } = require(\"./util/path\");\n\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\nconst AliasPlugin = require(\"./AliasPlugin\");\nconst AppendPlugin = require(\"./AppendPlugin\");\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\nconst ExtensionAliasPlugin = require(\"./ExtensionAliasPlugin\");\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\nconst ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\nconst NextPlugin = require(\"./NextPlugin\");\nconst ParsePlugin = require(\"./ParsePlugin\");\nconst PnpPlugin = require(\"./PnpPlugin\");\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\nconst ResultPlugin = require(\"./ResultPlugin\");\nconst RootsPlugin = require(\"./RootsPlugin\");\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\nconst TryNextPlugin = require(\"./TryNextPlugin\");\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\nconst UseFilePlugin = require(\"./UseFilePlugin\");\n\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n/** @typedef {import(\"./ExtensionAliasPlugin\").ExtensionAliasOption} ExtensionAliasOption */\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\").EnsuredHooks} EnsuredHooks */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").KnownHooks} KnownHooks */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n/** @typedef {{[k: string]: string|string[] }} ExtensionAliasOptions */\n/** @typedef {false | 0 | \"\" | null | undefined} Falsy */\n/** @typedef {{apply: function(Resolver): void} | (function(this: Resolver, Resolver): void) | Falsy} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {ExtensionAliasOptions=} extensionAlias An object which maps extension to extension aliases\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {ExtensionAliasOption[]} extensionAlias\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n * @property {boolean} preferAbsolute\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\nfunction processPnpApiOption(option) {\n\tif (\n\t\toption === undefined &&\n\t\t/** @type {NodeJS.ProcessVersions & {pnp: string}} */ versions.pnp\n\t) {\n\t\t// @ts-ignore\n\t\treturn require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n\t}\n\n\treturn option || null;\n}\n\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\nfunction normalizeAlias(alias) {\n\treturn typeof alias === \"object\" && !Array.isArray(alias) && alias !== null\n\t\t? Object.keys(alias).map(key => {\n\t\t\t\t/** @type {AliasOptionEntry} */\n\t\t\t\tconst obj = { name: key, onlyModule: false, alias: alias[key] };\n\n\t\t\t\tif (/\\$$/.test(key)) {\n\t\t\t\t\tobj.onlyModule = true;\n\t\t\t\t\tobj.name = key.slice(0, -1);\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t  })\n\t\t: /** @type {Array<AliasOptionEntry>} */ (alias) || [];\n}\n\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\nfunction createOptions(options) {\n\tconst mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n\t/** @type {ResolveOptions[\"mainFields\"]} */\n\tconst mainFields = [];\n\n\tfor (const item of mainFieldsSet) {\n\t\tif (typeof item === \"string\") {\n\t\t\tmainFields.push({\n\t\t\t\tname: [item],\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else if (Array.isArray(item)) {\n\t\t\tmainFields.push({\n\t\t\t\tname: item,\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else {\n\t\t\tmainFields.push({\n\t\t\t\tname: Array.isArray(item.name) ? item.name : [item.name],\n\t\t\t\tforceRelative: item.forceRelative\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\talias: normalizeAlias(options.alias),\n\t\tfallback: normalizeAlias(options.fallback),\n\t\taliasFields: new Set(options.aliasFields),\n\t\tcachePredicate:\n\t\t\toptions.cachePredicate ||\n\t\t\tfunction () {\n\t\t\t\treturn true;\n\t\t\t},\n\t\tcacheWithContext:\n\t\t\ttypeof options.cacheWithContext !== \"undefined\"\n\t\t\t\t? options.cacheWithContext\n\t\t\t\t: true,\n\t\texportsFields: new Set(options.exportsFields || [\"exports\"]),\n\t\timportsFields: new Set(options.importsFields || [\"imports\"]),\n\t\tconditionNames: new Set(options.conditionNames),\n\t\tdescriptionFiles: Array.from(\n\t\t\tnew Set(options.descriptionFiles || [\"package.json\"])\n\t\t),\n\t\tenforceExtension:\n\t\t\toptions.enforceExtension === undefined\n\t\t\t\t? options.extensions && options.extensions.includes(\"\")\n\t\t\t\t\t? true\n\t\t\t\t\t: false\n\t\t\t\t: options.enforceExtension,\n\t\textensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n\t\textensionAlias: options.extensionAlias\n\t\t\t? Object.keys(options.extensionAlias).map(k => ({\n\t\t\t\t\textension: k,\n\t\t\t\t\talias: /** @type {ExtensionAliasOptions} */ (options.extensionAlias)[\n\t\t\t\t\t\tk\n\t\t\t\t\t]\n\t\t\t  }))\n\t\t\t: [],\n\t\tfileSystem: options.useSyncFileSystemCalls\n\t\t\t? new SyncAsyncFileSystemDecorator(\n\t\t\t\t\t/** @type {SyncFileSystem} */ (\n\t\t\t\t\t\t/** @type {unknown} */ (options.fileSystem)\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: options.fileSystem,\n\t\tunsafeCache:\n\t\t\toptions.unsafeCache && typeof options.unsafeCache !== \"object\"\n\t\t\t\t? {}\n\t\t\t\t: options.unsafeCache || false,\n\t\tsymlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n\t\tresolver: options.resolver,\n\t\tmodules: mergeFilteredToArray(\n\t\t\tArray.isArray(options.modules)\n\t\t\t\t? options.modules\n\t\t\t\t: options.modules\n\t\t\t\t? [options.modules]\n\t\t\t\t: [\"node_modules\"],\n\t\t\titem => {\n\t\t\t\tconst type = getType(item);\n\t\t\t\treturn type === PathType.Normal || type === PathType.Relative;\n\t\t\t}\n\t\t),\n\t\tmainFields,\n\t\tmainFiles: new Set(options.mainFiles || [\"index\"]),\n\t\tplugins: options.plugins || [],\n\t\tpnpApi: processPnpApiOption(options.pnpApi),\n\t\troots: new Set(options.roots || undefined),\n\t\tfullySpecified: options.fullySpecified || false,\n\t\tresolveToContext: options.resolveToContext || false,\n\t\tpreferRelative: options.preferRelative || false,\n\t\tpreferAbsolute: options.preferAbsolute || false,\n\t\trestrictions: new Set(options.restrictions)\n\t};\n}\n\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\nexports.createResolver = function (options) {\n\tconst normalizedOptions = createOptions(options);\n\n\tconst {\n\t\talias,\n\t\tfallback,\n\t\taliasFields,\n\t\tcachePredicate,\n\t\tcacheWithContext,\n\t\tconditionNames,\n\t\tdescriptionFiles,\n\t\tenforceExtension,\n\t\texportsFields,\n\t\textensionAlias,\n\t\timportsFields,\n\t\textensions,\n\t\tfileSystem,\n\t\tfullySpecified,\n\t\tmainFields,\n\t\tmainFiles,\n\t\tmodules,\n\t\tplugins: userPlugins,\n\t\tpnpApi,\n\t\tresolveToContext,\n\t\tpreferRelative,\n\t\tpreferAbsolute,\n\t\tsymlinks,\n\t\tunsafeCache,\n\t\tresolver: customResolver,\n\t\trestrictions,\n\t\troots\n\t} = normalizedOptions;\n\n\tconst plugins = userPlugins.slice();\n\n\tconst resolver = customResolver\n\t\t? customResolver\n\t\t: new Resolver(fileSystem, normalizedOptions);\n\n\t//// pipeline ////\n\n\tresolver.ensureHook(\"resolve\");\n\tresolver.ensureHook(\"internalResolve\");\n\tresolver.ensureHook(\"newInternalResolve\");\n\tresolver.ensureHook(\"parsedResolve\");\n\tresolver.ensureHook(\"describedResolve\");\n\tresolver.ensureHook(\"rawResolve\");\n\tresolver.ensureHook(\"normalResolve\");\n\tresolver.ensureHook(\"internal\");\n\tresolver.ensureHook(\"rawModule\");\n\tresolver.ensureHook(\"module\");\n\tresolver.ensureHook(\"resolveAsModule\");\n\tresolver.ensureHook(\"undescribedResolveInPackage\");\n\tresolver.ensureHook(\"resolveInPackage\");\n\tresolver.ensureHook(\"resolveInExistingDirectory\");\n\tresolver.ensureHook(\"relative\");\n\tresolver.ensureHook(\"describedRelative\");\n\tresolver.ensureHook(\"directory\");\n\tresolver.ensureHook(\"undescribedExistingDirectory\");\n\tresolver.ensureHook(\"existingDirectory\");\n\tresolver.ensureHook(\"undescribedRawFile\");\n\tresolver.ensureHook(\"rawFile\");\n\tresolver.ensureHook(\"file\");\n\tresolver.ensureHook(\"finalFile\");\n\tresolver.ensureHook(\"existingFile\");\n\tresolver.ensureHook(\"resolved\");\n\n\t// TODO remove in next major\n\t// cspell:word Interal\n\t// Backward-compat\n\t// @ts-ignore\n\tresolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve;\n\n\t// resolve\n\tfor (const { source, resolveOptions } of [\n\t\t{ source: \"resolve\", resolveOptions: { fullySpecified } },\n\t\t{ source: \"internal-resolve\", resolveOptions: { fullySpecified: false } }\n\t]) {\n\t\tif (unsafeCache) {\n\t\t\tplugins.push(\n\t\t\t\tnew UnsafeCachePlugin(\n\t\t\t\t\tsource,\n\t\t\t\t\tcachePredicate,\n\t\t\t\t\t/** @type {import(\"./UnsafeCachePlugin\").Cache} */ (unsafeCache),\n\t\t\t\t\tcacheWithContext,\n\t\t\t\t\t`new-${source}`\n\t\t\t\t)\n\t\t\t);\n\t\t\tplugins.push(\n\t\t\t\tnew ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\")\n\t\t\t);\n\t\t} else {\n\t\t\tplugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n\t\t}\n\t}\n\n\t// parsed-resolve\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"parsed-resolve\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"described-resolve\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\"));\n\n\t// described-resolve\n\tplugins.push(new NextPlugin(\"described-resolve\", \"raw-resolve\"));\n\tif (fallback.length > 0) {\n\t\tplugins.push(\n\t\t\tnew AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\")\n\t\t);\n\t}\n\n\t// raw-resolve\n\tif (alias.length > 0) {\n\t\tplugins.push(new AliasPlugin(\"raw-resolve\", alias, \"internal-resolve\"));\n\t}\n\taliasFields.forEach(item => {\n\t\tplugins.push(new AliasFieldPlugin(\"raw-resolve\", item, \"internal-resolve\"));\n\t});\n\textensionAlias.forEach(item =>\n\t\tplugins.push(\n\t\t\tnew ExtensionAliasPlugin(\"raw-resolve\", item, \"normal-resolve\")\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"raw-resolve\", \"normal-resolve\"));\n\n\t// normal-resolve\n\tif (preferRelative) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ module: true },\n\t\t\t\"resolve as module\",\n\t\t\tfalse,\n\t\t\t\"raw-module\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ internal: true },\n\t\t\t\"resolve as internal import\",\n\t\t\tfalse,\n\t\t\t\"internal\"\n\t\t)\n\t);\n\tif (preferAbsolute) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tif (roots.size > 0) {\n\t\tplugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n\t}\n\tif (!preferRelative && !preferAbsolute) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\n\t// internal\n\timportsFields.forEach(importsField => {\n\t\tplugins.push(\n\t\t\tnew ImportsFieldPlugin(\n\t\t\t\t\"internal\",\n\t\t\t\tconditionNames,\n\t\t\t\timportsField,\n\t\t\t\t\"relative\",\n\t\t\t\t\"internal-resolve\"\n\t\t\t)\n\t\t);\n\t});\n\n\t// raw-module\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\")\n\t\t);\n\t});\n\tmodules.forEach(item => {\n\t\tif (Array.isArray(item)) {\n\t\t\tif (item.includes(\"node_modules\") && pnpApi) {\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\n\t\t\t\t\t\t\"raw-module\",\n\t\t\t\t\t\titem.filter(i => i !== \"node_modules\"),\n\t\t\t\t\t\t\"module\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\")\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\n\t\t\t\t\t\t\"raw-module\",\n\t\t\t\t\t\titem,\n\t\t\t\t\t\t\"module\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tplugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n\t\t}\n\t});\n\n\t// module\n\tplugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\"));\n\n\t// resolve-as-module\n\tif (!resolveToContext) {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"resolve-as-module\",\n\t\t\t\t{ directory: false, request: \".\" },\n\t\t\t\t\"single file module\",\n\t\t\t\ttrue,\n\t\t\t\t\"undescribed-raw-file\"\n\t\t\t)\n\t\t);\n\t}\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\n\t\t\t\"resolve-as-module\",\n\t\t\t\"undescribed-resolve-in-package\"\n\t\t)\n\t);\n\n\t// undescribed-resolve-in-package\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"undescribed-resolve-in-package\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"resolve-in-package\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")\n\t);\n\n\t// resolve-in-package\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew ExportsFieldPlugin(\n\t\t\t\t\"resolve-in-package\",\n\t\t\t\tconditionNames,\n\t\t\t\texportsField,\n\t\t\t\t\"relative\"\n\t\t\t)\n\t\t);\n\t});\n\tplugins.push(\n\t\tnew NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")\n\t);\n\n\t// resolve-in-existing-directory\n\tplugins.push(\n\t\tnew JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")\n\t);\n\n\t// relative\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"relative\",\n\t\t\tdescriptionFiles,\n\t\t\ttrue,\n\t\t\t\"described-relative\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-relative\", \"described-relative\"));\n\n\t// described-relative\n\tif (resolveToContext) {\n\t\tplugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n\t} else {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ directory: false },\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ fullySpecified: false },\n\t\t\t\t\"as directory\",\n\t\t\t\ttrue,\n\t\t\t\t\"directory\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// directory\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\")\n\t);\n\n\tif (resolveToContext) {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n\t} else {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\tfalse,\n\t\t\t\t\"existing-directory\"\n\t\t\t)\n\t\t);\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\n\t\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"undescribed-raw-file\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\t// described-existing-directory\n\t\tmainFields.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew MainFieldPlugin(\n\t\t\t\t\t\"existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"resolve-in-existing-directory\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\")\n\t\t\t);\n\t\t});\n\n\t\t// undescribed-raw-file\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-raw-file\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\"));\n\n\t\t// raw-file\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"raw-file\",\n\t\t\t\t{ fullySpecified: true },\n\t\t\t\tnull,\n\t\t\t\tfalse,\n\t\t\t\t\"file\"\n\t\t\t)\n\t\t);\n\t\tif (!enforceExtension) {\n\t\t\tplugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n\t\t}\n\t\textensions.forEach(item => {\n\t\t\tplugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n\t\t});\n\n\t\t// file\n\t\tif (alias.length > 0)\n\t\t\tplugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n\t\taliasFields.forEach(item => {\n\t\t\tplugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n\t\t});\n\t\tplugins.push(new NextPlugin(\"file\", \"final-file\"));\n\n\t\t// final-file\n\t\tplugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\"));\n\n\t\t// existing-file\n\t\tif (symlinks)\n\t\t\tplugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n\t\tplugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n\t}\n\n\tconst resolved =\n\t\t/** @type {KnownHooks & EnsuredHooks} */\n\t\t(resolver.hooks).resolved;\n\n\t// resolved\n\tif (restrictions.size > 0) {\n\t\tplugins.push(new RestrictionsPlugin(resolved, restrictions));\n\t}\n\n\tplugins.push(new ResultPlugin(resolved));\n\n\t//// RESOLVER ////\n\n\tfor (const plugin of plugins) {\n\t\tif (typeof plugin === \"function\") {\n\t\t\t/** @type {function(this: Resolver, Resolver): void} */\n\t\t\t(plugin).call(resolver, resolver);\n\t\t} else if (plugin) {\n\t\t\tplugin.apply(resolver);\n\t\t}\n\t}\n\n\treturn resolver;\n};\n\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\nfunction mergeFilteredToArray(array, filter) {\n\t/** @type {Array<string | string[]>} */\n\tconst result = [];\n\tconst set = new Set(array);\n\n\tfor (const item of set) {\n\t\tif (filter(item)) {\n\t\t\tconst lastElement =\n\t\t\t\tresult.length > 0 ? result[result.length - 1] : undefined;\n\t\t\tif (Array.isArray(lastElement)) {\n\t\t\t\tlastElement.push(item);\n\t\t\t} else {\n\t\t\t\tresult.push([item]);\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(item);\n\t\t}\n\t}\n\n\treturn result;\n}\n"]},"metadata":{},"sourceType":"script"}