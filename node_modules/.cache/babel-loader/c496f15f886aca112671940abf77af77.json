{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\n\nconst makeSerializable = require(\"../util/makeSerializable\");\n\nconst NullDependency = require(\"./NullDependency\");\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n\n/** @typedef {import(\"../Dependency\")} Dependency */\n\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\n\nclass RequireHeaderDependency extends NullDependency {\n  /**\n   * @param {Range} range range\n   */\n  constructor(range) {\n    super();\n    if (!Array.isArray(range)) throw new Error(\"range must be valid\");\n    this.range = range;\n  }\n  /**\n   * @param {ObjectSerializerContext} context context\n   */\n\n\n  serialize(context) {\n    const {\n      write\n    } = context;\n    write(this.range);\n    super.serialize(context);\n  }\n  /**\n   * @param {ObjectDeserializerContext} context context\n   * @returns {RequireHeaderDependency} RequireHeaderDependency\n   */\n\n\n  static deserialize(context) {\n    const obj = new RequireHeaderDependency(context.read());\n    obj.deserialize(context);\n    return obj;\n  }\n\n}\n\nmakeSerializable(RequireHeaderDependency, \"webpack/lib/dependencies/RequireHeaderDependency\");\nRequireHeaderDependency.Template = class RequireHeaderDependencyTemplate extends NullDependency.Template {\n  /**\n   * @param {Dependency} dependency the dependency for which the template should be applied\n   * @param {ReplaceSource} source the current replace source which can be modified\n   * @param {DependencyTemplateContext} templateContext the context object\n   * @returns {void}\n   */\n  apply(dependency, source, _ref) {\n    let {\n      runtimeRequirements\n    } = _ref;\n    const dep =\n    /** @type {RequireHeaderDependency} */\n    dependency;\n    runtimeRequirements.add(RuntimeGlobals.require);\n    source.replace(dep.range[0], dep.range[1] - 1, RuntimeGlobals.require);\n  }\n\n};\nmodule.exports = RequireHeaderDependency;","map":{"version":3,"sources":["/Users/zachjohnson/Desktop/ChatNYT/node_modules/webpack/lib/dependencies/RequireHeaderDependency.js"],"names":["RuntimeGlobals","require","makeSerializable","NullDependency","RequireHeaderDependency","constructor","range","Array","isArray","Error","serialize","context","write","deserialize","obj","read","Template","RequireHeaderDependencyTemplate","apply","dependency","source","runtimeRequirements","dep","add","replace","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,0BAAD,CAAhC;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,kBAAD,CAA9B;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,MAAMG,uBAAN,SAAsCD,cAAtC,CAAqD;AACpD;AACD;AACA;AACCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB;AACA,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B,MAAM,IAAIG,KAAJ,CAAU,qBAAV,CAAN;AAC3B,SAAKH,KAAL,GAAaA,KAAb;AACA;AAED;AACD;AACA;;;AACCI,EAAAA,SAAS,CAACC,OAAD,EAAU;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAYD,OAAlB;AACAC,IAAAA,KAAK,CAAC,KAAKN,KAAN,CAAL;AACA,UAAMI,SAAN,CAAgBC,OAAhB;AACA;AAED;AACD;AACA;AACA;;;AACmB,SAAXE,WAAW,CAACF,OAAD,EAAU;AAC3B,UAAMG,GAAG,GAAG,IAAIV,uBAAJ,CAA4BO,OAAO,CAACI,IAAR,EAA5B,CAAZ;AACAD,IAAAA,GAAG,CAACD,WAAJ,CAAgBF,OAAhB;AACA,WAAOG,GAAP;AACA;;AA3BmD;;AA8BrDZ,gBAAgB,CACfE,uBADe,EAEf,kDAFe,CAAhB;AAKAA,uBAAuB,CAACY,QAAxB,GAAmC,MAAMC,+BAAN,SAClCd,cAAc,CAACa,QADmB,CAEjC;AACD;AACD;AACA;AACA;AACA;AACA;AACCE,EAAAA,KAAK,CAACC,UAAD,EAAaC,MAAb,QAA8C;AAAA,QAAzB;AAAEC,MAAAA;AAAF,KAAyB;AAClD,UAAMC,GAAG;AAAG;AAAwCH,IAAAA,UAApD;AACAE,IAAAA,mBAAmB,CAACE,GAApB,CAAwBvB,cAAc,CAACC,OAAvC;AACAmB,IAAAA,MAAM,CAACI,OAAP,CAAeF,GAAG,CAAChB,KAAJ,CAAU,CAAV,CAAf,EAA6BgB,GAAG,CAAChB,KAAJ,CAAU,CAAV,IAAe,CAA5C,EAA+CN,cAAc,CAACC,OAA9D;AACA;;AAXA,CAFF;AAgBAwB,MAAM,CAACC,OAAP,GAAiBtB,uBAAjB","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst RuntimeGlobals = require(\"../RuntimeGlobals\");\nconst makeSerializable = require(\"../util/makeSerializable\");\nconst NullDependency = require(\"./NullDependency\");\n\n/** @typedef {import(\"webpack-sources\").ReplaceSource} ReplaceSource */\n/** @typedef {import(\"../Dependency\")} Dependency */\n/** @typedef {import(\"../DependencyTemplate\").DependencyTemplateContext} DependencyTemplateContext */\n/** @typedef {import(\"../javascript/JavascriptParser\").Range} Range */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectDeserializerContext} ObjectDeserializerContext */\n/** @typedef {import(\"../serialization/ObjectMiddleware\").ObjectSerializerContext} ObjectSerializerContext */\n\nclass RequireHeaderDependency extends NullDependency {\n\t/**\n\t * @param {Range} range range\n\t */\n\tconstructor(range) {\n\t\tsuper();\n\t\tif (!Array.isArray(range)) throw new Error(\"range must be valid\");\n\t\tthis.range = range;\n\t}\n\n\t/**\n\t * @param {ObjectSerializerContext} context context\n\t */\n\tserialize(context) {\n\t\tconst { write } = context;\n\t\twrite(this.range);\n\t\tsuper.serialize(context);\n\t}\n\n\t/**\n\t * @param {ObjectDeserializerContext} context context\n\t * @returns {RequireHeaderDependency} RequireHeaderDependency\n\t */\n\tstatic deserialize(context) {\n\t\tconst obj = new RequireHeaderDependency(context.read());\n\t\tobj.deserialize(context);\n\t\treturn obj;\n\t}\n}\n\nmakeSerializable(\n\tRequireHeaderDependency,\n\t\"webpack/lib/dependencies/RequireHeaderDependency\"\n);\n\nRequireHeaderDependency.Template = class RequireHeaderDependencyTemplate extends (\n\tNullDependency.Template\n) {\n\t/**\n\t * @param {Dependency} dependency the dependency for which the template should be applied\n\t * @param {ReplaceSource} source the current replace source which can be modified\n\t * @param {DependencyTemplateContext} templateContext the context object\n\t * @returns {void}\n\t */\n\tapply(dependency, source, { runtimeRequirements }) {\n\t\tconst dep = /** @type {RequireHeaderDependency} */ (dependency);\n\t\truntimeRequirements.add(RuntimeGlobals.require);\n\t\tsource.replace(dep.range[0], dep.range[1] - 1, RuntimeGlobals.require);\n\t}\n};\n\nmodule.exports = RequireHeaderDependency;\n"]},"metadata":{},"sourceType":"script"}